MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "07 de marzo de 2021" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "14H13" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Log de puntuación";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Log de puntuación
Fecha:                07 de marzo de 2021
Hora:                14H13
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O20F9LQK "C:\Jose\DM_ang\Workspaces\EMWS1\Impt\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O20F9LQK new;
MPRINT(EM_DIAGRAM):   run;
24520      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
24521      set EMWS1.Impt_META end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_META end=eof;
24522      length string $34;
MPRINT(EM_DIAGRAM):   length string $34;
24523      retain missTotal;
MPRINT(EM_DIAGRAM):   retain missTotal;
24524      file #LN00350;
MPRINT(EM_DIAGRAM):   file #LN00350;
24525      if _n_=1 then misstotal = percentmiss;
MPRINT(EM_DIAGRAM):   if _n_=1 then misstotal = percentmiss;
24526      missTotal = percentmiss+misstotal;
MPRINT(EM_DIAGRAM):   missTotal = percentmiss+misstotal;
24527      if IMP ne '' and METHOD ne 'NONE' then do;
MPRINT(EM_DIAGRAM):   if IMP ne '' and METHOD ne 'NONE' then do;
24528      string = '"'!!strip(NAME)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(NAME)!!'"';
24529      put 'if NAME = ' string 'then delete;';
MPRINT(EM_DIAGRAM):   put 'if NAME = ' string 'then delete;';
24530      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
24531      string = '"'!!strip(IMP)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(IMP)!!'"';
24532      put 'if NAME    = ' string ' then do;';
MPRINT(EM_DIAGRAM):   put 'if NAME    = ' string ' then do;';
24533      string = '"'!!strip(ROLE)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(ROLE)!!'"';
24534      put '   ROLE    = ' string ';';
MPRINT(EM_DIAGRAM):   put '   ROLE    = ' string ';';
24535      string = '"'!!strip(FAMILY)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(FAMILY)!!'"';
24536      put '   FAMILY  = ' string ';';
MPRINT(EM_DIAGRAM):   put '   FAMILY  = ' string ';';
24537      string = '"'!!strip(REPORT)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(REPORT)!!'"';
24538      put '   REPORT  = ' string ';';
MPRINT(EM_DIAGRAM):   put '   REPORT  = ' string ';';
24539      string = '"'!!strip(LEVEL)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(LEVEL)!!'"';
24540      put '   LEVEL   = ' string ';';
MPRINT(EM_DIAGRAM):   put '   LEVEL   = ' string ';';
24541      string = '"'!!strip(ORDER)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(ORDER)!!'"';
24542      put '   ORDER   = ' string ';';
MPRINT(EM_DIAGRAM):   put '   ORDER   = ' string ';';
24543      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24544      end;
MPRINT(EM_DIAGRAM):   end;
24545      if percentmiss>50 and ROLE ne 'TARGET' then do;
MPRINT(EM_DIAGRAM):   if percentmiss>50 and ROLE ne 'TARGET' then do;
24546      string = '"'!!strip(NAME)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(NAME)!!'"';
24547      put 'if NAME = ' string ' then do;';
MPRINT(EM_DIAGRAM):   put 'if NAME = ' string ' then do;';
24548      put '   ROLE ="REJECTED";';
MPRINT(EM_DIAGRAM):   put '   ROLE ="REJECTED";';
24549      put '   COMMENT = "Percent of missing exceeds 50%";';
MPRINT(EM_DIAGRAM):   put '   COMMENT = "Percent of missing exceeds 50%";';
24550      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
24551      end;
MPRINT(EM_DIAGRAM):   end;
24552      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The file #LN00350 is:
      Filename=C:\Jose\DM_ang\Workspaces\EMWS1\Impt\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=07 de marzo de 2021 14H13,
      Create Time=07 de marzo de 2021 14H07

NOTE: 63 records were written to the file #LN00350.
      The minimum record length was 4.
      The maximum record length was 36.
NOTE: There were 8 observations read from the data set EMWS1.IMPT_META.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

24553      filename emflow "C:\Jose\DM_ang\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Jose\DM_ang\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24554      *------------------------------------------------------------*;
24555      * Impt: Scoring DATA data;
24556      *------------------------------------------------------------*;
24557      data EMWS1.Impt_TRAIN
24558      / view=EMWS1.Impt_TRAIN
24559      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_TRAIN / view=EMWS1.Impt_TRAIN ;
24560      set EMWS1.VarClus_TRAIN
24561      ;
MPRINT(EM_DIAGRAM):   set EMWS1.VarClus_TRAIN ;
24562      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Jose\DM_ang\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas.
24563     +*;
MPRINT(EM_DIAGRAM):   *;
24564     +*DISTRIBUTION-BASED IMPUTATION: CLASS VARIABLES;
MPRINT(EM_DIAGRAM):   *DISTRIBUTION-BASED IMPUTATION: CLASS VARIABLES;
24565     +*;
MPRINT(EM_DIAGRAM):   *;
24566     +*;
MPRINT(EM_DIAGRAM):   *;
24567     +* IMPUTE VARIABLE: DELINQ;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: DELINQ;
24568     +*;
MPRINT(EM_DIAGRAM):   *;
24569     +length IMP_DELINQ 8;
MPRINT(EM_DIAGRAM):   length IMP_DELINQ 8;
24570     +label IMP_DELINQ = 'Imputed DELINQ';
MPRINT(EM_DIAGRAM):   label IMP_DELINQ = 'Imputed DELINQ';
24571     +IMP_DELINQ = DELINQ;
MPRINT(EM_DIAGRAM):   IMP_DELINQ = DELINQ;
24572     +IF missing(DELINQ) THEN DO;
MPRINT(EM_DIAGRAM):   IF missing(DELINQ) THEN DO;
24573     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24574     +if _random_ <= 0.78154075176777 then IMP_DELINQ = 0;
MPRINT(EM_DIAGRAM):   if _random_ <= 0.78154075176777 then IMP_DELINQ = 0;
24575     +else if _random_ <= 0.89877186453293 then IMP_DELINQ = 1;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.89877186453293 then IMP_DELINQ = 1;
24576     +else if _random_ <= 0.94119836248604 then IMP_DELINQ = 2;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.94119836248604 then IMP_DELINQ = 2;
24577     +else if _random_ <= 0.96613323409006 then IMP_DELINQ = 3;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.96613323409006 then IMP_DELINQ = 3;
24578     +else if _random_ <= 0.98064756233717 then IMP_DELINQ = 4;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.98064756233717 then IMP_DELINQ = 4;
24579     +else if _random_ <= 0.98697432080387 then IMP_DELINQ = 5;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.98697432080387 then IMP_DELINQ = 5;
24580     +else if _random_ <= 0.99330107927056 then IMP_DELINQ = 6;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99330107927056 then IMP_DELINQ = 6;
24581     +else if _random_ <= 0.99702270189802 then IMP_DELINQ = 7;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99702270189802 then IMP_DELINQ = 7;
24582     +else if _random_ <= 0.99813918868626 then IMP_DELINQ = 8;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99813918868626 then IMP_DELINQ = 8;
24583     +else if _random_ <= 0.99851135094901 then IMP_DELINQ = 10;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99851135094901 then IMP_DELINQ = 10;
24584     +else if _random_ <= 0.99888351321176 then IMP_DELINQ = 11;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99888351321176 then IMP_DELINQ = 11;
24585     +else if _random_ <= 0.9992556754745 then IMP_DELINQ = 12;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.9992556754745 then IMP_DELINQ = 12;
24586     +else if _random_ <= 0.99962783773725 then IMP_DELINQ = 13;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99962783773725 then IMP_DELINQ = 13;
24587     +else IMP_DELINQ = 15;
MPRINT(EM_DIAGRAM):   else IMP_DELINQ = 15;
24588     +END;
MPRINT(EM_DIAGRAM):   END;
24589     +*;
MPRINT(EM_DIAGRAM):   *;
24590     +* IMPUTE VARIABLE: DEROG;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: DEROG;
24591     +*;
MPRINT(EM_DIAGRAM):   *;
24592     +length IMP_DEROG 8;
MPRINT(EM_DIAGRAM):   length IMP_DEROG 8;
24593     +label IMP_DEROG = 'Imputed DEROG';
MPRINT(EM_DIAGRAM):   label IMP_DEROG = 'Imputed DEROG';
24594     +IMP_DEROG = DEROG;
MPRINT(EM_DIAGRAM):   IMP_DEROG = DEROG;
24595     +IF missing(DEROG) THEN DO;
MPRINT(EM_DIAGRAM):   IF missing(DEROG) THEN DO;
24596     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24597     +if _random_ <= 0.86638751427483 then IMP_DEROG = 0;
MPRINT(EM_DIAGRAM):   if _random_ <= 0.86638751427483 then IMP_DEROG = 0;
24598     +else if _random_ <= 0.94632660829843 then IMP_DEROG = 1;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.94632660829843 then IMP_DEROG = 1;
24599     +else if _random_ <= 0.97754092120289 then IMP_DEROG = 2;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.97754092120289 then IMP_DEROG = 2;
24600     +else if _random_ <= 0.9885801294252 then IMP_DEROG = 3;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.9885801294252 then IMP_DEROG = 3;
24601     +else if _random_ <= 0.99238675295013 then IMP_DEROG = 4;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99238675295013 then IMP_DEROG = 4;
24602     +else if _random_ <= 0.99543205177008 then IMP_DEROG = 5;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99543205177008 then IMP_DEROG = 5;
24603     +else if _random_ <= 0.99657403882756 then IMP_DEROG = 6;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99657403882756 then IMP_DEROG = 6;
24604     +else if _random_ <= 0.99771602588504 then IMP_DEROG = 7;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99771602588504 then IMP_DEROG = 7;
24605     +else if _random_ <= 0.99885801294252 then IMP_DEROG = 8;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99885801294252 then IMP_DEROG = 8;
24606     +else if _random_ <= 0.99923867529501 then IMP_DEROG = 9;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99923867529501 then IMP_DEROG = 9;
24607     +else IMP_DEROG = 10;
MPRINT(EM_DIAGRAM):   else IMP_DEROG = 10;
24608     +END;
MPRINT(EM_DIAGRAM):   END;
24609     +*;
MPRINT(EM_DIAGRAM):   *;
24610     +* IMPUTE VARIABLE: JOB;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: JOB;
24611     +*;
MPRINT(EM_DIAGRAM):   *;
24612     +length IMP_JOB $7;
MPRINT(EM_DIAGRAM):   length IMP_JOB $7;
24613     +label IMP_JOB = 'Imputed JOB';
MPRINT(EM_DIAGRAM):   label IMP_JOB = 'Imputed JOB';
24614     +IMP_JOB = JOB;
MPRINT(EM_DIAGRAM):   IMP_JOB = JOB;
24615     +IF JOB eq '' THEN DO;
MPRINT(EM_DIAGRAM):   IF JOB eq '' THEN DO;
24616     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24617     +if _random_ <= 0.1275546159267 then IMP_JOB = 'Mgr';
MPRINT(EM_DIAGRAM):   if _random_ <= 0.1275546159267 then IMP_JOB = 'Mgr';
24618     +else if _random_ <= 0.3030303030303 then IMP_JOB = 'Office';
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.3030303030303 then IMP_JOB = 'Office';
24619     +else if _random_ <= 0.7276250880902 then IMP_JOB = 'Other';
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.7276250880902 then IMP_JOB = 'Other';
24620     +else if _random_ <= 0.94291754756871 then IMP_JOB = 'ProfExe';
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.94291754756871 then IMP_JOB = 'ProfExe';
24621     +else if _random_ <= 0.96053558844256 then IMP_JOB = 'Sales';
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.96053558844256 then IMP_JOB = 'Sales';
24622     +else IMP_JOB = 'Self';
MPRINT(EM_DIAGRAM):   else IMP_JOB = 'Self';
24623     +END;
MPRINT(EM_DIAGRAM):   END;
24624     +*;
MPRINT(EM_DIAGRAM):   *;
24625     +* IMPUTE VARIABLE: NINQ;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: NINQ;
24626     +*;
MPRINT(EM_DIAGRAM):   *;
24627     +length IMP_NINQ 8;
MPRINT(EM_DIAGRAM):   length IMP_NINQ 8;
24628     +label IMP_NINQ = 'Imputed NINQ';
MPRINT(EM_DIAGRAM):   label IMP_NINQ = 'Imputed NINQ';
24629     +IMP_NINQ = NINQ;
MPRINT(EM_DIAGRAM):   IMP_NINQ = NINQ;
24630     +IF missing(NINQ) THEN DO;
MPRINT(EM_DIAGRAM):   IF missing(NINQ) THEN DO;
24631     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24632     +if _random_ <= 0.4735294117647 then IMP_NINQ = 0;
MPRINT(EM_DIAGRAM):   if _random_ <= 0.4735294117647 then IMP_NINQ = 0;
24633     +else if _random_ <= 0.71911764705882 then IMP_NINQ = 1;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.71911764705882 then IMP_NINQ = 1;
24634     +else if _random_ <= 0.85330882352941 then IMP_NINQ = 2;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.85330882352941 then IMP_NINQ = 2;
24635     +else if _random_ <= 0.9297794117647 then IMP_NINQ = 3;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.9297794117647 then IMP_NINQ = 3;
24636     +else if _random_ <= 0.95588235294117 then IMP_NINQ = 4;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.95588235294117 then IMP_NINQ = 4;
24637     +else if _random_ <= 0.96985294117647 then IMP_NINQ = 5;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.96985294117647 then IMP_NINQ = 5;
24638     +else if _random_ <= 0.97830882352941 then IMP_NINQ = 6;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.97830882352941 then IMP_NINQ = 6;
24639     +else if _random_ <= 0.9860294117647 then IMP_NINQ = 7;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.9860294117647 then IMP_NINQ = 7;
24640     +else if _random_ <= 0.99044117647058 then IMP_NINQ = 8;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99044117647058 then IMP_NINQ = 8;
24641     +else if _random_ <= 0.99264705882352 then IMP_NINQ = 9;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99264705882352 then IMP_NINQ = 9;
24642     +else if _random_ <= 0.99632352941176 then IMP_NINQ = 10;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99632352941176 then IMP_NINQ = 10;
24643     +else if _random_ <= 0.99889705882352 then IMP_NINQ = 11;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99889705882352 then IMP_NINQ = 11;
24644     +else if _random_ <= 0.99926470588235 then IMP_NINQ = 12;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99926470588235 then IMP_NINQ = 12;
24645     +else if _random_ <= 0.99963235294117 then IMP_NINQ = 13;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99963235294117 then IMP_NINQ = 13;
24646     +else IMP_NINQ = 14;
MPRINT(EM_DIAGRAM):   else IMP_NINQ = 14;
24647     +END;
MPRINT(EM_DIAGRAM):   END;
24648     +*;
MPRINT(EM_DIAGRAM):   *;
24649     +* IMPUTE VARIABLE: REASON;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: REASON;
24650     +*;
MPRINT(EM_DIAGRAM):   *;
24651     +length IMP_REASON $7;
MPRINT(EM_DIAGRAM):   length IMP_REASON $7;
24652     +label IMP_REASON = 'Imputed REASON';
MPRINT(EM_DIAGRAM):   label IMP_REASON = 'Imputed REASON';
24653     +IMP_REASON = REASON;
MPRINT(EM_DIAGRAM):   IMP_REASON = REASON;
24654     +IF REASON eq '' THEN DO;
MPRINT(EM_DIAGRAM):   IF REASON eq '' THEN DO;
24655     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24656     +if _random_ <= 0.68679775280898 then IMP_REASON = 'DebtCon';
MPRINT(EM_DIAGRAM):   if _random_ <= 0.68679775280898 then IMP_REASON = 'DebtCon';
24657     +else IMP_REASON = 'HomeImp';
MPRINT(EM_DIAGRAM):   else IMP_REASON = 'HomeImp';
24658     +END;
MPRINT(EM_DIAGRAM):   END;
24659     +*;
MPRINT(EM_DIAGRAM):   *;
24660     +*DISTRIBUTION-BASED IMPUTATION: Interval VARIABLES;
MPRINT(EM_DIAGRAM):   *DISTRIBUTION-BASED IMPUTATION: Interval VARIABLES;
24661     +*;
MPRINT(EM_DIAGRAM):   *;
24662     +*;
MPRINT(EM_DIAGRAM):   *;
24663     +* IMPUTE VARIABLE: DEBTINC;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: DEBTINC;
24664     +*;
MPRINT(EM_DIAGRAM):   *;
24665     +label IMP_DEBTINC = 'Imputed DEBTINC';
MPRINT(EM_DIAGRAM):   label IMP_DEBTINC = 'Imputed DEBTINC';
24666     +IMP_DEBTINC = DEBTINC;
MPRINT(EM_DIAGRAM):   IMP_DEBTINC = DEBTINC;
24667     +IF missing(DEBTINC) THEN DO;
MPRINT(EM_DIAGRAM):   IF missing(DEBTINC) THEN DO;
24668     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24669     +if _random_ <= 0.01 then IMP_DEBTINC = 0.52449921542988;
MPRINT(EM_DIAGRAM):   if _random_ <= 0.01 then IMP_DEBTINC = 0.52449921542988;
24670     +else if _random_ <= 0.1 then IMP_DEBTINC = 12.391235037074;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.1 then IMP_DEBTINC = 12.391235037074;
24671     +else if _random_ <= 0.10 then IMP_DEBTINC = 23.8759461858942;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.10 then IMP_DEBTINC = 23.8759461858942;
24672     +else if _random_ <= 0.20 then IMP_DEBTINC = 27.5737365036382;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.20 then IMP_DEBTINC = 27.5737365036382;
24673     +else if _random_ <= 0.25 then IMP_DEBTINC = 28.8724263899319;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.25 then IMP_DEBTINC = 28.8724263899319;
24674     +else if _random_ <= 0.30 then IMP_DEBTINC = 30.0627923226322;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.30 then IMP_DEBTINC = 30.0627923226322;
24675     +else if _random_ <= 0.40 then IMP_DEBTINC = 32.7403684932786;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.40 then IMP_DEBTINC = 32.7403684932786;
24676     +else if _random_ <= 0.50 then IMP_DEBTINC = 34.7310761753172;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.50 then IMP_DEBTINC = 34.7310761753172;
24677     +else if _random_ <= 0.60 then IMP_DEBTINC = 36.6692786120713;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.60 then IMP_DEBTINC = 36.6692786120713;
24678     +else if _random_ <= 0.75 then IMP_DEBTINC = 39.2048627164516;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.75 then IMP_DEBTINC = 39.2048627164516;
24679     +else if _random_ <= 0.80 then IMP_DEBTINC = 39.9901883613924;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.80 then IMP_DEBTINC = 39.9901883613924;
24680     +else if _random_ <= 0.90 then IMP_DEBTINC = 41.4250413900451;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.90 then IMP_DEBTINC = 41.4250413900451;
24681     +else if _random_ <= 0.99 then IMP_DEBTINC = 48.2775912244234;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99 then IMP_DEBTINC = 48.2775912244234;
24682     +else IMP_DEBTINC = 203.312148691165;
MPRINT(EM_DIAGRAM):   else IMP_DEBTINC = 203.312148691165;
24683     +END;
MPRINT(EM_DIAGRAM):   END;
24684     +*;
MPRINT(EM_DIAGRAM):   *;
24685     +* IMPUTE VARIABLE: VALUE;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: VALUE;
24686     +*;
MPRINT(EM_DIAGRAM):   *;
24687     +label IMP_VALUE = 'Imputed VALUE';
MPRINT(EM_DIAGRAM):   label IMP_VALUE = 'Imputed VALUE';
24688     +IMP_VALUE = VALUE;
MPRINT(EM_DIAGRAM):   IMP_VALUE = VALUE;
24689     +IF missing(VALUE) THEN DO;
MPRINT(EM_DIAGRAM):   IF missing(VALUE) THEN DO;
24690     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24691     +if _random_ <= 0.01 then IMP_VALUE = 8000;
MPRINT(EM_DIAGRAM):   if _random_ <= 0.01 then IMP_VALUE = 8000;
24692     +else if _random_ <= 0.1 then IMP_VALUE = 27439;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.1 then IMP_VALUE = 27439;
24693     +else if _random_ <= 0.10 then IMP_VALUE = 49843;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.10 then IMP_VALUE = 49843;
24694     +else if _random_ <= 0.20 then IMP_VALUE = 61978;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.20 then IMP_VALUE = 61978;
24695     +else if _random_ <= 0.25 then IMP_VALUE = 66345;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.25 then IMP_VALUE = 66345;
24696     +else if _random_ <= 0.30 then IMP_VALUE = 70207;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.30 then IMP_VALUE = 70207;
24697     +else if _random_ <= 0.40 then IMP_VALUE = 80000;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.40 then IMP_VALUE = 80000;
24698     +else if _random_ <= 0.50 then IMP_VALUE = 89107;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.50 then IMP_VALUE = 89107;
24699     +else if _random_ <= 0.60 then IMP_VALUE = 99641;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.60 then IMP_VALUE = 99641;
24700     +else if _random_ <= 0.75 then IMP_VALUE = 121714;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.75 then IMP_VALUE = 121714;
24701     +else if _random_ <= 0.80 then IMP_VALUE = 134996;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.80 then IMP_VALUE = 134996;
24702     +else if _random_ <= 0.90 then IMP_VALUE = 176244;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.90 then IMP_VALUE = 176244;
24703     +else if _random_ <= 0.99 then IMP_VALUE = 289260;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99 then IMP_VALUE = 289260;
24704     +else IMP_VALUE = 855909;
MPRINT(EM_DIAGRAM):   else IMP_VALUE = 855909;
24705     +END;
MPRINT(EM_DIAGRAM):   END;
24706     +drop _random_;
MPRINT(EM_DIAGRAM):   drop _random_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
24707      run;

NOTE: DATA STEP view saved on file EMWS1.IMPT_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.VARCLUS_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
24708      quit;
24709      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
24710      filename emflow "C:\Jose\DM_ang\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Jose\DM_ang\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24711      *------------------------------------------------------------*;
24712      * Impt: Scoring VALIDATE data;
24713      *------------------------------------------------------------*;
24714      data EMWS1.Impt_VALIDATE
24715      / view=EMWS1.Impt_VALIDATE
24716      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_VALIDATE / view=EMWS1.Impt_VALIDATE ;
24717      set EMWS1.VarClus_VALIDATE
24718      ;
MPRINT(EM_DIAGRAM):   set EMWS1.VarClus_VALIDATE ;
24719      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Jose\DM_ang\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas.
24720     +*;
MPRINT(EM_DIAGRAM):   *;
24721     +*DISTRIBUTION-BASED IMPUTATION: CLASS VARIABLES;
MPRINT(EM_DIAGRAM):   *DISTRIBUTION-BASED IMPUTATION: CLASS VARIABLES;
24722     +*;
MPRINT(EM_DIAGRAM):   *;
24723     +*;
MPRINT(EM_DIAGRAM):   *;
24724     +* IMPUTE VARIABLE: DELINQ;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: DELINQ;
24725     +*;
MPRINT(EM_DIAGRAM):   *;
24726     +length IMP_DELINQ 8;
MPRINT(EM_DIAGRAM):   length IMP_DELINQ 8;
24727     +label IMP_DELINQ = 'Imputed DELINQ';
MPRINT(EM_DIAGRAM):   label IMP_DELINQ = 'Imputed DELINQ';
24728     +IMP_DELINQ = DELINQ;
MPRINT(EM_DIAGRAM):   IMP_DELINQ = DELINQ;
24729     +IF missing(DELINQ) THEN DO;
MPRINT(EM_DIAGRAM):   IF missing(DELINQ) THEN DO;
24730     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24731     +if _random_ <= 0.78154075176777 then IMP_DELINQ = 0;
MPRINT(EM_DIAGRAM):   if _random_ <= 0.78154075176777 then IMP_DELINQ = 0;
24732     +else if _random_ <= 0.89877186453293 then IMP_DELINQ = 1;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.89877186453293 then IMP_DELINQ = 1;
24733     +else if _random_ <= 0.94119836248604 then IMP_DELINQ = 2;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.94119836248604 then IMP_DELINQ = 2;
24734     +else if _random_ <= 0.96613323409006 then IMP_DELINQ = 3;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.96613323409006 then IMP_DELINQ = 3;
24735     +else if _random_ <= 0.98064756233717 then IMP_DELINQ = 4;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.98064756233717 then IMP_DELINQ = 4;
24736     +else if _random_ <= 0.98697432080387 then IMP_DELINQ = 5;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.98697432080387 then IMP_DELINQ = 5;
24737     +else if _random_ <= 0.99330107927056 then IMP_DELINQ = 6;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99330107927056 then IMP_DELINQ = 6;
24738     +else if _random_ <= 0.99702270189802 then IMP_DELINQ = 7;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99702270189802 then IMP_DELINQ = 7;
24739     +else if _random_ <= 0.99813918868626 then IMP_DELINQ = 8;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99813918868626 then IMP_DELINQ = 8;
24740     +else if _random_ <= 0.99851135094901 then IMP_DELINQ = 10;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99851135094901 then IMP_DELINQ = 10;
24741     +else if _random_ <= 0.99888351321176 then IMP_DELINQ = 11;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99888351321176 then IMP_DELINQ = 11;
24742     +else if _random_ <= 0.9992556754745 then IMP_DELINQ = 12;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.9992556754745 then IMP_DELINQ = 12;
24743     +else if _random_ <= 0.99962783773725 then IMP_DELINQ = 13;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99962783773725 then IMP_DELINQ = 13;
24744     +else IMP_DELINQ = 15;
MPRINT(EM_DIAGRAM):   else IMP_DELINQ = 15;
24745     +END;
MPRINT(EM_DIAGRAM):   END;
24746     +*;
MPRINT(EM_DIAGRAM):   *;
24747     +* IMPUTE VARIABLE: DEROG;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: DEROG;
24748     +*;
MPRINT(EM_DIAGRAM):   *;
24749     +length IMP_DEROG 8;
MPRINT(EM_DIAGRAM):   length IMP_DEROG 8;
24750     +label IMP_DEROG = 'Imputed DEROG';
MPRINT(EM_DIAGRAM):   label IMP_DEROG = 'Imputed DEROG';
24751     +IMP_DEROG = DEROG;
MPRINT(EM_DIAGRAM):   IMP_DEROG = DEROG;
24752     +IF missing(DEROG) THEN DO;
MPRINT(EM_DIAGRAM):   IF missing(DEROG) THEN DO;
24753     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24754     +if _random_ <= 0.86638751427483 then IMP_DEROG = 0;
MPRINT(EM_DIAGRAM):   if _random_ <= 0.86638751427483 then IMP_DEROG = 0;
24755     +else if _random_ <= 0.94632660829843 then IMP_DEROG = 1;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.94632660829843 then IMP_DEROG = 1;
24756     +else if _random_ <= 0.97754092120289 then IMP_DEROG = 2;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.97754092120289 then IMP_DEROG = 2;
24757     +else if _random_ <= 0.9885801294252 then IMP_DEROG = 3;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.9885801294252 then IMP_DEROG = 3;
24758     +else if _random_ <= 0.99238675295013 then IMP_DEROG = 4;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99238675295013 then IMP_DEROG = 4;
24759     +else if _random_ <= 0.99543205177008 then IMP_DEROG = 5;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99543205177008 then IMP_DEROG = 5;
24760     +else if _random_ <= 0.99657403882756 then IMP_DEROG = 6;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99657403882756 then IMP_DEROG = 6;
24761     +else if _random_ <= 0.99771602588504 then IMP_DEROG = 7;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99771602588504 then IMP_DEROG = 7;
24762     +else if _random_ <= 0.99885801294252 then IMP_DEROG = 8;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99885801294252 then IMP_DEROG = 8;
24763     +else if _random_ <= 0.99923867529501 then IMP_DEROG = 9;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99923867529501 then IMP_DEROG = 9;
24764     +else IMP_DEROG = 10;
MPRINT(EM_DIAGRAM):   else IMP_DEROG = 10;
24765     +END;
MPRINT(EM_DIAGRAM):   END;
24766     +*;
MPRINT(EM_DIAGRAM):   *;
24767     +* IMPUTE VARIABLE: JOB;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: JOB;
24768     +*;
MPRINT(EM_DIAGRAM):   *;
24769     +length IMP_JOB $7;
MPRINT(EM_DIAGRAM):   length IMP_JOB $7;
24770     +label IMP_JOB = 'Imputed JOB';
MPRINT(EM_DIAGRAM):   label IMP_JOB = 'Imputed JOB';
24771     +IMP_JOB = JOB;
MPRINT(EM_DIAGRAM):   IMP_JOB = JOB;
24772     +IF JOB eq '' THEN DO;
MPRINT(EM_DIAGRAM):   IF JOB eq '' THEN DO;
24773     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24774     +if _random_ <= 0.1275546159267 then IMP_JOB = 'Mgr';
MPRINT(EM_DIAGRAM):   if _random_ <= 0.1275546159267 then IMP_JOB = 'Mgr';
24775     +else if _random_ <= 0.3030303030303 then IMP_JOB = 'Office';
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.3030303030303 then IMP_JOB = 'Office';
24776     +else if _random_ <= 0.7276250880902 then IMP_JOB = 'Other';
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.7276250880902 then IMP_JOB = 'Other';
24777     +else if _random_ <= 0.94291754756871 then IMP_JOB = 'ProfExe';
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.94291754756871 then IMP_JOB = 'ProfExe';
24778     +else if _random_ <= 0.96053558844256 then IMP_JOB = 'Sales';
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.96053558844256 then IMP_JOB = 'Sales';
24779     +else IMP_JOB = 'Self';
MPRINT(EM_DIAGRAM):   else IMP_JOB = 'Self';
24780     +END;
MPRINT(EM_DIAGRAM):   END;
24781     +*;
MPRINT(EM_DIAGRAM):   *;
24782     +* IMPUTE VARIABLE: NINQ;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: NINQ;
24783     +*;
MPRINT(EM_DIAGRAM):   *;
24784     +length IMP_NINQ 8;
MPRINT(EM_DIAGRAM):   length IMP_NINQ 8;
24785     +label IMP_NINQ = 'Imputed NINQ';
MPRINT(EM_DIAGRAM):   label IMP_NINQ = 'Imputed NINQ';
24786     +IMP_NINQ = NINQ;
MPRINT(EM_DIAGRAM):   IMP_NINQ = NINQ;
24787     +IF missing(NINQ) THEN DO;
MPRINT(EM_DIAGRAM):   IF missing(NINQ) THEN DO;
24788     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24789     +if _random_ <= 0.4735294117647 then IMP_NINQ = 0;
MPRINT(EM_DIAGRAM):   if _random_ <= 0.4735294117647 then IMP_NINQ = 0;
24790     +else if _random_ <= 0.71911764705882 then IMP_NINQ = 1;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.71911764705882 then IMP_NINQ = 1;
24791     +else if _random_ <= 0.85330882352941 then IMP_NINQ = 2;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.85330882352941 then IMP_NINQ = 2;
24792     +else if _random_ <= 0.9297794117647 then IMP_NINQ = 3;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.9297794117647 then IMP_NINQ = 3;
24793     +else if _random_ <= 0.95588235294117 then IMP_NINQ = 4;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.95588235294117 then IMP_NINQ = 4;
24794     +else if _random_ <= 0.96985294117647 then IMP_NINQ = 5;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.96985294117647 then IMP_NINQ = 5;
24795     +else if _random_ <= 0.97830882352941 then IMP_NINQ = 6;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.97830882352941 then IMP_NINQ = 6;
24796     +else if _random_ <= 0.9860294117647 then IMP_NINQ = 7;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.9860294117647 then IMP_NINQ = 7;
24797     +else if _random_ <= 0.99044117647058 then IMP_NINQ = 8;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99044117647058 then IMP_NINQ = 8;
24798     +else if _random_ <= 0.99264705882352 then IMP_NINQ = 9;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99264705882352 then IMP_NINQ = 9;
24799     +else if _random_ <= 0.99632352941176 then IMP_NINQ = 10;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99632352941176 then IMP_NINQ = 10;
24800     +else if _random_ <= 0.99889705882352 then IMP_NINQ = 11;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99889705882352 then IMP_NINQ = 11;
24801     +else if _random_ <= 0.99926470588235 then IMP_NINQ = 12;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99926470588235 then IMP_NINQ = 12;
24802     +else if _random_ <= 0.99963235294117 then IMP_NINQ = 13;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99963235294117 then IMP_NINQ = 13;
24803     +else IMP_NINQ = 14;
MPRINT(EM_DIAGRAM):   else IMP_NINQ = 14;
24804     +END;
MPRINT(EM_DIAGRAM):   END;
24805     +*;
MPRINT(EM_DIAGRAM):   *;
24806     +* IMPUTE VARIABLE: REASON;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: REASON;
24807     +*;
MPRINT(EM_DIAGRAM):   *;
24808     +length IMP_REASON $7;
MPRINT(EM_DIAGRAM):   length IMP_REASON $7;
24809     +label IMP_REASON = 'Imputed REASON';
MPRINT(EM_DIAGRAM):   label IMP_REASON = 'Imputed REASON';
24810     +IMP_REASON = REASON;
MPRINT(EM_DIAGRAM):   IMP_REASON = REASON;
24811     +IF REASON eq '' THEN DO;
MPRINT(EM_DIAGRAM):   IF REASON eq '' THEN DO;
24812     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24813     +if _random_ <= 0.68679775280898 then IMP_REASON = 'DebtCon';
MPRINT(EM_DIAGRAM):   if _random_ <= 0.68679775280898 then IMP_REASON = 'DebtCon';
24814     +else IMP_REASON = 'HomeImp';
MPRINT(EM_DIAGRAM):   else IMP_REASON = 'HomeImp';
24815     +END;
MPRINT(EM_DIAGRAM):   END;
24816     +*;
MPRINT(EM_DIAGRAM):   *;
24817     +*DISTRIBUTION-BASED IMPUTATION: Interval VARIABLES;
MPRINT(EM_DIAGRAM):   *DISTRIBUTION-BASED IMPUTATION: Interval VARIABLES;
24818     +*;
MPRINT(EM_DIAGRAM):   *;
24819     +*;
MPRINT(EM_DIAGRAM):   *;
24820     +* IMPUTE VARIABLE: DEBTINC;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: DEBTINC;
24821     +*;
MPRINT(EM_DIAGRAM):   *;
24822     +label IMP_DEBTINC = 'Imputed DEBTINC';
MPRINT(EM_DIAGRAM):   label IMP_DEBTINC = 'Imputed DEBTINC';
24823     +IMP_DEBTINC = DEBTINC;
MPRINT(EM_DIAGRAM):   IMP_DEBTINC = DEBTINC;
24824     +IF missing(DEBTINC) THEN DO;
MPRINT(EM_DIAGRAM):   IF missing(DEBTINC) THEN DO;
24825     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24826     +if _random_ <= 0.01 then IMP_DEBTINC = 0.52449921542988;
MPRINT(EM_DIAGRAM):   if _random_ <= 0.01 then IMP_DEBTINC = 0.52449921542988;
24827     +else if _random_ <= 0.1 then IMP_DEBTINC = 12.391235037074;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.1 then IMP_DEBTINC = 12.391235037074;
24828     +else if _random_ <= 0.10 then IMP_DEBTINC = 23.8759461858942;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.10 then IMP_DEBTINC = 23.8759461858942;
24829     +else if _random_ <= 0.20 then IMP_DEBTINC = 27.5737365036382;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.20 then IMP_DEBTINC = 27.5737365036382;
24830     +else if _random_ <= 0.25 then IMP_DEBTINC = 28.8724263899319;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.25 then IMP_DEBTINC = 28.8724263899319;
24831     +else if _random_ <= 0.30 then IMP_DEBTINC = 30.0627923226322;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.30 then IMP_DEBTINC = 30.0627923226322;
24832     +else if _random_ <= 0.40 then IMP_DEBTINC = 32.7403684932786;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.40 then IMP_DEBTINC = 32.7403684932786;
24833     +else if _random_ <= 0.50 then IMP_DEBTINC = 34.7310761753172;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.50 then IMP_DEBTINC = 34.7310761753172;
24834     +else if _random_ <= 0.60 then IMP_DEBTINC = 36.6692786120713;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.60 then IMP_DEBTINC = 36.6692786120713;
24835     +else if _random_ <= 0.75 then IMP_DEBTINC = 39.2048627164516;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.75 then IMP_DEBTINC = 39.2048627164516;
24836     +else if _random_ <= 0.80 then IMP_DEBTINC = 39.9901883613924;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.80 then IMP_DEBTINC = 39.9901883613924;
24837     +else if _random_ <= 0.90 then IMP_DEBTINC = 41.4250413900451;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.90 then IMP_DEBTINC = 41.4250413900451;
24838     +else if _random_ <= 0.99 then IMP_DEBTINC = 48.2775912244234;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99 then IMP_DEBTINC = 48.2775912244234;
24839     +else IMP_DEBTINC = 203.312148691165;
MPRINT(EM_DIAGRAM):   else IMP_DEBTINC = 203.312148691165;
24840     +END;
MPRINT(EM_DIAGRAM):   END;
24841     +*;
MPRINT(EM_DIAGRAM):   *;
24842     +* IMPUTE VARIABLE: VALUE;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: VALUE;
24843     +*;
MPRINT(EM_DIAGRAM):   *;
24844     +label IMP_VALUE = 'Imputed VALUE';
MPRINT(EM_DIAGRAM):   label IMP_VALUE = 'Imputed VALUE';
24845     +IMP_VALUE = VALUE;
MPRINT(EM_DIAGRAM):   IMP_VALUE = VALUE;
24846     +IF missing(VALUE) THEN DO;
MPRINT(EM_DIAGRAM):   IF missing(VALUE) THEN DO;
24847     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24848     +if _random_ <= 0.01 then IMP_VALUE = 8000;
MPRINT(EM_DIAGRAM):   if _random_ <= 0.01 then IMP_VALUE = 8000;
24849     +else if _random_ <= 0.1 then IMP_VALUE = 27439;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.1 then IMP_VALUE = 27439;
24850     +else if _random_ <= 0.10 then IMP_VALUE = 49843;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.10 then IMP_VALUE = 49843;
24851     +else if _random_ <= 0.20 then IMP_VALUE = 61978;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.20 then IMP_VALUE = 61978;
24852     +else if _random_ <= 0.25 then IMP_VALUE = 66345;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.25 then IMP_VALUE = 66345;
24853     +else if _random_ <= 0.30 then IMP_VALUE = 70207;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.30 then IMP_VALUE = 70207;
24854     +else if _random_ <= 0.40 then IMP_VALUE = 80000;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.40 then IMP_VALUE = 80000;
24855     +else if _random_ <= 0.50 then IMP_VALUE = 89107;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.50 then IMP_VALUE = 89107;
24856     +else if _random_ <= 0.60 then IMP_VALUE = 99641;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.60 then IMP_VALUE = 99641;
24857     +else if _random_ <= 0.75 then IMP_VALUE = 121714;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.75 then IMP_VALUE = 121714;
24858     +else if _random_ <= 0.80 then IMP_VALUE = 134996;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.80 then IMP_VALUE = 134996;
24859     +else if _random_ <= 0.90 then IMP_VALUE = 176244;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.90 then IMP_VALUE = 176244;
24860     +else if _random_ <= 0.99 then IMP_VALUE = 289260;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99 then IMP_VALUE = 289260;
24861     +else IMP_VALUE = 855909;
MPRINT(EM_DIAGRAM):   else IMP_VALUE = 855909;
24862     +END;
MPRINT(EM_DIAGRAM):   END;
24863     +drop _random_;
MPRINT(EM_DIAGRAM):   drop _random_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
24864      run;

NOTE: DATA STEP view saved on file EMWS1.IMPT_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.VARCLUS_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
24865      quit;
24866      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
24867      filename emflow "C:\Jose\DM_ang\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Jose\DM_ang\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24868      *------------------------------------------------------------*;
24869      * Impt: Scoring TEST data;
24870      *------------------------------------------------------------*;
24871      data EMWS1.Impt_TEST
24872      / view=EMWS1.Impt_TEST
24873      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_TEST / view=EMWS1.Impt_TEST ;
24874      set EMWS1.VarClus_TEST
24875      ;
MPRINT(EM_DIAGRAM):   set EMWS1.VarClus_TEST ;
24876      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Jose\DM_ang\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas.
24877     +*;
MPRINT(EM_DIAGRAM):   *;
24878     +*DISTRIBUTION-BASED IMPUTATION: CLASS VARIABLES;
MPRINT(EM_DIAGRAM):   *DISTRIBUTION-BASED IMPUTATION: CLASS VARIABLES;
24879     +*;
MPRINT(EM_DIAGRAM):   *;
24880     +*;
MPRINT(EM_DIAGRAM):   *;
24881     +* IMPUTE VARIABLE: DELINQ;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: DELINQ;
24882     +*;
MPRINT(EM_DIAGRAM):   *;
24883     +length IMP_DELINQ 8;
MPRINT(EM_DIAGRAM):   length IMP_DELINQ 8;
24884     +label IMP_DELINQ = 'Imputed DELINQ';
MPRINT(EM_DIAGRAM):   label IMP_DELINQ = 'Imputed DELINQ';
24885     +IMP_DELINQ = DELINQ;
MPRINT(EM_DIAGRAM):   IMP_DELINQ = DELINQ;
24886     +IF missing(DELINQ) THEN DO;
MPRINT(EM_DIAGRAM):   IF missing(DELINQ) THEN DO;
24887     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24888     +if _random_ <= 0.78154075176777 then IMP_DELINQ = 0;
MPRINT(EM_DIAGRAM):   if _random_ <= 0.78154075176777 then IMP_DELINQ = 0;
24889     +else if _random_ <= 0.89877186453293 then IMP_DELINQ = 1;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.89877186453293 then IMP_DELINQ = 1;
24890     +else if _random_ <= 0.94119836248604 then IMP_DELINQ = 2;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.94119836248604 then IMP_DELINQ = 2;
24891     +else if _random_ <= 0.96613323409006 then IMP_DELINQ = 3;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.96613323409006 then IMP_DELINQ = 3;
24892     +else if _random_ <= 0.98064756233717 then IMP_DELINQ = 4;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.98064756233717 then IMP_DELINQ = 4;
24893     +else if _random_ <= 0.98697432080387 then IMP_DELINQ = 5;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.98697432080387 then IMP_DELINQ = 5;
24894     +else if _random_ <= 0.99330107927056 then IMP_DELINQ = 6;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99330107927056 then IMP_DELINQ = 6;
24895     +else if _random_ <= 0.99702270189802 then IMP_DELINQ = 7;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99702270189802 then IMP_DELINQ = 7;
24896     +else if _random_ <= 0.99813918868626 then IMP_DELINQ = 8;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99813918868626 then IMP_DELINQ = 8;
24897     +else if _random_ <= 0.99851135094901 then IMP_DELINQ = 10;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99851135094901 then IMP_DELINQ = 10;
24898     +else if _random_ <= 0.99888351321176 then IMP_DELINQ = 11;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99888351321176 then IMP_DELINQ = 11;
24899     +else if _random_ <= 0.9992556754745 then IMP_DELINQ = 12;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.9992556754745 then IMP_DELINQ = 12;
24900     +else if _random_ <= 0.99962783773725 then IMP_DELINQ = 13;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99962783773725 then IMP_DELINQ = 13;
24901     +else IMP_DELINQ = 15;
MPRINT(EM_DIAGRAM):   else IMP_DELINQ = 15;
24902     +END;
MPRINT(EM_DIAGRAM):   END;
24903     +*;
MPRINT(EM_DIAGRAM):   *;
24904     +* IMPUTE VARIABLE: DEROG;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: DEROG;
24905     +*;
MPRINT(EM_DIAGRAM):   *;
24906     +length IMP_DEROG 8;
MPRINT(EM_DIAGRAM):   length IMP_DEROG 8;
24907     +label IMP_DEROG = 'Imputed DEROG';
MPRINT(EM_DIAGRAM):   label IMP_DEROG = 'Imputed DEROG';
24908     +IMP_DEROG = DEROG;
MPRINT(EM_DIAGRAM):   IMP_DEROG = DEROG;
24909     +IF missing(DEROG) THEN DO;
MPRINT(EM_DIAGRAM):   IF missing(DEROG) THEN DO;
24910     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24911     +if _random_ <= 0.86638751427483 then IMP_DEROG = 0;
MPRINT(EM_DIAGRAM):   if _random_ <= 0.86638751427483 then IMP_DEROG = 0;
24912     +else if _random_ <= 0.94632660829843 then IMP_DEROG = 1;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.94632660829843 then IMP_DEROG = 1;
24913     +else if _random_ <= 0.97754092120289 then IMP_DEROG = 2;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.97754092120289 then IMP_DEROG = 2;
24914     +else if _random_ <= 0.9885801294252 then IMP_DEROG = 3;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.9885801294252 then IMP_DEROG = 3;
24915     +else if _random_ <= 0.99238675295013 then IMP_DEROG = 4;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99238675295013 then IMP_DEROG = 4;
24916     +else if _random_ <= 0.99543205177008 then IMP_DEROG = 5;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99543205177008 then IMP_DEROG = 5;
24917     +else if _random_ <= 0.99657403882756 then IMP_DEROG = 6;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99657403882756 then IMP_DEROG = 6;
24918     +else if _random_ <= 0.99771602588504 then IMP_DEROG = 7;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99771602588504 then IMP_DEROG = 7;
24919     +else if _random_ <= 0.99885801294252 then IMP_DEROG = 8;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99885801294252 then IMP_DEROG = 8;
24920     +else if _random_ <= 0.99923867529501 then IMP_DEROG = 9;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99923867529501 then IMP_DEROG = 9;
24921     +else IMP_DEROG = 10;
MPRINT(EM_DIAGRAM):   else IMP_DEROG = 10;
24922     +END;
MPRINT(EM_DIAGRAM):   END;
24923     +*;
MPRINT(EM_DIAGRAM):   *;
24924     +* IMPUTE VARIABLE: JOB;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: JOB;
24925     +*;
MPRINT(EM_DIAGRAM):   *;
24926     +length IMP_JOB $7;
MPRINT(EM_DIAGRAM):   length IMP_JOB $7;
24927     +label IMP_JOB = 'Imputed JOB';
MPRINT(EM_DIAGRAM):   label IMP_JOB = 'Imputed JOB';
24928     +IMP_JOB = JOB;
MPRINT(EM_DIAGRAM):   IMP_JOB = JOB;
24929     +IF JOB eq '' THEN DO;
MPRINT(EM_DIAGRAM):   IF JOB eq '' THEN DO;
24930     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24931     +if _random_ <= 0.1275546159267 then IMP_JOB = 'Mgr';
MPRINT(EM_DIAGRAM):   if _random_ <= 0.1275546159267 then IMP_JOB = 'Mgr';
24932     +else if _random_ <= 0.3030303030303 then IMP_JOB = 'Office';
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.3030303030303 then IMP_JOB = 'Office';
24933     +else if _random_ <= 0.7276250880902 then IMP_JOB = 'Other';
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.7276250880902 then IMP_JOB = 'Other';
24934     +else if _random_ <= 0.94291754756871 then IMP_JOB = 'ProfExe';
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.94291754756871 then IMP_JOB = 'ProfExe';
24935     +else if _random_ <= 0.96053558844256 then IMP_JOB = 'Sales';
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.96053558844256 then IMP_JOB = 'Sales';
24936     +else IMP_JOB = 'Self';
MPRINT(EM_DIAGRAM):   else IMP_JOB = 'Self';
24937     +END;
MPRINT(EM_DIAGRAM):   END;
24938     +*;
MPRINT(EM_DIAGRAM):   *;
24939     +* IMPUTE VARIABLE: NINQ;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: NINQ;
24940     +*;
MPRINT(EM_DIAGRAM):   *;
24941     +length IMP_NINQ 8;
MPRINT(EM_DIAGRAM):   length IMP_NINQ 8;
24942     +label IMP_NINQ = 'Imputed NINQ';
MPRINT(EM_DIAGRAM):   label IMP_NINQ = 'Imputed NINQ';
24943     +IMP_NINQ = NINQ;
MPRINT(EM_DIAGRAM):   IMP_NINQ = NINQ;
24944     +IF missing(NINQ) THEN DO;
MPRINT(EM_DIAGRAM):   IF missing(NINQ) THEN DO;
24945     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24946     +if _random_ <= 0.4735294117647 then IMP_NINQ = 0;
MPRINT(EM_DIAGRAM):   if _random_ <= 0.4735294117647 then IMP_NINQ = 0;
24947     +else if _random_ <= 0.71911764705882 then IMP_NINQ = 1;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.71911764705882 then IMP_NINQ = 1;
24948     +else if _random_ <= 0.85330882352941 then IMP_NINQ = 2;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.85330882352941 then IMP_NINQ = 2;
24949     +else if _random_ <= 0.9297794117647 then IMP_NINQ = 3;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.9297794117647 then IMP_NINQ = 3;
24950     +else if _random_ <= 0.95588235294117 then IMP_NINQ = 4;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.95588235294117 then IMP_NINQ = 4;
24951     +else if _random_ <= 0.96985294117647 then IMP_NINQ = 5;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.96985294117647 then IMP_NINQ = 5;
24952     +else if _random_ <= 0.97830882352941 then IMP_NINQ = 6;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.97830882352941 then IMP_NINQ = 6;
24953     +else if _random_ <= 0.9860294117647 then IMP_NINQ = 7;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.9860294117647 then IMP_NINQ = 7;
24954     +else if _random_ <= 0.99044117647058 then IMP_NINQ = 8;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99044117647058 then IMP_NINQ = 8;
24955     +else if _random_ <= 0.99264705882352 then IMP_NINQ = 9;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99264705882352 then IMP_NINQ = 9;
24956     +else if _random_ <= 0.99632352941176 then IMP_NINQ = 10;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99632352941176 then IMP_NINQ = 10;
24957     +else if _random_ <= 0.99889705882352 then IMP_NINQ = 11;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99889705882352 then IMP_NINQ = 11;
24958     +else if _random_ <= 0.99926470588235 then IMP_NINQ = 12;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99926470588235 then IMP_NINQ = 12;
24959     +else if _random_ <= 0.99963235294117 then IMP_NINQ = 13;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99963235294117 then IMP_NINQ = 13;
24960     +else IMP_NINQ = 14;
MPRINT(EM_DIAGRAM):   else IMP_NINQ = 14;
24961     +END;
MPRINT(EM_DIAGRAM):   END;
24962     +*;
MPRINT(EM_DIAGRAM):   *;
24963     +* IMPUTE VARIABLE: REASON;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: REASON;
24964     +*;
MPRINT(EM_DIAGRAM):   *;
24965     +length IMP_REASON $7;
MPRINT(EM_DIAGRAM):   length IMP_REASON $7;
24966     +label IMP_REASON = 'Imputed REASON';
MPRINT(EM_DIAGRAM):   label IMP_REASON = 'Imputed REASON';
24967     +IMP_REASON = REASON;
MPRINT(EM_DIAGRAM):   IMP_REASON = REASON;
24968     +IF REASON eq '' THEN DO;
MPRINT(EM_DIAGRAM):   IF REASON eq '' THEN DO;
24969     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24970     +if _random_ <= 0.68679775280898 then IMP_REASON = 'DebtCon';
MPRINT(EM_DIAGRAM):   if _random_ <= 0.68679775280898 then IMP_REASON = 'DebtCon';
24971     +else IMP_REASON = 'HomeImp';
MPRINT(EM_DIAGRAM):   else IMP_REASON = 'HomeImp';
24972     +END;
MPRINT(EM_DIAGRAM):   END;
24973     +*;
MPRINT(EM_DIAGRAM):   *;
24974     +*DISTRIBUTION-BASED IMPUTATION: Interval VARIABLES;
MPRINT(EM_DIAGRAM):   *DISTRIBUTION-BASED IMPUTATION: Interval VARIABLES;
24975     +*;
MPRINT(EM_DIAGRAM):   *;
24976     +*;
MPRINT(EM_DIAGRAM):   *;
24977     +* IMPUTE VARIABLE: DEBTINC;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: DEBTINC;
24978     +*;
MPRINT(EM_DIAGRAM):   *;
24979     +label IMP_DEBTINC = 'Imputed DEBTINC';
MPRINT(EM_DIAGRAM):   label IMP_DEBTINC = 'Imputed DEBTINC';
24980     +IMP_DEBTINC = DEBTINC;
MPRINT(EM_DIAGRAM):   IMP_DEBTINC = DEBTINC;
24981     +IF missing(DEBTINC) THEN DO;
MPRINT(EM_DIAGRAM):   IF missing(DEBTINC) THEN DO;
24982     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
24983     +if _random_ <= 0.01 then IMP_DEBTINC = 0.52449921542988;
MPRINT(EM_DIAGRAM):   if _random_ <= 0.01 then IMP_DEBTINC = 0.52449921542988;
24984     +else if _random_ <= 0.1 then IMP_DEBTINC = 12.391235037074;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.1 then IMP_DEBTINC = 12.391235037074;
24985     +else if _random_ <= 0.10 then IMP_DEBTINC = 23.8759461858942;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.10 then IMP_DEBTINC = 23.8759461858942;
24986     +else if _random_ <= 0.20 then IMP_DEBTINC = 27.5737365036382;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.20 then IMP_DEBTINC = 27.5737365036382;
24987     +else if _random_ <= 0.25 then IMP_DEBTINC = 28.8724263899319;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.25 then IMP_DEBTINC = 28.8724263899319;
24988     +else if _random_ <= 0.30 then IMP_DEBTINC = 30.0627923226322;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.30 then IMP_DEBTINC = 30.0627923226322;
24989     +else if _random_ <= 0.40 then IMP_DEBTINC = 32.7403684932786;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.40 then IMP_DEBTINC = 32.7403684932786;
24990     +else if _random_ <= 0.50 then IMP_DEBTINC = 34.7310761753172;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.50 then IMP_DEBTINC = 34.7310761753172;
24991     +else if _random_ <= 0.60 then IMP_DEBTINC = 36.6692786120713;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.60 then IMP_DEBTINC = 36.6692786120713;
24992     +else if _random_ <= 0.75 then IMP_DEBTINC = 39.2048627164516;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.75 then IMP_DEBTINC = 39.2048627164516;
24993     +else if _random_ <= 0.80 then IMP_DEBTINC = 39.9901883613924;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.80 then IMP_DEBTINC = 39.9901883613924;
24994     +else if _random_ <= 0.90 then IMP_DEBTINC = 41.4250413900451;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.90 then IMP_DEBTINC = 41.4250413900451;
24995     +else if _random_ <= 0.99 then IMP_DEBTINC = 48.2775912244234;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99 then IMP_DEBTINC = 48.2775912244234;
24996     +else IMP_DEBTINC = 203.312148691165;
MPRINT(EM_DIAGRAM):   else IMP_DEBTINC = 203.312148691165;
24997     +END;
MPRINT(EM_DIAGRAM):   END;
24998     +*;
MPRINT(EM_DIAGRAM):   *;
24999     +* IMPUTE VARIABLE: VALUE;
MPRINT(EM_DIAGRAM):   * IMPUTE VARIABLE: VALUE;
25000     +*;
MPRINT(EM_DIAGRAM):   *;
25001     +label IMP_VALUE = 'Imputed VALUE';
MPRINT(EM_DIAGRAM):   label IMP_VALUE = 'Imputed VALUE';
25002     +IMP_VALUE = VALUE;
MPRINT(EM_DIAGRAM):   IMP_VALUE = VALUE;
25003     +IF missing(VALUE) THEN DO;
MPRINT(EM_DIAGRAM):   IF missing(VALUE) THEN DO;
25004     +_random_ = DMRAN(12345);
MPRINT(EM_DIAGRAM):   _random_ = DMRAN(12345);
25005     +if _random_ <= 0.01 then IMP_VALUE = 8000;
MPRINT(EM_DIAGRAM):   if _random_ <= 0.01 then IMP_VALUE = 8000;
25006     +else if _random_ <= 0.1 then IMP_VALUE = 27439;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.1 then IMP_VALUE = 27439;
25007     +else if _random_ <= 0.10 then IMP_VALUE = 49843;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.10 then IMP_VALUE = 49843;
25008     +else if _random_ <= 0.20 then IMP_VALUE = 61978;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.20 then IMP_VALUE = 61978;
25009     +else if _random_ <= 0.25 then IMP_VALUE = 66345;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.25 then IMP_VALUE = 66345;
25010     +else if _random_ <= 0.30 then IMP_VALUE = 70207;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.30 then IMP_VALUE = 70207;
25011     +else if _random_ <= 0.40 then IMP_VALUE = 80000;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.40 then IMP_VALUE = 80000;
25012     +else if _random_ <= 0.50 then IMP_VALUE = 89107;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.50 then IMP_VALUE = 89107;
25013     +else if _random_ <= 0.60 then IMP_VALUE = 99641;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.60 then IMP_VALUE = 99641;
25014     +else if _random_ <= 0.75 then IMP_VALUE = 121714;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.75 then IMP_VALUE = 121714;
25015     +else if _random_ <= 0.80 then IMP_VALUE = 134996;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.80 then IMP_VALUE = 134996;
25016     +else if _random_ <= 0.90 then IMP_VALUE = 176244;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.90 then IMP_VALUE = 176244;
25017     +else if _random_ <= 0.99 then IMP_VALUE = 289260;
MPRINT(EM_DIAGRAM):   else if _random_ <= 0.99 then IMP_VALUE = 289260;
25018     +else IMP_VALUE = 855909;
MPRINT(EM_DIAGRAM):   else IMP_VALUE = 855909;
25019     +END;
MPRINT(EM_DIAGRAM):   END;
25020     +drop _random_;
MPRINT(EM_DIAGRAM):   drop _random_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
25021      run;

NOTE: DATA STEP view saved on file EMWS1.IMPT_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.VARCLUS_TEST.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
25022      quit;
25023      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
25024      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
25025      * Impt: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Impt: Computing metadata for TRAIN data;
25026      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS1.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Jose\DM_ang\Workspaces\EMWS1\Impt\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Impt_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Impt_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Impt_TRAIN out=WORK.M2KVXOO1 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2KVXOO1;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2KVXOO1(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2KVXOO1;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2KVXOO1;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3MATRJ6 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3MATRJ6;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3MATRJ6;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2MF_8E4(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3MATRJ6;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3MATRJ6;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3MATRJ6;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3MATRJ6;
MPRINT(EMADVISECOLUMNS):   set WORK.M3MATRJ6;
MPRINT(EMADVISECOLUMNS):   label NAME = "Nombre de la variable" TYPE = "Tipo" ROLE = "Rol" LEVEL= "Nivel de medida" ORDER= "Orden" CREATOR= "Creador" FORMATTYPE= "Tipo de formato" FAMILY= "Familia" DISTRIBUTION= "Distribución" PRICE= "Precio" LOWERLIMIT= 
"Límite inferior" UPPERLIMIT= "Límite superior" REPORT= "Informe" COMMENT= "Comentario" INDEX= "Índice" INDEXTYPE= "TipoÍndice" LABEL= "Etiqueta" LENGTH= "Longitud";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.VarClus_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.VarClus_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Impt";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME = "DEBTINC" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_DEBTINC" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "DELINQ" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_DELINQ" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "DEROG" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_DEROG" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "JOB" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_JOB" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "NINQ" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_NINQ" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "REASON" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_REASON" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "BINARY" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "VALUE" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_VALUE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS1.IMPT_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS1.IMPT_TEST.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
