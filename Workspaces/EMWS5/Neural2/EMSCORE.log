MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28 March 2021" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19:52:11" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28 March 2021
Time:                19:52:11
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2LWPON9 "C:\Jose\DM_ang\Workspaces\EMWS5\Neural2\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2LWPON9 new;
MPRINT(EM_DIAGRAM):   run;
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
24642      data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
24643      set EMWS5.Neural2_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS5.Neural2_OUTKEY;
24644      if upcase(ROLE) in('HIDDEN', 'STANDARD');
MPRINT(EM_DIAGRAM):   if upcase(ROLE) in('HIDDEN', 'STANDARD');
24645      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 62 observations read from the data set EMWS5.NEURAL2_OUTKEY.
NOTE: The data set WORK.OUTKEY has 8 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

24646      filename emflow "C:\Jose\DM_ang\Workspaces\EMWS5\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Jose\DM_ang\Workspaces\EMWS5\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
24647      *------------------------------------------------------------*;
24648      * Neural2: Scoring DATA data;
24649      *------------------------------------------------------------*;
24650      data EMWS5.Neural2_TRAIN
24651      / view=EMWS5.Neural2_TRAIN
24652      ;
MPRINT(EM_DIAGRAM):   data EMWS5.Neural2_TRAIN / view=EMWS5.Neural2_TRAIN ;
24653      set EMWS5.VarClus_TRAIN
24654      ;
MPRINT(EM_DIAGRAM):   set EMWS5.VarClus_TRAIN ;
24655      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Jose\DM_ang\Workspaces\EMWS5\Neural2\EMFLOWSCORE.sas.
24656     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
24657     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
24658     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
24659     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
24660     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
24661     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
24662     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
24663     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
24664     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
24665     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
24666     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
24667     +LENGTH _WARN_ $4
24668     +      F_default  $ 12
24669     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_default $ 12 ;
24670     +      label S_age = 'Standard: age' ;
MPRINT(EM_DIAGRAM):   label S_age = 'Standard: age' ;
24671     +
24672     +      label S_duration = 'Standard: duration' ;
MPRINT(EM_DIAGRAM):   label S_duration = 'Standard: duration' ;
24673     +
24674     +      label acc_statusA11 = 'Dummy: acc_status=A11' ;
MPRINT(EM_DIAGRAM):   label acc_statusA11 = 'Dummy: acc_status=A11' ;
24675     +
24676     +      label acc_statusA12 = 'Dummy: acc_status=A12' ;
MPRINT(EM_DIAGRAM):   label acc_statusA12 = 'Dummy: acc_status=A12' ;
24677     +
24678     +      label acc_statusA13 = 'Dummy: acc_status=A13' ;
MPRINT(EM_DIAGRAM):   label acc_statusA13 = 'Dummy: acc_status=A13' ;
24679     +
24680     +      label credit_historyA30 = 'Dummy: credit_history=A30' ;
MPRINT(EM_DIAGRAM):   label credit_historyA30 = 'Dummy: credit_history=A30' ;
24681     +
24682     +      label credit_historyA31 = 'Dummy: credit_history=A31' ;
MPRINT(EM_DIAGRAM):   label credit_historyA31 = 'Dummy: credit_history=A31' ;
24683     +
24684     +      label credit_historyA32 = 'Dummy: credit_history=A32' ;
MPRINT(EM_DIAGRAM):   label credit_historyA32 = 'Dummy: credit_history=A32' ;
24685     +
24686     +      label credit_historyA33 = 'Dummy: credit_history=A33' ;
MPRINT(EM_DIAGRAM):   label credit_historyA33 = 'Dummy: credit_history=A33' ;
24687     +
24688     +      label employmentA71 = 'Dummy: employment=A71' ;
MPRINT(EM_DIAGRAM):   label employmentA71 = 'Dummy: employment=A71' ;
24689     +
24690     +      label employmentA72 = 'Dummy: employment=A72' ;
MPRINT(EM_DIAGRAM):   label employmentA72 = 'Dummy: employment=A72' ;
24691     +
24692     +      label employmentA73 = 'Dummy: employment=A73' ;
MPRINT(EM_DIAGRAM):   label employmentA73 = 'Dummy: employment=A73' ;
24693     +
24694     +      label employmentA74 = 'Dummy: employment=A74' ;
MPRINT(EM_DIAGRAM):   label employmentA74 = 'Dummy: employment=A74' ;
24695     +
24696     +      label instalment1 = 'Dummy: instalment=1' ;
MPRINT(EM_DIAGRAM):   label instalment1 = 'Dummy: instalment=1' ;
24697     +
24698     +      label instalment2 = 'Dummy: instalment=2' ;
MPRINT(EM_DIAGRAM):   label instalment2 = 'Dummy: instalment=2' ;
24699     +
24700     +      label instalment3 = 'Dummy: instalment=3' ;
MPRINT(EM_DIAGRAM):   label instalment3 = 'Dummy: instalment=3' ;
24701     +
24702     +      label jobA171 = 'Dummy: job=A171' ;
MPRINT(EM_DIAGRAM):   label jobA171 = 'Dummy: job=A171' ;
24703     +
24704     +      label jobA172 = 'Dummy: job=A172' ;
MPRINT(EM_DIAGRAM):   label jobA172 = 'Dummy: job=A172' ;
24705     +
24706     +      label jobA173 = 'Dummy: job=A173' ;
MPRINT(EM_DIAGRAM):   label jobA173 = 'Dummy: job=A173' ;
24707     +
24708     +      label other_instalmentsA141 = 'Dummy: other_instalments=A141' ;
MPRINT(EM_DIAGRAM):   label other_instalmentsA141 = 'Dummy: other_instalments=A141' ;
24709     +
24710     +      label other_instalmentsA142 = 'Dummy: other_instalments=A142' ;
MPRINT(EM_DIAGRAM):   label other_instalmentsA142 = 'Dummy: other_instalments=A142' ;
24711     +
24712     +      label personal_statusA91 = 'Dummy: personal_status=A91' ;
MPRINT(EM_DIAGRAM):   label personal_statusA91 = 'Dummy: personal_status=A91' ;
24713     +
24714     +      label personal_statusA92 = 'Dummy: personal_status=A92' ;
MPRINT(EM_DIAGRAM):   label personal_statusA92 = 'Dummy: personal_status=A92' ;
24715     +
24716     +      label personal_statusA93 = 'Dummy: personal_status=A93' ;
MPRINT(EM_DIAGRAM):   label personal_statusA93 = 'Dummy: personal_status=A93' ;
24717     +
24718     +      label pourposeA40 = 'Dummy: pourpose=A40' ;
MPRINT(EM_DIAGRAM):   label pourposeA40 = 'Dummy: pourpose=A40' ;
24719     +
24720     +      label pourposeA41 = 'Dummy: pourpose=A41' ;
MPRINT(EM_DIAGRAM):   label pourposeA41 = 'Dummy: pourpose=A41' ;
24721     +
24722     +      label pourposeA410 = 'Dummy: pourpose=A410' ;
MPRINT(EM_DIAGRAM):   label pourposeA410 = 'Dummy: pourpose=A410' ;
24723     +
24724     +      label pourposeA42 = 'Dummy: pourpose=A42' ;
MPRINT(EM_DIAGRAM):   label pourposeA42 = 'Dummy: pourpose=A42' ;
24725     +
24726     +      label pourposeA43 = 'Dummy: pourpose=A43' ;
MPRINT(EM_DIAGRAM):   label pourposeA43 = 'Dummy: pourpose=A43' ;
24727     +
24728     +      label pourposeA44 = 'Dummy: pourpose=A44' ;
MPRINT(EM_DIAGRAM):   label pourposeA44 = 'Dummy: pourpose=A44' ;
24729     +
24730     +      label pourposeA45 = 'Dummy: pourpose=A45' ;
MPRINT(EM_DIAGRAM):   label pourposeA45 = 'Dummy: pourpose=A45' ;
24731     +
24732     +      label pourposeA46 = 'Dummy: pourpose=A46' ;
MPRINT(EM_DIAGRAM):   label pourposeA46 = 'Dummy: pourpose=A46' ;
24733     +
24734     +      label pourposeA48 = 'Dummy: pourpose=A48' ;
MPRINT(EM_DIAGRAM):   label pourposeA48 = 'Dummy: pourpose=A48' ;
24735     +
24736     +      label residence1 = 'Dummy: residence=1' ;
MPRINT(EM_DIAGRAM):   label residence1 = 'Dummy: residence=1' ;
24737     +
24738     +      label residence2 = 'Dummy: residence=2' ;
MPRINT(EM_DIAGRAM):   label residence2 = 'Dummy: residence=2' ;
24739     +
24740     +      label residence3 = 'Dummy: residence=3' ;
MPRINT(EM_DIAGRAM):   label residence3 = 'Dummy: residence=3' ;
24741     +
24742     +      label savingsA61 = 'Dummy: savings=A61' ;
MPRINT(EM_DIAGRAM):   label savingsA61 = 'Dummy: savings=A61' ;
24743     +
24744     +      label savingsA62 = 'Dummy: savings=A62' ;
MPRINT(EM_DIAGRAM):   label savingsA62 = 'Dummy: savings=A62' ;
24745     +
24746     +      label savingsA63 = 'Dummy: savings=A63' ;
MPRINT(EM_DIAGRAM):   label savingsA63 = 'Dummy: savings=A63' ;
24747     +
24748     +      label savingsA64 = 'Dummy: savings=A64' ;
MPRINT(EM_DIAGRAM):   label savingsA64 = 'Dummy: savings=A64' ;
24749     +
24750     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
24751     +
24752     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
24753     +
24754     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
24755     +
24756     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
24757     +
24758     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
24759     +
24760     +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
24761     +
24762     +      label I_default = 'Into: default' ;
MPRINT(EM_DIAGRAM):   label I_default = 'Into: default' ;
24763     +
24764     +      label F_default = 'From: default' ;
MPRINT(EM_DIAGRAM):   label F_default = 'From: default' ;
24765     +
24766     +      label U_default = 'Unnormalized Into: default' ;
MPRINT(EM_DIAGRAM):   label U_default = 'Unnormalized Into: default' ;
24767     +
24768     +      label P_default1 = 'Predicted: default=1' ;
MPRINT(EM_DIAGRAM):   label P_default1 = 'Predicted: default=1' ;
24769     +
24770     +      label R_default1 = 'Residual: default=1' ;
MPRINT(EM_DIAGRAM):   label R_default1 = 'Residual: default=1' ;
24771     +
24772     +      label P_default0 = 'Predicted: default=0' ;
MPRINT(EM_DIAGRAM):   label P_default0 = 'Predicted: default=0' ;
24773     +
24774     +      label R_default0 = 'Residual: default=0' ;
MPRINT(EM_DIAGRAM):   label R_default0 = 'Residual: default=0' ;
24775     +
24776     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
24777     +
24778     +*** Generate dummy variables for acc_status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for acc_status ;
24779     +drop acc_statusA11 acc_statusA12 acc_statusA13 ;
MPRINT(EM_DIAGRAM):   drop acc_statusA11 acc_statusA12 acc_statusA13 ;
24780     +if missing( acc_status ) then do;
MPRINT(EM_DIAGRAM):   if missing( acc_status ) then do;
24781     +   acc_statusA11 = .;
MPRINT(EM_DIAGRAM):   acc_statusA11 = .;
24782     +   acc_statusA12 = .;
MPRINT(EM_DIAGRAM):   acc_statusA12 = .;
24783     +   acc_statusA13 = .;
MPRINT(EM_DIAGRAM):   acc_statusA13 = .;
24784     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
24785     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
24786     +end;
MPRINT(EM_DIAGRAM):   end;
24787     +else do;
MPRINT(EM_DIAGRAM):   else do;
24788     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
24789     +   _dm3 = put( acc_status , $3. );
MPRINT(EM_DIAGRAM):   _dm3 = put( acc_status , $3. );
24790     +   %DMNORMIP( _dm3 )
MPRINT(DMNORMIP):   call dmnorm(_dm3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm3 = 'A14' then do;
MPRINT(EM_DIAGRAM):   acc_statusA11 = -1;
MPRINT(EM_DIAGRAM):   acc_statusA12 = -1;
MPRINT(EM_DIAGRAM):   acc_statusA13 = -1;
MPRINT(EM_DIAGRAM):   end;
24791     +   if _dm3 = 'A14'  then do;
24792     +      acc_statusA11 = -1;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A12' then do;
24793     +      acc_statusA12 = -1;
MPRINT(EM_DIAGRAM):   acc_statusA11 = 0;
24794     +      acc_statusA13 = -1;
MPRINT(EM_DIAGRAM):   acc_statusA12 = 1;
24795     +   end;
MPRINT(EM_DIAGRAM):   acc_statusA13 = 0;
24796     +   else if _dm3 = 'A12'  then do;
MPRINT(EM_DIAGRAM):   end;
24797     +      acc_statusA11 = 0;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A11' then do;
24798     +      acc_statusA12 = 1;
MPRINT(EM_DIAGRAM):   acc_statusA11 = 1;
24799     +      acc_statusA13 = 0;
MPRINT(EM_DIAGRAM):   acc_statusA12 = 0;
24800     +   end;
MPRINT(EM_DIAGRAM):   acc_statusA13 = 0;
24801     +   else if _dm3 = 'A11'  then do;
MPRINT(EM_DIAGRAM):   end;
24802     +      acc_statusA11 = 1;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A13' then do;
24803     +      acc_statusA12 = 0;
MPRINT(EM_DIAGRAM):   acc_statusA11 = 0;
24804     +      acc_statusA13 = 0;
MPRINT(EM_DIAGRAM):   acc_statusA12 = 0;
24805     +   end;
MPRINT(EM_DIAGRAM):   acc_statusA13 = 1;
24806     +   else if _dm3 = 'A13'  then do;
MPRINT(EM_DIAGRAM):   end;
24807     +      acc_statusA11 = 0;
MPRINT(EM_DIAGRAM):   else do;
24808     +      acc_statusA12 = 0;
MPRINT(EM_DIAGRAM):   acc_statusA11 = .;
24809     +      acc_statusA13 = 1;
MPRINT(EM_DIAGRAM):   acc_statusA12 = .;
24810     +   end;
MPRINT(EM_DIAGRAM):   acc_statusA13 = .;
24811     +   else do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
24812     +      acc_statusA11 = .;
MPRINT(EM_DIAGRAM):   end;
24813     +      acc_statusA12 = .;
MPRINT(EM_DIAGRAM):   end;
24814     +      acc_statusA13 = .;
24815     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for credit_history ;
24816     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop credit_historyA30 credit_historyA31 credit_historyA32 credit_historyA33 ;
24817     +   end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
24818     +end;
MPRINT(EM_DIAGRAM):   credit_historyA30 = 0;
24819     +
MPRINT(EM_DIAGRAM):   credit_historyA31 = 0;
24820     +*** Generate dummy variables for credit_history ;
MPRINT(EM_DIAGRAM):   credit_historyA32 = 0;
24821     +drop credit_historyA30 credit_historyA31 credit_historyA32 credit_historyA33 ;
MPRINT(EM_DIAGRAM):   credit_historyA33 = 0;
24822     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( credit_history ) then do;
24823     +credit_historyA30 = 0;
MPRINT(EM_DIAGRAM):   credit_historyA30 = .;
24824     +credit_historyA31 = 0;
MPRINT(EM_DIAGRAM):   credit_historyA31 = .;
24825     +credit_historyA32 = 0;
MPRINT(EM_DIAGRAM):   credit_historyA32 = .;
24826     +credit_historyA33 = 0;
MPRINT(EM_DIAGRAM):   credit_historyA33 = .;
24827     +if missing( credit_history ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
24828     +   credit_historyA30 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
24829     +   credit_historyA31 = .;
MPRINT(EM_DIAGRAM):   end;
24830     +   credit_historyA32 = .;
24831     +   credit_historyA33 = .;
MPRINT(EM_DIAGRAM):   else do;
24832     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
24833     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
24834     +end;
MPRINT(EM_DIAGRAM):   _dm3 = put( credit_history , $3. );
24835     +else do;
24836     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(DMNORMIP):   call dmnorm(_dm3,
24837     +   _dm3 = put( credit_history , $3. );
24838     +   %DMNORMIP( _dm3 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm3 = 'A32' then do;
MPRINT(EM_DIAGRAM):   credit_historyA32 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A34' then do;
24839     +   if _dm3 = 'A32'  then do;
MPRINT(EM_DIAGRAM):   credit_historyA30 = -1;
24840     +      credit_historyA32 = 1;
MPRINT(EM_DIAGRAM):   credit_historyA31 = -1;
24841     +   end;
MPRINT(EM_DIAGRAM):   credit_historyA32 = -1;
24842     +   else if _dm3 = 'A34'  then do;
MPRINT(EM_DIAGRAM):   credit_historyA33 = -1;
MPRINT(EM_DIAGRAM):   end;
24843     +      credit_historyA30 = -1;
24844     +      credit_historyA31 = -1;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A33' then do;
24845     +      credit_historyA32 = -1;
MPRINT(EM_DIAGRAM):   credit_historyA33 = 1;
24846     +      credit_historyA33 = -1;
MPRINT(EM_DIAGRAM):   end;
24847     +   end;
24848     +   else if _dm3 = 'A33'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A31' then do;
MPRINT(EM_DIAGRAM):   credit_historyA31 = 1;
24849     +      credit_historyA33 = 1;
MPRINT(EM_DIAGRAM):   end;
24850     +   end;
24851     +   else if _dm3 = 'A31'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A30' then do;
MPRINT(EM_DIAGRAM):   credit_historyA30 = 1;
24852     +      credit_historyA31 = 1;
MPRINT(EM_DIAGRAM):   end;
24853     +   end;
24854     +   else if _dm3 = 'A30'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   credit_historyA30 = .;
24855     +      credit_historyA30 = 1;
MPRINT(EM_DIAGRAM):   credit_historyA31 = .;
24856     +   end;
MPRINT(EM_DIAGRAM):   credit_historyA32 = .;
24857     +   else do;
MPRINT(EM_DIAGRAM):   credit_historyA33 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
24858     +      credit_historyA30 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
24859     +      credit_historyA31 = .;
MPRINT(EM_DIAGRAM):   end;
24860     +      credit_historyA32 = .;
MPRINT(EM_DIAGRAM):   end;
24861     +      credit_historyA33 = .;
24862     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for employment ;
24863     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop employmentA71 employmentA72 employmentA73 employmentA74 ;
24864     +   end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
24865     +end;
MPRINT(EM_DIAGRAM):   employmentA71 = 0;
24866     +
MPRINT(EM_DIAGRAM):   employmentA72 = 0;
24867     +*** Generate dummy variables for employment ;
MPRINT(EM_DIAGRAM):   employmentA73 = 0;
24868     +drop employmentA71 employmentA72 employmentA73 employmentA74 ;
MPRINT(EM_DIAGRAM):   employmentA74 = 0;
24869     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( employment ) then do;
24870     +employmentA71 = 0;
MPRINT(EM_DIAGRAM):   employmentA71 = .;
24871     +employmentA72 = 0;
MPRINT(EM_DIAGRAM):   employmentA72 = .;
24872     +employmentA73 = 0;
MPRINT(EM_DIAGRAM):   employmentA73 = .;
24873     +employmentA74 = 0;
MPRINT(EM_DIAGRAM):   employmentA74 = .;
24874     +if missing( employment ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
24875     +   employmentA71 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
24876     +   employmentA72 = .;
MPRINT(EM_DIAGRAM):   end;
24877     +   employmentA73 = .;
24878     +   employmentA74 = .;
MPRINT(EM_DIAGRAM):   else do;
24879     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
24880     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
24881     +end;
MPRINT(EM_DIAGRAM):   _dm3 = put( employment , $3. );
24882     +else do;
24883     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(DMNORMIP):   call dmnorm(_dm3,
24884     +   _dm3 = put( employment , $3. );
24885     +   %DMNORMIP( _dm3 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm3 = 'A73' then do;
MPRINT(EM_DIAGRAM):   employmentA73 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A75' then do;
24886     +   if _dm3 = 'A73'  then do;
MPRINT(EM_DIAGRAM):   employmentA71 = -1;
24887     +      employmentA73 = 1;
MPRINT(EM_DIAGRAM):   employmentA72 = -1;
24888     +   end;
MPRINT(EM_DIAGRAM):   employmentA73 = -1;
24889     +   else if _dm3 = 'A75'  then do;
MPRINT(EM_DIAGRAM):   employmentA74 = -1;
MPRINT(EM_DIAGRAM):   end;
24890     +      employmentA71 = -1;
24891     +      employmentA72 = -1;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A74' then do;
24892     +      employmentA73 = -1;
MPRINT(EM_DIAGRAM):   employmentA74 = 1;
24893     +      employmentA74 = -1;
MPRINT(EM_DIAGRAM):   end;
24894     +   end;
24895     +   else if _dm3 = 'A74'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A72' then do;
MPRINT(EM_DIAGRAM):   employmentA72 = 1;
24896     +      employmentA74 = 1;
MPRINT(EM_DIAGRAM):   end;
24897     +   end;
24898     +   else if _dm3 = 'A72'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A71' then do;
MPRINT(EM_DIAGRAM):   employmentA71 = 1;
24899     +      employmentA72 = 1;
MPRINT(EM_DIAGRAM):   end;
24900     +   end;
24901     +   else if _dm3 = 'A71'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   employmentA71 = .;
24902     +      employmentA71 = 1;
MPRINT(EM_DIAGRAM):   employmentA72 = .;
24903     +   end;
MPRINT(EM_DIAGRAM):   employmentA73 = .;
24904     +   else do;
MPRINT(EM_DIAGRAM):   employmentA74 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
24905     +      employmentA71 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
24906     +      employmentA72 = .;
MPRINT(EM_DIAGRAM):   end;
24907     +      employmentA73 = .;
MPRINT(EM_DIAGRAM):   end;
24908     +      employmentA74 = .;
24909     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for instalment ;
24910     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop instalment1 instalment2 instalment3 ;
24911     +   end;
MPRINT(EM_DIAGRAM):   if missing( instalment ) then do;
24912     +end;
MPRINT(EM_DIAGRAM):   instalment1 = .;
24913     +
MPRINT(EM_DIAGRAM):   instalment2 = .;
24914     +*** Generate dummy variables for instalment ;
MPRINT(EM_DIAGRAM):   instalment3 = .;
24915     +drop instalment1 instalment2 instalment3 ;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
24916     +if missing( instalment ) then do;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
24917     +   instalment1 = .;
MPRINT(EM_DIAGRAM):   end;
24918     +   instalment2 = .;
24919     +   instalment3 = .;
MPRINT(EM_DIAGRAM):   else do;
24920     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
24921     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
24922     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( instalment , BEST12. );
24923     +else do;
24924     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
24925     +   _dm12 = put( instalment , BEST12. );
24926     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   instalment1 = -1;
MPRINT(EM_DIAGRAM):   instalment2 = -1;
MPRINT(EM_DIAGRAM):   instalment3 = -1;
MPRINT(EM_DIAGRAM):   end;
24927     +   if _dm12 = '4'  then do;
24928     +      instalment1 = -1;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
24929     +      instalment2 = -1;
MPRINT(EM_DIAGRAM):   instalment1 = 0;
24930     +      instalment3 = -1;
MPRINT(EM_DIAGRAM):   instalment2 = 1;
24931     +   end;
MPRINT(EM_DIAGRAM):   instalment3 = 0;
24932     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   end;
24933     +      instalment1 = 0;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
24934     +      instalment2 = 1;
MPRINT(EM_DIAGRAM):   instalment1 = 0;
24935     +      instalment3 = 0;
MPRINT(EM_DIAGRAM):   instalment2 = 0;
24936     +   end;
MPRINT(EM_DIAGRAM):   instalment3 = 1;
24937     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   end;
24938     +      instalment1 = 0;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
24939     +      instalment2 = 0;
MPRINT(EM_DIAGRAM):   instalment1 = 1;
24940     +      instalment3 = 1;
MPRINT(EM_DIAGRAM):   instalment2 = 0;
24941     +   end;
MPRINT(EM_DIAGRAM):   instalment3 = 0;
24942     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   end;
24943     +      instalment1 = 1;
MPRINT(EM_DIAGRAM):   else do;
24944     +      instalment2 = 0;
MPRINT(EM_DIAGRAM):   instalment1 = .;
24945     +      instalment3 = 0;
MPRINT(EM_DIAGRAM):   instalment2 = .;
24946     +   end;
MPRINT(EM_DIAGRAM):   instalment3 = .;
24947     +   else do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
24948     +      instalment1 = .;
MPRINT(EM_DIAGRAM):   end;
24949     +      instalment2 = .;
MPRINT(EM_DIAGRAM):   end;
24950     +      instalment3 = .;
24951     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for job ;
24952     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop jobA171 jobA172 jobA173 ;
24953     +   end;
MPRINT(EM_DIAGRAM):   if missing( job ) then do;
24954     +end;
MPRINT(EM_DIAGRAM):   jobA171 = .;
24955     +
MPRINT(EM_DIAGRAM):   jobA172 = .;
24956     +*** Generate dummy variables for job ;
MPRINT(EM_DIAGRAM):   jobA173 = .;
24957     +drop jobA171 jobA172 jobA173 ;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
24958     +if missing( job ) then do;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
24959     +   jobA171 = .;
MPRINT(EM_DIAGRAM):   end;
24960     +   jobA172 = .;
24961     +   jobA173 = .;
MPRINT(EM_DIAGRAM):   else do;
24962     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm4 $ 4;
24963     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm4 ;
24964     +end;
MPRINT(EM_DIAGRAM):   _dm4 = put( job , $4. );
24965     +else do;
24966     +   length _dm4 $ 4; drop _dm4 ;
MPRINT(DMNORMIP):   call dmnorm(_dm4,
24967     +   _dm4 = put( job , $4. );
24968     +   %DMNORMIP( _dm4 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm4 = 'A173' then do;
MPRINT(EM_DIAGRAM):   jobA171 = 0;
MPRINT(EM_DIAGRAM):   jobA172 = 0;
MPRINT(EM_DIAGRAM):   jobA173 = 1;
MPRINT(EM_DIAGRAM):   end;
24969     +   if _dm4 = 'A173'  then do;
24970     +      jobA171 = 0;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A172' then do;
24971     +      jobA172 = 0;
MPRINT(EM_DIAGRAM):   jobA171 = 0;
24972     +      jobA173 = 1;
MPRINT(EM_DIAGRAM):   jobA172 = 1;
24973     +   end;
MPRINT(EM_DIAGRAM):   jobA173 = 0;
24974     +   else if _dm4 = 'A172'  then do;
MPRINT(EM_DIAGRAM):   end;
24975     +      jobA171 = 0;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A174' then do;
24976     +      jobA172 = 1;
MPRINT(EM_DIAGRAM):   jobA171 = -1;
24977     +      jobA173 = 0;
MPRINT(EM_DIAGRAM):   jobA172 = -1;
24978     +   end;
MPRINT(EM_DIAGRAM):   jobA173 = -1;
24979     +   else if _dm4 = 'A174'  then do;
MPRINT(EM_DIAGRAM):   end;
24980     +      jobA171 = -1;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A171' then do;
24981     +      jobA172 = -1;
MPRINT(EM_DIAGRAM):   jobA171 = 1;
24982     +      jobA173 = -1;
MPRINT(EM_DIAGRAM):   jobA172 = 0;
24983     +   end;
MPRINT(EM_DIAGRAM):   jobA173 = 0;
24984     +   else if _dm4 = 'A171'  then do;
MPRINT(EM_DIAGRAM):   end;
24985     +      jobA171 = 1;
MPRINT(EM_DIAGRAM):   else do;
24986     +      jobA172 = 0;
MPRINT(EM_DIAGRAM):   jobA171 = .;
24987     +      jobA173 = 0;
MPRINT(EM_DIAGRAM):   jobA172 = .;
24988     +   end;
MPRINT(EM_DIAGRAM):   jobA173 = .;
24989     +   else do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
24990     +      jobA171 = .;
MPRINT(EM_DIAGRAM):   end;
24991     +      jobA172 = .;
MPRINT(EM_DIAGRAM):   end;
24992     +      jobA173 = .;
24993     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for other_instalments ;
24994     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop other_instalmentsA141 other_instalmentsA142 ;
24995     +   end;
MPRINT(EM_DIAGRAM):   if missing( other_instalments ) then do;
24996     +end;
MPRINT(EM_DIAGRAM):   other_instalmentsA141 = .;
24997     +
MPRINT(EM_DIAGRAM):   other_instalmentsA142 = .;
24998     +*** Generate dummy variables for other_instalments ;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
24999     +drop other_instalmentsA141 other_instalmentsA142 ;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25000     +if missing( other_instalments ) then do;
MPRINT(EM_DIAGRAM):   end;
25001     +   other_instalmentsA141 = .;
25002     +   other_instalmentsA142 = .;
MPRINT(EM_DIAGRAM):   else do;
25003     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm4 $ 4;
25004     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm4 ;
25005     +end;
MPRINT(EM_DIAGRAM):   _dm4 = put( other_instalments , $4. );
25006     +else do;
25007     +   length _dm4 $ 4; drop _dm4 ;
MPRINT(DMNORMIP):   call dmnorm(_dm4,
25008     +   _dm4 = put( other_instalments , $4. );
25009     +   %DMNORMIP( _dm4 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm4 = 'A143' then do;
MPRINT(EM_DIAGRAM):   other_instalmentsA141 = -1;
MPRINT(EM_DIAGRAM):   other_instalmentsA142 = -1;
MPRINT(EM_DIAGRAM):   end;
25010     +   if _dm4 = 'A143'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A141' then do;
25011     +      other_instalmentsA141 = -1;
MPRINT(EM_DIAGRAM):   other_instalmentsA141 = 1;
25012     +      other_instalmentsA142 = -1;
MPRINT(EM_DIAGRAM):   other_instalmentsA142 = 0;
25013     +   end;
MPRINT(EM_DIAGRAM):   end;
25014     +   else if _dm4 = 'A141'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A142' then do;
25015     +      other_instalmentsA141 = 1;
MPRINT(EM_DIAGRAM):   other_instalmentsA141 = 0;
25016     +      other_instalmentsA142 = 0;
MPRINT(EM_DIAGRAM):   other_instalmentsA142 = 1;
25017     +   end;
MPRINT(EM_DIAGRAM):   end;
25018     +   else if _dm4 = 'A142'  then do;
MPRINT(EM_DIAGRAM):   else do;
25019     +      other_instalmentsA141 = 0;
MPRINT(EM_DIAGRAM):   other_instalmentsA141 = .;
25020     +      other_instalmentsA142 = 1;
MPRINT(EM_DIAGRAM):   other_instalmentsA142 = .;
25021     +   end;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
25022     +   else do;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   end;
25023     +      other_instalmentsA141 = .;
MPRINT(EM_DIAGRAM):   end;
25024     +      other_instalmentsA142 = .;
25025     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for personal_status ;
25026     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop personal_statusA91 personal_statusA92 personal_statusA93 ;
25027     +   end;
MPRINT(EM_DIAGRAM):   if missing( personal_status ) then do;
25028     +end;
MPRINT(EM_DIAGRAM):   personal_statusA91 = .;
25029     +
MPRINT(EM_DIAGRAM):   personal_statusA92 = .;
25030     +*** Generate dummy variables for personal_status ;
MPRINT(EM_DIAGRAM):   personal_statusA93 = .;
25031     +drop personal_statusA91 personal_statusA92 personal_statusA93 ;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
25032     +if missing( personal_status ) then do;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25033     +   personal_statusA91 = .;
MPRINT(EM_DIAGRAM):   end;
25034     +   personal_statusA92 = .;
25035     +   personal_statusA93 = .;
MPRINT(EM_DIAGRAM):   else do;
25036     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
25037     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
25038     +end;
MPRINT(EM_DIAGRAM):   _dm3 = put( personal_status , $3. );
25039     +else do;
25040     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(DMNORMIP):   call dmnorm(_dm3,
25041     +   _dm3 = put( personal_status , $3. );
25042     +   %DMNORMIP( _dm3 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm3 = 'A93' then do;
MPRINT(EM_DIAGRAM):   personal_statusA91 = 0;
MPRINT(EM_DIAGRAM):   personal_statusA92 = 0;
MPRINT(EM_DIAGRAM):   personal_statusA93 = 1;
MPRINT(EM_DIAGRAM):   end;
25043     +   if _dm3 = 'A93'  then do;
25044     +      personal_statusA91 = 0;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A92' then do;
25045     +      personal_statusA92 = 0;
MPRINT(EM_DIAGRAM):   personal_statusA91 = 0;
25046     +      personal_statusA93 = 1;
MPRINT(EM_DIAGRAM):   personal_statusA92 = 1;
25047     +   end;
MPRINT(EM_DIAGRAM):   personal_statusA93 = 0;
25048     +   else if _dm3 = 'A92'  then do;
MPRINT(EM_DIAGRAM):   end;
25049     +      personal_statusA91 = 0;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A94' then do;
25050     +      personal_statusA92 = 1;
MPRINT(EM_DIAGRAM):   personal_statusA91 = -1;
25051     +      personal_statusA93 = 0;
MPRINT(EM_DIAGRAM):   personal_statusA92 = -1;
25052     +   end;
MPRINT(EM_DIAGRAM):   personal_statusA93 = -1;
25053     +   else if _dm3 = 'A94'  then do;
MPRINT(EM_DIAGRAM):   end;
25054     +      personal_statusA91 = -1;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A91' then do;
25055     +      personal_statusA92 = -1;
MPRINT(EM_DIAGRAM):   personal_statusA91 = 1;
25056     +      personal_statusA93 = -1;
MPRINT(EM_DIAGRAM):   personal_statusA92 = 0;
25057     +   end;
MPRINT(EM_DIAGRAM):   personal_statusA93 = 0;
25058     +   else if _dm3 = 'A91'  then do;
MPRINT(EM_DIAGRAM):   end;
25059     +      personal_statusA91 = 1;
MPRINT(EM_DIAGRAM):   else do;
25060     +      personal_statusA92 = 0;
MPRINT(EM_DIAGRAM):   personal_statusA91 = .;
25061     +      personal_statusA93 = 0;
MPRINT(EM_DIAGRAM):   personal_statusA92 = .;
25062     +   end;
MPRINT(EM_DIAGRAM):   personal_statusA93 = .;
25063     +   else do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25064     +      personal_statusA91 = .;
MPRINT(EM_DIAGRAM):   end;
25065     +      personal_statusA92 = .;
MPRINT(EM_DIAGRAM):   end;
25066     +      personal_statusA93 = .;
25067     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for pourpose ;
25068     +      _DM_BAD = 1;
25069     +   end;
MPRINT(EM_DIAGRAM):   drop pourposeA40 pourposeA41 pourposeA410 pourposeA42 pourposeA43 pourposeA44 pourposeA45 pourposeA46 pourposeA48 ;
25070     +end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
25071     +
MPRINT(EM_DIAGRAM):   pourposeA40 = 0;
25072     +*** Generate dummy variables for pourpose ;
MPRINT(EM_DIAGRAM):   pourposeA41 = 0;
25073     +drop pourposeA40 pourposeA41 pourposeA410 pourposeA42 pourposeA43 pourposeA44
MPRINT(EM_DIAGRAM):   pourposeA410 = 0;
25074     +        pourposeA45 pourposeA46 pourposeA48 ;
MPRINT(EM_DIAGRAM):   pourposeA42 = 0;
25075     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   pourposeA43 = 0;
25076     +pourposeA40 = 0;
MPRINT(EM_DIAGRAM):   pourposeA44 = 0;
25077     +pourposeA41 = 0;
MPRINT(EM_DIAGRAM):   pourposeA45 = 0;
25078     +pourposeA410 = 0;
MPRINT(EM_DIAGRAM):   pourposeA46 = 0;
25079     +pourposeA42 = 0;
MPRINT(EM_DIAGRAM):   pourposeA48 = 0;
25080     +pourposeA43 = 0;
MPRINT(EM_DIAGRAM):   if missing( pourpose ) then do;
25081     +pourposeA44 = 0;
MPRINT(EM_DIAGRAM):   pourposeA40 = .;
25082     +pourposeA45 = 0;
MPRINT(EM_DIAGRAM):   pourposeA41 = .;
25083     +pourposeA46 = 0;
MPRINT(EM_DIAGRAM):   pourposeA410 = .;
25084     +pourposeA48 = 0;
MPRINT(EM_DIAGRAM):   pourposeA42 = .;
25085     +if missing( pourpose ) then do;
MPRINT(EM_DIAGRAM):   pourposeA43 = .;
25086     +   pourposeA40 = .;
MPRINT(EM_DIAGRAM):   pourposeA44 = .;
25087     +   pourposeA41 = .;
MPRINT(EM_DIAGRAM):   pourposeA45 = .;
25088     +   pourposeA410 = .;
MPRINT(EM_DIAGRAM):   pourposeA46 = .;
25089     +   pourposeA42 = .;
MPRINT(EM_DIAGRAM):   pourposeA48 = .;
25090     +   pourposeA43 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
25091     +   pourposeA44 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25092     +   pourposeA45 = .;
MPRINT(EM_DIAGRAM):   end;
25093     +   pourposeA46 = .;
25094     +   pourposeA48 = .;
MPRINT(EM_DIAGRAM):   else do;
25095     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm4 $ 4;
25096     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm4 ;
25097     +end;
MPRINT(EM_DIAGRAM):   _dm4 = put( pourpose , $4. );
25098     +else do;
25099     +   length _dm4 $ 4; drop _dm4 ;
MPRINT(DMNORMIP):   call dmnorm(_dm4,
25100     +   _dm4 = put( pourpose , $4. );
25101     +   %DMNORMIP( _dm4 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm4 = 'A43' then do;
MPRINT(EM_DIAGRAM):   pourposeA43 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A40' then do;
25102     +   if _dm4 = 'A43'  then do;
MPRINT(EM_DIAGRAM):   pourposeA40 = 1;
25103     +      pourposeA43 = 1;
MPRINT(EM_DIAGRAM):   end;
25104     +   end;
25105     +   else if _dm4 = 'A40'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A42' then do;
MPRINT(EM_DIAGRAM):   pourposeA42 = 1;
25106     +      pourposeA40 = 1;
MPRINT(EM_DIAGRAM):   end;
25107     +   end;
25108     +   else if _dm4 = 'A42'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A49' then do;
MPRINT(EM_DIAGRAM):   pourposeA40 = -1;
25109     +      pourposeA42 = 1;
MPRINT(EM_DIAGRAM):   pourposeA41 = -1;
25110     +   end;
MPRINT(EM_DIAGRAM):   pourposeA410 = -1;
25111     +   else if _dm4 = 'A49'  then do;
MPRINT(EM_DIAGRAM):   pourposeA42 = -1;
MPRINT(EM_DIAGRAM):   pourposeA43 = -1;
25112     +      pourposeA40 = -1;
MPRINT(EM_DIAGRAM):   pourposeA44 = -1;
25113     +      pourposeA41 = -1;
MPRINT(EM_DIAGRAM):   pourposeA45 = -1;
25114     +      pourposeA410 = -1;
MPRINT(EM_DIAGRAM):   pourposeA46 = -1;
25115     +      pourposeA42 = -1;
MPRINT(EM_DIAGRAM):   pourposeA48 = -1;
25116     +      pourposeA43 = -1;
MPRINT(EM_DIAGRAM):   end;
25117     +      pourposeA44 = -1;
25118     +      pourposeA45 = -1;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A41' then do;
25119     +      pourposeA46 = -1;
MPRINT(EM_DIAGRAM):   pourposeA41 = 1;
25120     +      pourposeA48 = -1;
MPRINT(EM_DIAGRAM):   end;
25121     +   end;
25122     +   else if _dm4 = 'A41'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A46' then do;
MPRINT(EM_DIAGRAM):   pourposeA46 = 1;
25123     +      pourposeA41 = 1;
MPRINT(EM_DIAGRAM):   end;
25124     +   end;
25125     +   else if _dm4 = 'A46'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A45' then do;
MPRINT(EM_DIAGRAM):   pourposeA45 = 1;
25126     +      pourposeA46 = 1;
MPRINT(EM_DIAGRAM):   end;
25127     +   end;
25128     +   else if _dm4 = 'A45'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A44' then do;
MPRINT(EM_DIAGRAM):   pourposeA44 = 1;
25129     +      pourposeA45 = 1;
MPRINT(EM_DIAGRAM):   end;
25130     +   end;
25131     +   else if _dm4 = 'A44'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A410' then do;
MPRINT(EM_DIAGRAM):   pourposeA410 = 1;
25132     +      pourposeA44 = 1;
MPRINT(EM_DIAGRAM):   end;
25133     +   end;
25134     +   else if _dm4 = 'A410'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A48' then do;
MPRINT(EM_DIAGRAM):   pourposeA48 = 1;
25135     +      pourposeA410 = 1;
MPRINT(EM_DIAGRAM):   end;
25136     +   end;
25137     +   else if _dm4 = 'A48'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   pourposeA40 = .;
25138     +      pourposeA48 = 1;
MPRINT(EM_DIAGRAM):   pourposeA41 = .;
25139     +   end;
MPRINT(EM_DIAGRAM):   pourposeA410 = .;
25140     +   else do;
MPRINT(EM_DIAGRAM):   pourposeA42 = .;
MPRINT(EM_DIAGRAM):   pourposeA43 = .;
25141     +      pourposeA40 = .;
MPRINT(EM_DIAGRAM):   pourposeA44 = .;
25142     +      pourposeA41 = .;
MPRINT(EM_DIAGRAM):   pourposeA45 = .;
25143     +      pourposeA410 = .;
MPRINT(EM_DIAGRAM):   pourposeA46 = .;
25144     +      pourposeA42 = .;
MPRINT(EM_DIAGRAM):   pourposeA48 = .;
25145     +      pourposeA43 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
25146     +      pourposeA44 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25147     +      pourposeA45 = .;
MPRINT(EM_DIAGRAM):   end;
25148     +      pourposeA46 = .;
MPRINT(EM_DIAGRAM):   end;
25149     +      pourposeA48 = .;
25150     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for residence ;
25151     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop residence1 residence2 residence3 ;
25152     +   end;
MPRINT(EM_DIAGRAM):   if missing( residence ) then do;
25153     +end;
MPRINT(EM_DIAGRAM):   residence1 = .;
25154     +
MPRINT(EM_DIAGRAM):   residence2 = .;
25155     +*** Generate dummy variables for residence ;
MPRINT(EM_DIAGRAM):   residence3 = .;
25156     +drop residence1 residence2 residence3 ;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
25157     +if missing( residence ) then do;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25158     +   residence1 = .;
MPRINT(EM_DIAGRAM):   end;
25159     +   residence2 = .;
25160     +   residence3 = .;
MPRINT(EM_DIAGRAM):   else do;
25161     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
25162     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
25163     +end;
MPRINT(EM_DIAGRAM):   _dm12 = put( residence , BEST12. );
25164     +else do;
25165     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(DMNORMIP):   call dmnorm(_dm12,
25166     +   _dm12 = put( residence , BEST12. );
25167     +   %DMNORMIP( _dm12 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
MPRINT(EM_DIAGRAM):   residence1 = -1;
MPRINT(EM_DIAGRAM):   residence2 = -1;
MPRINT(EM_DIAGRAM):   residence3 = -1;
MPRINT(EM_DIAGRAM):   end;
25168     +   if _dm12 = '4'  then do;
25169     +      residence1 = -1;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
25170     +      residence2 = -1;
MPRINT(EM_DIAGRAM):   residence1 = 0;
25171     +      residence3 = -1;
MPRINT(EM_DIAGRAM):   residence2 = 1;
25172     +   end;
MPRINT(EM_DIAGRAM):   residence3 = 0;
25173     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   end;
25174     +      residence1 = 0;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
25175     +      residence2 = 1;
MPRINT(EM_DIAGRAM):   residence1 = 0;
25176     +      residence3 = 0;
MPRINT(EM_DIAGRAM):   residence2 = 0;
25177     +   end;
MPRINT(EM_DIAGRAM):   residence3 = 1;
25178     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   end;
25179     +      residence1 = 0;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
25180     +      residence2 = 0;
MPRINT(EM_DIAGRAM):   residence1 = 1;
25181     +      residence3 = 1;
MPRINT(EM_DIAGRAM):   residence2 = 0;
25182     +   end;
MPRINT(EM_DIAGRAM):   residence3 = 0;
25183     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   end;
25184     +      residence1 = 1;
MPRINT(EM_DIAGRAM):   else do;
25185     +      residence2 = 0;
MPRINT(EM_DIAGRAM):   residence1 = .;
25186     +      residence3 = 0;
MPRINT(EM_DIAGRAM):   residence2 = .;
25187     +   end;
MPRINT(EM_DIAGRAM):   residence3 = .;
25188     +   else do;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25189     +      residence1 = .;
MPRINT(EM_DIAGRAM):   end;
25190     +      residence2 = .;
MPRINT(EM_DIAGRAM):   end;
25191     +      residence3 = .;
25192     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for savings ;
25193     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop savingsA61 savingsA62 savingsA63 savingsA64 ;
25194     +   end;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
25195     +end;
MPRINT(EM_DIAGRAM):   savingsA61 = 0;
25196     +
MPRINT(EM_DIAGRAM):   savingsA62 = 0;
25197     +*** Generate dummy variables for savings ;
MPRINT(EM_DIAGRAM):   savingsA63 = 0;
25198     +drop savingsA61 savingsA62 savingsA63 savingsA64 ;
MPRINT(EM_DIAGRAM):   savingsA64 = 0;
25199     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   if missing( savings ) then do;
25200     +savingsA61 = 0;
MPRINT(EM_DIAGRAM):   savingsA61 = .;
25201     +savingsA62 = 0;
MPRINT(EM_DIAGRAM):   savingsA62 = .;
25202     +savingsA63 = 0;
MPRINT(EM_DIAGRAM):   savingsA63 = .;
25203     +savingsA64 = 0;
MPRINT(EM_DIAGRAM):   savingsA64 = .;
25204     +if missing( savings ) then do;
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
25205     +   savingsA61 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25206     +   savingsA62 = .;
MPRINT(EM_DIAGRAM):   end;
25207     +   savingsA63 = .;
25208     +   savingsA64 = .;
MPRINT(EM_DIAGRAM):   else do;
25209     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
25210     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
25211     +end;
MPRINT(EM_DIAGRAM):   _dm3 = put( savings , $3. );
25212     +else do;
25213     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(DMNORMIP):   call dmnorm(_dm3,
25214     +   _dm3 = put( savings , $3. );
25215     +   %DMNORMIP( _dm3 )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if _dm3 = 'A61' then do;
MPRINT(EM_DIAGRAM):   savingsA61 = 1;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A65' then do;
25216     +   if _dm3 = 'A61'  then do;
MPRINT(EM_DIAGRAM):   savingsA61 = -1;
25217     +      savingsA61 = 1;
MPRINT(EM_DIAGRAM):   savingsA62 = -1;
25218     +   end;
MPRINT(EM_DIAGRAM):   savingsA63 = -1;
25219     +   else if _dm3 = 'A65'  then do;
MPRINT(EM_DIAGRAM):   savingsA64 = -1;
MPRINT(EM_DIAGRAM):   end;
25220     +      savingsA61 = -1;
25221     +      savingsA62 = -1;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A62' then do;
25222     +      savingsA63 = -1;
MPRINT(EM_DIAGRAM):   savingsA62 = 1;
25223     +      savingsA64 = -1;
MPRINT(EM_DIAGRAM):   end;
25224     +   end;
25225     +   else if _dm3 = 'A62'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A63' then do;
MPRINT(EM_DIAGRAM):   savingsA63 = 1;
25226     +      savingsA62 = 1;
MPRINT(EM_DIAGRAM):   end;
25227     +   end;
25228     +   else if _dm3 = 'A63'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A64' then do;
MPRINT(EM_DIAGRAM):   savingsA64 = 1;
25229     +      savingsA63 = 1;
MPRINT(EM_DIAGRAM):   end;
25230     +   end;
25231     +   else if _dm3 = 'A64'  then do;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   savingsA61 = .;
25232     +      savingsA64 = 1;
MPRINT(EM_DIAGRAM):   savingsA62 = .;
25233     +   end;
MPRINT(EM_DIAGRAM):   savingsA63 = .;
25234     +   else do;
MPRINT(EM_DIAGRAM):   savingsA64 = .;
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
25235     +      savingsA61 = .;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25236     +      savingsA62 = .;
MPRINT(EM_DIAGRAM):   end;
25237     +      savingsA63 = .;
MPRINT(EM_DIAGRAM):   end;
25238     +      savingsA64 = .;
25239     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   *** *************************;
25240     +      _DM_BAD = 1;
25241     +   end;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
25242     +end;
25243     +
25244     +*** *************************;
25245     +*** Checking missing input Interval
MPRINT(EM_DIAGRAM):   IF NMISS( age , duration ) THEN DO;
25246     +*** *************************;
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
25247     +
25248     +IF NMISS(
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25249     +   age ,
MPRINT(EM_DIAGRAM):   END;
25250     +   duration   ) THEN DO;
MPRINT(EM_DIAGRAM):   *** *************************;
25251     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
25252     +
MPRINT(EM_DIAGRAM):   *** *************************;
25253     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
25254     +END;
MPRINT(EM_DIAGRAM):   S_age = -3.1260583987077 + 0.08769801535329 * age ;
25255     +*** *************************;
MPRINT(EM_DIAGRAM):   S_duration = -1.72080747443144 + 0.08139504237462 * duration ;
25256     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   END;
25257     +*** *************************;
25258     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
25259     +   S_age  =     -3.1260583987077 +     0.08769801535329 * age ;
MPRINT(EM_DIAGRAM):   IF MISSING( age ) THEN S_age = . ;
25260     +   S_duration  =    -1.72080747443144 +     0.08139504237462 * duration ;
25261     +END;
MPRINT(EM_DIAGRAM):   ELSE S_age = -3.1260583987077 + 0.08769801535329 * age ;
25262     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF MISSING( duration ) THEN S_duration = . ;
25263     +   IF MISSING( age ) THEN S_age  = . ;
MPRINT(EM_DIAGRAM):   ELSE S_duration = -1.72080747443144 + 0.08139504237462 * duration ;
25264     +   ELSE S_age  =     -3.1260583987077 +     0.08769801535329 * age ;
MPRINT(EM_DIAGRAM):   END;
MPRINT(EM_DIAGRAM):   *** *************************;
25265     +   IF MISSING( duration ) THEN S_duration  = . ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
25266     +   ELSE S_duration  =    -1.72080747443144 +     0.08139504237462 * duration ;
MPRINT(EM_DIAGRAM):   *** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
25267     +END;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
25268     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
25269     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
25270     +*** *************************;
MPRINT(EM_DIAGRAM):   H11 = 3.88470315034752 * S_age + 3.02606491130675 * S_duration ;
25271     +*** *************************;
MPRINT(EM_DIAGRAM):   H12 = 1.92474614192261 * S_age + 1.84703719017681 * S_duration ;
25272     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   H13 = -3.83220328218462 * S_age + -0.69731880291194 * S_duration ;
25273     +*** *************************;
MPRINT(EM_DIAGRAM):   H14 = 1.2128725473386 * S_age + -4.83920139652938 * S_duration ;
25274     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   H15 = 3.15823655910557 * S_age + 1.97067002064809 * S_duration ;
25275     +   H11  =     3.88470315034752 * S_age  +     3.02606491130675 * S_duration ;
MPRINT(EM_DIAGRAM):   H16 = 1.86063342364953 * S_age + 2.2821047710014 * S_duration ;
25276     +   H12  =     1.92474614192261 * S_age  +     1.84703719017681 * S_duration ;
25277     +   H13  =    -3.83220328218462 * S_age  +    -0.69731880291194 * S_duration ;
25278     +   H14  =      1.2128725473386 * S_age  +    -4.83920139652938 * S_duration ;
25279     +   H15  =     3.15823655910557 * S_age  +     1.97067002064809 * S_duration ;
25280     +   H16  =     1.86063342364953 * S_age  +      2.2821047710014 * S_duration ;
25281     +   H11  = H11  +     5.85336113518091 * acc_statusA11
25282     +          +    -1.51910872522856 * acc_statusA12  +     2.85267673133872 *
25283     +        acc_statusA13  +    -0.04558862107847 * credit_historyA30
25284     +          +    -9.15832724294458 * credit_historyA31
25285     +          +     1.80130829761548 * credit_historyA32
25286     +          +     1.01253783638328 * credit_historyA33
25287     +          +     1.52665521811108 * employmentA71  +     5.80408288482473 *
25288     +        employmentA72  +     1.59365347153506 * employmentA73
25289     +          +    -1.82413662435134 * employmentA74  +    -2.58965920027424 *
25290     +        instalment1  +     1.28904745176096 * instalment2
25291     +          +     1.25649457703727 * instalment3  +     0.23861980471539 *
25292     +        jobA171  +     1.42735134863783 * jobA172  +    -2.47517777695746 *
25293     +        jobA173  +       5.240287793369 * other_instalmentsA141
25294     +          +     0.14730633181981 * other_instalmentsA142
25295     +          +    -1.18802225261226 * personal_statusA91
25296     +          +     6.92742477634271 * personal_statusA92
25297     +          +    -3.15424088763945 * personal_statusA93
25298     +          +    -1.90490833567753 * pourposeA40  +     2.10830562889933 *
25299     +        pourposeA41  +    -1.56025448177615 * pourposeA410
25300     +          +     3.10704481686831 * pourposeA42  +    -6.64908873200413 *
25301     +        pourposeA43  +    -0.11415751993223 * pourposeA44
25302     +          +    -1.82088346011256 * pourposeA45  +     1.92391080202812 *
25303     +        pourposeA46  +     0.19738482075784 * pourposeA48
MPRINT(EM_DIAGRAM):   H11 = H11 + 5.85336113518091 * acc_statusA11 + -1.51910872522856 * acc_statusA12 + 2.85267673133872 * acc_statusA13 + -0.04558862107847 * credit_historyA30 + -9.15832724294458 * credit_historyA31 + 1.80130829761548 * 
credit_historyA32 + 1.01253783638328 * credit_historyA33 + 1.52665521811108 * employmentA71 + 5.80408288482473 * employmentA72 + 1.59365347153506 * employmentA73 + -1.82413662435134 * employmentA74 + -2.58965920027424 * instalment1 + 1.28904745176096 * 
instalment2 + 1.25649457703727 * instalment3 + 0.23861980471539 * jobA171 + 1.42735134863783 * jobA172 + -2.47517777695746 * jobA173 + 5.240287793369 * other_instalmentsA141 + 0.14730633181981 * other_instalmentsA142 + -1.18802225261226 * 
personal_statusA91 + 6.92742477634271 * personal_statusA92 + -3.15424088763945 * personal_statusA93 + -1.90490833567753 * pourposeA40 + 2.10830562889933 * pourposeA41 + -1.56025448177615 * pourposeA410 + 3.10704481686831 * pourposeA42 + -6.64908873200413 
* pourposeA43 + -0.11415751993223 * pourposeA44 + -1.82088346011256 * pourposeA45 + 1.92391080202812 * pourposeA46 + 0.19738482075784 * pourposeA48 + 2.20267787404329 * residence1 + -0.53226123369492 * residence2 + 1.21273686985158 * residence3 + 
1.33881561206283 * savingsA61 + -5.52577706951782 * savingsA62 + 3.41905048053849 * savingsA63 + 1.44923641640566 * savingsA64 ;
25304     +          +     2.20267787404329 * residence1  +    -0.53226123369492 *
25305     +        residence2  +     1.21273686985158 * residence3
25306     +          +     1.33881561206283 * savingsA61  +    -5.52577706951782 *
25307     +        savingsA62  +     3.41905048053849 * savingsA63
25308     +          +     1.44923641640566 * savingsA64 ;
25309     +   H12  = H12  +     0.40874973128462 * acc_statusA11
25310     +          +     3.53972813950845 * acc_statusA12  +     -2.5365612755193 *
25311     +        acc_statusA13  +      0.2960446296625 * credit_historyA30
25312     +          +     -0.8191392350611 * credit_historyA31
25313     +          +    -1.28605090922108 * credit_historyA32
25314     +          +    -0.18605400840381 * credit_historyA33
25315     +          +    -0.72818255924901 * employmentA71  +     2.64248388614912 *
25316     +        employmentA72  +     -2.5083438470866 * employmentA73
25317     +          +    -3.99823325721787 * employmentA74  +     3.74132781268226 *
25318     +        instalment1  +     2.43617356630769 * instalment2
25319     +          +     2.06753271682016 * instalment3  +     0.43347341806171 *
25320     +        jobA171  +     0.79659540117967 * jobA172  +    -4.00712774486279 *
25321     +        jobA173  +     0.32180456225706 * other_instalmentsA141
25322     +          +     5.30008192937965 * other_instalmentsA142
25323     +          +     2.50939576335502 * personal_statusA91
25324     +          +    -3.17832247827687 * personal_statusA92
25325     +          +     3.90285486423423 * personal_statusA93
25326     +          +     -3.4859867600795 * pourposeA40  +     2.93757854639238 *
25327     +        pourposeA41  +     0.57234622702094 * pourposeA410
25328     +          +    -3.17908352121335 * pourposeA42  +    -2.44399719483471 *
25329     +        pourposeA43  +    -0.14552835222264 * pourposeA44
25330     +          +     1.30633361508351 * pourposeA45  +      0.6817908908468 *
25331     +        pourposeA46  +    -0.35508968853294 * pourposeA48
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.40874973128462 * acc_statusA11 + 3.53972813950845 * acc_statusA12 + -2.5365612755193 * acc_statusA13 + 0.2960446296625 * credit_historyA30 + -0.8191392350611 * credit_historyA31 + -1.28605090922108 * credit_historyA32 + 
-0.18605400840381 * credit_historyA33 + -0.72818255924901 * employmentA71 + 2.64248388614912 * employmentA72 + -2.5083438470866 * employmentA73 + -3.99823325721787 * employmentA74 + 3.74132781268226 * instalment1 + 2.43617356630769 * instalment2 + 
2.06753271682016 * instalment3 + 0.43347341806171 * jobA171 + 0.79659540117967 * jobA172 + -4.00712774486279 * jobA173 + 0.32180456225706 * other_instalmentsA141 + 5.30008192937965 * other_instalmentsA142 + 2.50939576335502 * personal_statusA91 + 
-3.17832247827687 * personal_statusA92 + 3.90285486423423 * personal_statusA93 + -3.4859867600795 * pourposeA40 + 2.93757854639238 * pourposeA41 + 0.57234622702094 * pourposeA410 + -3.17908352121335 * pourposeA42 + -2.44399719483471 * pourposeA43 + 
-0.14552835222264 * pourposeA44 + 1.30633361508351 * pourposeA45 + 0.6817908908468 * pourposeA46 + -0.35508968853294 * pourposeA48 + -3.81506777797343 * residence1 + 0.03235463658955 * residence2 + -2.79820659583566 * residence3 + -0.79421069338311 * 
savingsA61 + 3.59460140605684 * savingsA62 + 1.85925499950209 * savingsA63 + 1.72977239750017 * savingsA64 ;
25332     +          +    -3.81506777797343 * residence1  +     0.03235463658955 *
25333     +        residence2  +    -2.79820659583566 * residence3
25334     +          +    -0.79421069338311 * savingsA61  +     3.59460140605684 *
25335     +        savingsA62  +     1.85925499950209 * savingsA63
25336     +          +     1.72977239750017 * savingsA64 ;
25337     +   H13  = H13  +     0.02627109434597 * acc_statusA11
25338     +          +    -0.40414025011613 * acc_statusA12  +    -0.40893626735337 *
25339     +        acc_statusA13  +    -10.1461835058999 * credit_historyA30
25340     +          +    -5.40983906216908 * credit_historyA31
25341     +          +     5.58968201800791 * credit_historyA32
25342     +          +    -1.89148284635023 * credit_historyA33
25343     +          +    -0.69034165498916 * employmentA71  +    -6.28231426802577 *
25344     +        employmentA72  +    -1.62163276229487 * employmentA73
25345     +          +     3.51711748332864 * employmentA74  +     4.01953098339699 *
25346     +        instalment1  +    -3.42909784690118 * instalment2
25347     +          +     -0.3246805130258 * instalment3  +     3.61646209516151 *
25348     +        jobA171  +    -4.92852111368414 * jobA172  +     2.36899306252136 *
25349     +        jobA173  +     1.84176151329654 * other_instalmentsA141
25350     +          +     3.61336321564192 * other_instalmentsA142
25351     +          +    -6.28988256069041 * personal_statusA91
25352     +          +    -4.95898924200421 * personal_statusA92
25353     +          +     4.19358037873929 * personal_statusA93
25354     +          +     2.60179668150474 * pourposeA40  +     3.04783278132385 *
25355     +        pourposeA41  +    -1.85825181368882 * pourposeA410
25356     +          +    -3.36798496969519 * pourposeA42  +     7.19094497337727 *
25357     +        pourposeA43  +    -2.00430699319357 * pourposeA44
25358     +          +    -3.46396946833663 * pourposeA45  +    -3.85881725299088 *
25359     +        pourposeA46  +     2.45196424033222 * pourposeA48
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02627109434597 * acc_statusA11 + -0.40414025011613 * acc_statusA12 + -0.40893626735337 * acc_statusA13 + -10.1461835058999 * credit_historyA30 + -5.40983906216908 * credit_historyA31 + 5.58968201800791 * 
credit_historyA32 + -1.89148284635023 * credit_historyA33 + -0.69034165498916 * employmentA71 + -6.28231426802577 * employmentA72 + -1.62163276229487 * employmentA73 + 3.51711748332864 * employmentA74 + 4.01953098339699 * instalment1 + -3.42909784690118 * 
instalment2 + -0.3246805130258 * instalment3 + 3.61646209516151 * jobA171 + -4.92852111368414 * jobA172 + 2.36899306252136 * jobA173 + 1.84176151329654 * other_instalmentsA141 + 3.61336321564192 * other_instalmentsA142 + -6.28988256069041 * 
personal_statusA91 + -4.95898924200421 * personal_statusA92 + 4.19358037873929 * personal_statusA93 + 2.60179668150474 * pourposeA40 + 3.04783278132385 * pourposeA41 + -1.85825181368882 * pourposeA410 + -3.36798496969519 * pourposeA42 + 7.19094497337727 * 
pourposeA43 + -2.00430699319357 * pourposeA44 + -3.46396946833663 * pourposeA45 + -3.85881725299088 * pourposeA46 + 2.45196424033222 * pourposeA48 + 3.15575710649774 * residence1 + -3.44369900456848 * residence2 + -3.53309183322318 * residence3 + 
3.7239893069196 * savingsA61 + 2.46380277484355 * savingsA62 + 4.20919805297718 * savingsA63 + 10.2300859432272 * savingsA64 ;
25360     +          +     3.15575710649774 * residence1  +    -3.44369900456848 *
25361     +        residence2  +    -3.53309183322318 * residence3
25362     +          +      3.7239893069196 * savingsA61  +     2.46380277484355 *
25363     +        savingsA62  +     4.20919805297718 * savingsA63
25364     +          +     10.2300859432272 * savingsA64 ;
25365     +   H14  = H14  +    -3.47116496850798 * acc_statusA11
25366     +          +    -0.04028267429063 * acc_statusA12  +     -1.8070213103054 *
25367     +        acc_statusA13  +     4.69985662749945 * credit_historyA30
25368     +          +     2.45453531178196 * credit_historyA31
25369     +          +    -0.57311454501342 * credit_historyA32
25370     +          +    -2.28308085818639 * credit_historyA33
25371     +          +    -1.23952941936394 * employmentA71  +    -3.46380378159007 *
25372     +        employmentA72  +     2.85524520194781 * employmentA73
25373     +          +    -2.09557419452106 * employmentA74  +     2.01765631144493 *
25374     +        instalment1  +     0.43903469840887 * instalment2
25375     +          +    -3.36075870796471 * instalment3  +    -1.61103118193839 *
25376     +        jobA171  +     0.40353409733314 * jobA172  +    -2.24160289202626 *
25377     +        jobA173  +    -5.57372126640324 * other_instalmentsA141
25378     +          +     2.51516233044409 * other_instalmentsA142
25379     +          +    -1.95203510492347 * personal_statusA91
25380     +          +    -0.09443056582913 * personal_statusA92
25381     +          +     0.78232823216767 * personal_statusA93
25382     +          +    -0.58109234371231 * pourposeA40  +     2.56034231156012 *
25383     +        pourposeA41  +     1.95353925115582 * pourposeA410
25384     +          +     0.17783814692462 * pourposeA42  +     2.40613701820139 *
25385     +        pourposeA43  +    -0.22370051076584 * pourposeA44
25386     +          +    -2.90155206781463 * pourposeA45  +      0.4247474192809 *
25387     +        pourposeA46  +    -4.03278496259953 * pourposeA48
MPRINT(EM_DIAGRAM):   H14 = H14 + -3.47116496850798 * acc_statusA11 + -0.04028267429063 * acc_statusA12 + -1.8070213103054 * acc_statusA13 + 4.69985662749945 * credit_historyA30 + 2.45453531178196 * credit_historyA31 + -0.57311454501342 * 
credit_historyA32 + -2.28308085818639 * credit_historyA33 + -1.23952941936394 * employmentA71 + -3.46380378159007 * employmentA72 + 2.85524520194781 * employmentA73 + -2.09557419452106 * employmentA74 + 2.01765631144493 * instalment1 + 0.43903469840887 * 
instalment2 + -3.36075870796471 * instalment3 + -1.61103118193839 * jobA171 + 0.40353409733314 * jobA172 + -2.24160289202626 * jobA173 + -5.57372126640324 * other_instalmentsA141 + 2.51516233044409 * other_instalmentsA142 + -1.95203510492347 * 
personal_statusA91 + -0.09443056582913 * personal_statusA92 + 0.78232823216767 * personal_statusA93 + -0.58109234371231 * pourposeA40 + 2.56034231156012 * pourposeA41 + 1.95353925115582 * pourposeA410 + 0.17783814692462 * pourposeA42 + 2.40613701820139 * 
pourposeA43 + -0.22370051076584 * pourposeA44 + -2.90155206781463 * pourposeA45 + 0.4247474192809 * pourposeA46 + -4.03278496259953 * pourposeA48 + 5.13604873683846 * residence1 + -3.53899220254688 * residence2 + -0.90760752155468 * residence3 + 
-5.25220877128637 * savingsA61 + 2.09667916798316 * savingsA62 + -6.55233802541035 * savingsA63 + 6.03035566557181 * savingsA64 ;
25388     +          +     5.13604873683846 * residence1  +    -3.53899220254688 *
25389     +        residence2  +    -0.90760752155468 * residence3
25390     +          +    -5.25220877128637 * savingsA61  +     2.09667916798316 *
25391     +        savingsA62  +    -6.55233802541035 * savingsA63
25392     +          +     6.03035566557181 * savingsA64 ;
25393     +   H15  = H15  +    -5.13870995571291 * acc_statusA11
25394     +          +    -0.93090791599081 * acc_statusA12  +     0.08290689621647 *
25395     +        acc_statusA13  +    -1.75241854349394 * credit_historyA30
25396     +          +      3.4984143918753 * credit_historyA31
25397     +          +    -3.77258138768396 * credit_historyA32
25398     +          +     2.14918665651411 * credit_historyA33
25399     +          +    -0.38166522429418 * employmentA71  +    -4.33876270326727 *
25400     +        employmentA72  +    -0.97591723468346 * employmentA73
25401     +          +      4.3767824413533 * employmentA74  +     2.13229556510306 *
25402     +        instalment1  +     2.18557433541965 * instalment2
25403     +          +      0.8267829825008 * instalment3  +    -0.04920883269904 *
25404     +        jobA171  +      2.9349839310711 * jobA172  +     0.69663453174024 *
25405     +        jobA173  +    -4.83724654443814 * other_instalmentsA141
25406     +          +    -3.42653964690379 * other_instalmentsA142
25407     +          +     2.85887656939615 * personal_statusA91
25408     +          +    -1.13430314595419 * personal_statusA92
25409     +          +    -1.42271967230904 * personal_statusA93
25410     +          +    -5.44371811788823 * pourposeA40  +     2.45416228621317 *
25411     +        pourposeA41  +    -2.15824493043412 * pourposeA410
25412     +          +    -0.32024811687555 * pourposeA42  +    -1.15756130350396 *
25413     +        pourposeA43  +     2.61591592290617 * pourposeA44
25414     +          +     3.98394702967944 * pourposeA45  +     3.54626256299379 *
25415     +        pourposeA46  +     4.07598904926656 * pourposeA48
MPRINT(EM_DIAGRAM):   H15 = H15 + -5.13870995571291 * acc_statusA11 + -0.93090791599081 * acc_statusA12 + 0.08290689621647 * acc_statusA13 + -1.75241854349394 * credit_historyA30 + 3.4984143918753 * credit_historyA31 + -3.77258138768396 * 
credit_historyA32 + 2.14918665651411 * credit_historyA33 + -0.38166522429418 * employmentA71 + -4.33876270326727 * employmentA72 + -0.97591723468346 * employmentA73 + 4.3767824413533 * employmentA74 + 2.13229556510306 * instalment1 + 2.18557433541965 * 
instalment2 + 0.8267829825008 * instalment3 + -0.04920883269904 * jobA171 + 2.9349839310711 * jobA172 + 0.69663453174024 * jobA173 + -4.83724654443814 * other_instalmentsA141 + -3.42653964690379 * other_instalmentsA142 + 2.85887656939615 * 
personal_statusA91 + -1.13430314595419 * personal_statusA92 + -1.42271967230904 * personal_statusA93 + -5.44371811788823 * pourposeA40 + 2.45416228621317 * pourposeA41 + -2.15824493043412 * pourposeA410 + -0.32024811687555 * pourposeA42 + 
-1.15756130350396 * pourposeA43 + 2.61591592290617 * pourposeA44 + 3.98394702967944 * pourposeA45 + 3.54626256299379 * pourposeA46 + 4.07598904926656 * pourposeA48 + -9.79269111967874 * residence1 + 4.68948344453852 * residence2 + 3.51633800177621 * 
residence3 + 1.02670714955746 * savingsA61 + -1.02645031864036 * savingsA62 + -1.58793544391311 * savingsA63 + -5.4116583397411 * savingsA64 ;
25416     +          +    -9.79269111967874 * residence1  +     4.68948344453852 *
25417     +        residence2  +     3.51633800177621 * residence3
25418     +          +     1.02670714955746 * savingsA61  +    -1.02645031864036 *
25419     +        savingsA62  +    -1.58793544391311 * savingsA63
25420     +          +     -5.4116583397411 * savingsA64 ;
25421     +   H16  = H16  +     6.24424985639943 * acc_statusA11
25422     +          +    -1.60139591409873 * acc_statusA12  +    -5.44002756333355 *
25423     +        acc_statusA13  +     3.17444613601367 * credit_historyA30
25424     +          +    -3.90366636673192 * credit_historyA31
25425     +          +     1.33445959622971 * credit_historyA32
25426     +          +    -1.93041493262026 * credit_historyA33
25427     +          +    -0.20653100687855 * employmentA71  +    -2.20086833605874 *
25428     +        employmentA72  +     3.60696613615584 * employmentA73
25429     +          +     -5.5715968820629 * employmentA74  +    -0.24735051952392 *
25430     +        instalment1  +    -0.82515283722191 * instalment2
25431     +          +    -0.19410387770336 * instalment3  +    -2.06125962946396 *
25432     +        jobA171  +    -0.27442942387422 * jobA172  +    -0.17324277271499 *
25433     +        jobA173  +    -2.51711411986199 * other_instalmentsA141
25434     +          +      0.3699041882887 * other_instalmentsA142
25435     +          +     0.89559379566286 * personal_statusA91
25436     +          +     0.21915851134358 * personal_statusA92
25437     +          +    -2.80086914950026 * personal_statusA93
25438     +          +     5.50083722026902 * pourposeA40  +    -3.47123237651318 *
25439     +        pourposeA41  +    -3.32176499440496 * pourposeA410
25440     +          +     2.97363831580786 * pourposeA42  +     2.70804786258688 *
25441     +        pourposeA43  +     0.04133492338976 * pourposeA44
25442     +          +    -0.11950133351543 * pourposeA45  +    -0.34449869871402 *
25443     +        pourposeA46  +     0.24955479539046 * pourposeA48
MPRINT(EM_DIAGRAM):   H16 = H16 + 6.24424985639943 * acc_statusA11 + -1.60139591409873 * acc_statusA12 + -5.44002756333355 * acc_statusA13 + 3.17444613601367 * credit_historyA30 + -3.90366636673192 * credit_historyA31 + 1.33445959622971 * 
credit_historyA32 + -1.93041493262026 * credit_historyA33 + -0.20653100687855 * employmentA71 + -2.20086833605874 * employmentA72 + 3.60696613615584 * employmentA73 + -5.5715968820629 * employmentA74 + -0.24735051952392 * instalment1 + -0.82515283722191 * 
instalment2 + -0.19410387770336 * instalment3 + -2.06125962946396 * jobA171 + -0.27442942387422 * jobA172 + -0.17324277271499 * jobA173 + -2.51711411986199 * other_instalmentsA141 + 0.3699041882887 * other_instalmentsA142 + 0.89559379566286 * 
personal_statusA91 + 0.21915851134358 * personal_statusA92 + -2.80086914950026 * personal_statusA93 + 5.50083722026902 * pourposeA40 + -3.47123237651318 * pourposeA41 + -3.32176499440496 * pourposeA410 + 2.97363831580786 * pourposeA42 + 2.70804786258688 * 
pourposeA43 + 0.04133492338976 * pourposeA44 + -0.11950133351543 * pourposeA45 + -0.34449869871402 * pourposeA46 + 0.24955479539046 * pourposeA48 + 0.23623412266027 * residence1 + -0.01589590342722 * residence2 + 3.16274821650315 * residence3 + 
4.76881953811668 * savingsA61 + 1.12466433888124 * savingsA62 + -2.81910088287391 * savingsA63 + -0.06966627063783 * savingsA64 ;
25444     +          +     0.23623412266027 * residence1  +    -0.01589590342722 *
MPRINT(EM_DIAGRAM):   H11 = -6.09377765773818 + H11 ;
25445     +        residence2  +     3.16274821650315 * residence3
MPRINT(EM_DIAGRAM):   H12 = -2.76875271195626 + H12 ;
25446     +          +     4.76881953811668 * savingsA61  +     1.12466433888124 *
MPRINT(EM_DIAGRAM):   H13 = -4.21500268270065 + H13 ;
25447     +        savingsA62  +    -2.81910088287391 * savingsA63
MPRINT(EM_DIAGRAM):   H14 = 10.6484786799228 + H14 ;
25448     +          +    -0.06966627063783 * savingsA64 ;
MPRINT(EM_DIAGRAM):   H15 = -7.0834543217775 + H15 ;
25449     +   H11  =    -6.09377765773818 + H11 ;
MPRINT(EM_DIAGRAM):   H16 = -1.38516541840178 + H16 ;
25450     +   H12  =    -2.76875271195626 + H12 ;
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
25451     +   H13  =    -4.21500268270065 + H13 ;
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
25452     +   H14  =     10.6484786799228 + H14 ;
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
25453     +   H15  =     -7.0834543217775 + H15 ;
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
25454     +   H16  =    -1.38516541840178 + H16 ;
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
25455     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
25456     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   END;
25457     +   H13  = TANH(H13 );
25458     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   ELSE DO;
25459     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H11 = .;
25460     +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H12 = .;
25461     +END;
MPRINT(EM_DIAGRAM):   H13 = .;
25462     +ELSE DO;
MPRINT(EM_DIAGRAM):   H14 = .;
MPRINT(EM_DIAGRAM):   H15 = .;
25463     +   H11  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
25464     +   H12  = .;
MPRINT(EM_DIAGRAM):   END;
25465     +   H13  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
25466     +   H14  = .;
MPRINT(EM_DIAGRAM):   *** Writing the Node default ;
25467     +   H15  = .;
MPRINT(EM_DIAGRAM):   *** *************************;
25468     +   H16  = .;
25469     +END;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for default ;
25470     +*** *************************;
MPRINT(EM_DIAGRAM):   drop default1 default0 ;
25471     +*** Writing the Node default ;
MPRINT(EM_DIAGRAM):   label F_default = 'From: default' ;
25472     +*** *************************;
25473     +
MPRINT(EM_DIAGRAM):   length F_default $ 12;
25474     +*** Generate dummy variables for default ;
25475     +drop default1 default0 ;
MPRINT(EM_DIAGRAM):   F_default = put( default , BEST12. );
25476     +label F_default = 'From: default' ;
25477     +length F_default $ 12;
MPRINT(DMNORMIP):   call dmnorm(F_default,
25478     +F_default = put( default , BEST12. );
25479     +%DMNORMIP( F_default )
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   if missing( default ) then do;
MPRINT(EM_DIAGRAM):   default1 = .;
MPRINT(EM_DIAGRAM):   default0 = .;
MPRINT(EM_DIAGRAM):   end;
25480     +if missing( default ) then do;
MPRINT(EM_DIAGRAM):   else do;
25481     +   default1 = .;
MPRINT(EM_DIAGRAM):   if F_default = '0' then do;
25482     +   default0 = .;
MPRINT(EM_DIAGRAM):   default1 = 0;
25483     +end;
MPRINT(EM_DIAGRAM):   default0 = 1;
25484     +else do;
MPRINT(EM_DIAGRAM):   end;
25485     +   if F_default = '0'  then do;
MPRINT(EM_DIAGRAM):   else if F_default = '1' then do;
25486     +      default1 = 0;
MPRINT(EM_DIAGRAM):   default1 = 1;
25487     +      default0 = 1;
MPRINT(EM_DIAGRAM):   default0 = 0;
25488     +   end;
MPRINT(EM_DIAGRAM):   end;
25489     +   else if F_default = '1'  then do;
MPRINT(EM_DIAGRAM):   else do;
25490     +      default1 = 1;
MPRINT(EM_DIAGRAM):   default1 = .;
25491     +      default0 = 0;
MPRINT(EM_DIAGRAM):   default0 = .;
25492     +   end;
MPRINT(EM_DIAGRAM):   end;
25493     +   else do;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
25494     +      default1 = .;
25495     +      default0 = .;
25496     +   end;
MPRINT(EM_DIAGRAM):   P_default1 = -5.62522999260239 * H11 + 2.92428141717916 * H12 + -4.87546792267536 * H13 + -7.51771208699719 * H14 + -5.85424199814977 * H15 + 4.85181206552492 * H16 ;
25497     +end;
MPRINT(EM_DIAGRAM):   P_default1 = -3.25147222609689 + P_default1 ;
25498     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   P_default0 = 0;
25499     +   P_default1  =    -5.62522999260239 * H11  +     2.92428141717916 * H12
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_default1 , P_default0 );
25500     +          +    -4.87546792267536 * H13  +    -7.51771208699719 * H14
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
25501     +          +    -5.85424199814977 * H15  +     4.85181206552492 * H16 ;
MPRINT(EM_DIAGRAM):   P_default1 = EXP(P_default1 - _MAX_);
25502     +   P_default1  =    -3.25147222609689 + P_default1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_default1 ;
25503     +   P_default0  = 0;
MPRINT(EM_DIAGRAM):   P_default0 = EXP(P_default0 - _MAX_);
25504     +   _MAX_ = MAX (P_default1 , P_default0 );
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_default0 ;
25505     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   P_default1 = P_default1 / _SUM_;
25506     +   P_default1  = EXP(P_default1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_default0 = P_default0 / _SUM_;
25507     +   _SUM_ = _SUM_ + P_default1 ;
MPRINT(EM_DIAGRAM):   END;
25508     +   P_default0  = EXP(P_default0  - _MAX_);
25509     +   _SUM_ = _SUM_ + P_default0 ;
MPRINT(EM_DIAGRAM):   ELSE DO;
25510     +   P_default1  = P_default1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_default1 = .;
25511     +   P_default0  = P_default0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_default0 = .;
25512     +END;
MPRINT(EM_DIAGRAM):   END;
25513     +ELSE DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   P_default1 = 0.3;
25514     +   P_default1  = .;
MPRINT(EM_DIAGRAM):   P_default0 = 0.7;
25515     +   P_default0  = .;
MPRINT(EM_DIAGRAM):   END;
25516     +END;
MPRINT(EM_DIAGRAM):   *** *****************************;
25517     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node default ;
25518     +   P_default1  =                  0.3;
MPRINT(EM_DIAGRAM):   *** ******************************;
25519     +   P_default0  =                  0.7;
MPRINT(EM_DIAGRAM):   IF MISSING( default1 ) THEN R_default1 = . ;
25520     +END;
25521     +*** *****************************;
MPRINT(EM_DIAGRAM):   ELSE R_default1 = default1 - P_default1 ;
25522     +*** Writing the Residuals  of the Node default ;
MPRINT(EM_DIAGRAM):   IF MISSING( default0 ) THEN R_default0 = . ;
25523     +*** ******************************;
25524     +IF MISSING( default1 ) THEN R_default1  = . ;
MPRINT(EM_DIAGRAM):   ELSE R_default0 = default0 - P_default0 ;
25525     +ELSE R_default1  = default1  - P_default1 ;
25526     +IF MISSING( default0 ) THEN R_default0  = . ;
MPRINT(EM_DIAGRAM):   *** Decision Processing;
25527     +ELSE R_default0  = default0  - P_default0 ;
MPRINT(EM_DIAGRAM):   label D_DEFAULT = 'Decision: default' ;
25528     +
MPRINT(EM_DIAGRAM):   label EL_DEFAULT = 'Expected Loss: default' ;
25529     +
25530     +*** Decision Processing;
MPRINT(EM_DIAGRAM):   label BL_DEFAULT = 'Best Loss: default' ;
25531     +label D_DEFAULT = 'Decision: default' ;
MPRINT(EM_DIAGRAM):   label CL_DEFAULT = 'Computed Loss: default' ;
25532     +label EL_DEFAULT = 'Expected Loss: default' ;
25533     +label BL_DEFAULT = 'Best Loss: default' ;
MPRINT(EM_DIAGRAM):   length D_DEFAULT $ 9;
25534     +label CL_DEFAULT = 'Computed Loss: default' ;
MPRINT(EM_DIAGRAM):   D_DEFAULT = ' ';
25535     +
MPRINT(EM_DIAGRAM):   EL_DEFAULT = .;
25536     +length D_DEFAULT $ 9;
MPRINT(EM_DIAGRAM):   BL_DEFAULT = .;
MPRINT(EM_DIAGRAM):   CL_DEFAULT = .;
25537     +
25538     +D_DEFAULT = ' ';
MPRINT(EM_DIAGRAM):   *** Compute Expected Consequences and Choose Decision;
25539     +EL_DEFAULT = .;
MPRINT(EM_DIAGRAM):   _decnum = 1;
MPRINT(EM_DIAGRAM):   drop _decnum;
25540     +BL_DEFAULT = .;
25541     +CL_DEFAULT = .;
MPRINT(EM_DIAGRAM):   D_DEFAULT = '1' ;
25542     +
MPRINT(EM_DIAGRAM):   EL_DEFAULT = P_default1 * 0 + P_default0 * 1;
25543     +*** Compute Expected Consequences and Choose Decision;
MPRINT(EM_DIAGRAM):   drop _sum;
25544     +_decnum = 1; drop _decnum;
MPRINT(EM_DIAGRAM):   _sum = P_default1 * 5 + P_default0 * 0;
25545     +
MPRINT(EM_DIAGRAM):   if _sum < EL_DEFAULT + -2.27374E-12 then do;
25546     +D_DEFAULT = '1' ;
MPRINT(EM_DIAGRAM):   EL_DEFAULT = _sum;
MPRINT(EM_DIAGRAM):   _decnum = 2;
25547     +EL_DEFAULT = P_default1 * 0 + P_default0 * 1;
MPRINT(EM_DIAGRAM):   D_DEFAULT = '0' ;
25548     +drop _sum;
MPRINT(EM_DIAGRAM):   end;
25549     +_sum = P_default1 * 5 + P_default0 * 0;
25550     +if _sum < EL_DEFAULT + -2.27374E-12 then do;
MPRINT(EM_DIAGRAM):   *** Decision Matrix;
25551     +   EL_DEFAULT = _sum; _decnum = 2;
25552     +   D_DEFAULT = '0' ;
25553     +end;
25554     +
MPRINT(EM_DIAGRAM):   array NEURAL2dema [2,2] _temporary_ ( 0 5 1 0 );
25555     +*** Decision Matrix;
25556     +array NEURAL2dema [2,2] _temporary_ (
MPRINT(EM_DIAGRAM):   *** Find Index of Target Category;
25557     +/* row 1 */  0 5
MPRINT(EM_DIAGRAM):   drop _tarnum;
MPRINT(EM_DIAGRAM):   select( F_default );
25558     +/* row 2 */  1 0
MPRINT(EM_DIAGRAM):   when('1' ) _tarnum = 1;
25559     +);
MPRINT(EM_DIAGRAM):   when('0' ) _tarnum = 2;
25560     +
25561     +*** Find Index of Target Category;
MPRINT(EM_DIAGRAM):   otherwise _tarnum = 0;
25562     +drop _tarnum; select( F_default );
MPRINT(EM_DIAGRAM):   end;
25563     +   when('1' ) _tarnum = 1;
MPRINT(EM_DIAGRAM):   if _tarnum <= 0 then goto NEURAL2deex;
25564     +   when('0' ) _tarnum = 2;
25565     +   otherwise _tarnum = 0;
MPRINT(EM_DIAGRAM):   *** Computed Consequence of Chosen Decision;
MPRINT(EM_DIAGRAM):   CL_DEFAULT = NEURAL2dema [_tarnum,_decnum];
25566     +end;
25567     +if _tarnum <= 0 then goto NEURAL2deex;
MPRINT(EM_DIAGRAM):   *** Best Possible Consequence of Any Decision without Cost;
25568     +
MPRINT(EM_DIAGRAM):   array NEURAL2debe [2] _temporary_ ( 0 0);
25569     +*** Computed Consequence of Chosen Decision;
MPRINT(EM_DIAGRAM):   BL_DEFAULT = NEURAL2debe [_tarnum];
25570     +CL_DEFAULT = NEURAL2dema [_tarnum,_decnum];
25571     +
25572     +*** Best Possible Consequence of Any Decision without Cost;
25573     +array NEURAL2debe [2] _temporary_ ( 0 0);
MPRINT(EM_DIAGRAM):   NEURAL2deex:;
25574     +BL_DEFAULT = NEURAL2debe [_tarnum];
25575     +
MPRINT(EM_DIAGRAM):   *** End Decision Processing ;
25576     +
MPRINT(EM_DIAGRAM):   *** *************************;
25577     +NEURAL2deex:;
MPRINT(EM_DIAGRAM):   *** Writing the I_default AND U_default ;
MPRINT(EM_DIAGRAM):   *** *************************;
25578     +
MPRINT(EM_DIAGRAM):   _MAXP_ = P_default1 ;
25579     +*** End Decision Processing ;
MPRINT(EM_DIAGRAM):   I_default = "1           " ;
25580     +*** *************************;
MPRINT(EM_DIAGRAM):   U_default = 1;
25581     +*** Writing the I_default  AND U_default ;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_default0 ) THEN DO;
25582     +*** *************************;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_default0 ;
25583     +_MAXP_ = P_default1 ;
MPRINT(EM_DIAGRAM):   I_default = "0           " ;
25584     +I_default  = "1           " ;
MPRINT(EM_DIAGRAM):   U_default = 0;
25585     +U_default  =                    1;
MPRINT(EM_DIAGRAM):   END;
25586     +IF( _MAXP_ LT P_default0  ) THEN DO;
MPRINT(EM_DIAGRAM):   ********************************;
25587     +   _MAXP_ = P_default0 ;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
25588     +   I_default  = "0           " ;
MPRINT(EM_DIAGRAM):   ********************************;
25589     +   U_default  =                    0;
25590     +END;
25591     +********************************;
25592     +*** End Scoring Code for Neural;
25593     +********************************;
25594     +drop
25595     +S_age
25596     +S_duration
25597     +H11
25598     +H12
MPRINT(EM_DIAGRAM):   drop S_age S_duration H11 H12 H13 H14 H15 H16 ;
25599     +H13
25600     +H14
25601     +H15
25602     +H16
25603     +;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
25604      run;

NOTE: DATA STEP view saved on file EMWS5.NEURAL2_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS5.VARCLUS_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_DIAGRAM):   quit;
25605      quit;
25606      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
25607      filename emflow "C:\Jose\DM_ang\Workspaces\EMWS5\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\Jose\DM_ang\Workspaces\EMWS5\Neural2\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
25608      *------------------------------------------------------------*;
25609      * Neural2: Scoring TEST data;
25610      *------------------------------------------------------------*;
25611      data EMWS5.Neural2_TEST
25612      / view=EMWS5.Neural2_TEST
25613      ;
MPRINT(EM_DIAGRAM):   data EMWS5.Neural2_TEST / view=EMWS5.Neural2_TEST ;
25614      set EMWS5.VarClus_TEST
25615      ;
MPRINT(EM_DIAGRAM):   set EMWS5.VarClus_TEST ;
25616      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\Jose\DM_ang\Workspaces\EMWS5\Neural2\EMFLOWSCORE.sas.
25617     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
25618     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
25619     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
25620     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
25621     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
25622     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
25623     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
25624     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
25625     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
25626     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
25627     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
25628     +LENGTH _WARN_ $4
25629     +      F_default  $ 12
25630     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_default $ 12 ;
25631     +      label S_age = 'Standard: age' ;
MPRINT(EM_DIAGRAM):   label S_age = 'Standard: age' ;
25632     +
25633     +      label S_duration = 'Standard: duration' ;
MPRINT(EM_DIAGRAM):   label S_duration = 'Standard: duration' ;
25634     +
25635     +      label acc_statusA11 = 'Dummy: acc_status=A11' ;
MPRINT(EM_DIAGRAM):   label acc_statusA11 = 'Dummy: acc_status=A11' ;
25636     +
25637     +      label acc_statusA12 = 'Dummy: acc_status=A12' ;
MPRINT(EM_DIAGRAM):   label acc_statusA12 = 'Dummy: acc_status=A12' ;
25638     +
25639     +      label acc_statusA13 = 'Dummy: acc_status=A13' ;
MPRINT(EM_DIAGRAM):   label acc_statusA13 = 'Dummy: acc_status=A13' ;
25640     +
25641     +      label credit_historyA30 = 'Dummy: credit_history=A30' ;
MPRINT(EM_DIAGRAM):   label credit_historyA30 = 'Dummy: credit_history=A30' ;
25642     +
25643     +      label credit_historyA31 = 'Dummy: credit_history=A31' ;
MPRINT(EM_DIAGRAM):   label credit_historyA31 = 'Dummy: credit_history=A31' ;
25644     +
25645     +      label credit_historyA32 = 'Dummy: credit_history=A32' ;
MPRINT(EM_DIAGRAM):   label credit_historyA32 = 'Dummy: credit_history=A32' ;
25646     +
25647     +      label credit_historyA33 = 'Dummy: credit_history=A33' ;
MPRINT(EM_DIAGRAM):   label credit_historyA33 = 'Dummy: credit_history=A33' ;
25648     +
25649     +      label employmentA71 = 'Dummy: employment=A71' ;
MPRINT(EM_DIAGRAM):   label employmentA71 = 'Dummy: employment=A71' ;
25650     +
25651     +      label employmentA72 = 'Dummy: employment=A72' ;
MPRINT(EM_DIAGRAM):   label employmentA72 = 'Dummy: employment=A72' ;
25652     +
25653     +      label employmentA73 = 'Dummy: employment=A73' ;
MPRINT(EM_DIAGRAM):   label employmentA73 = 'Dummy: employment=A73' ;
25654     +
25655     +      label employmentA74 = 'Dummy: employment=A74' ;
MPRINT(EM_DIAGRAM):   label employmentA74 = 'Dummy: employment=A74' ;
25656     +
25657     +      label instalment1 = 'Dummy: instalment=1' ;
MPRINT(EM_DIAGRAM):   label instalment1 = 'Dummy: instalment=1' ;
25658     +
25659     +      label instalment2 = 'Dummy: instalment=2' ;
MPRINT(EM_DIAGRAM):   label instalment2 = 'Dummy: instalment=2' ;
25660     +
25661     +      label instalment3 = 'Dummy: instalment=3' ;
MPRINT(EM_DIAGRAM):   label instalment3 = 'Dummy: instalment=3' ;
25662     +
25663     +      label jobA171 = 'Dummy: job=A171' ;
MPRINT(EM_DIAGRAM):   label jobA171 = 'Dummy: job=A171' ;
25664     +
25665     +      label jobA172 = 'Dummy: job=A172' ;
MPRINT(EM_DIAGRAM):   label jobA172 = 'Dummy: job=A172' ;
25666     +
25667     +      label jobA173 = 'Dummy: job=A173' ;
MPRINT(EM_DIAGRAM):   label jobA173 = 'Dummy: job=A173' ;
25668     +
25669     +      label other_instalmentsA141 = 'Dummy: other_instalments=A141' ;
MPRINT(EM_DIAGRAM):   label other_instalmentsA141 = 'Dummy: other_instalments=A141' ;
25670     +
25671     +      label other_instalmentsA142 = 'Dummy: other_instalments=A142' ;
MPRINT(EM_DIAGRAM):   label other_instalmentsA142 = 'Dummy: other_instalments=A142' ;
25672     +
25673     +      label personal_statusA91 = 'Dummy: personal_status=A91' ;
MPRINT(EM_DIAGRAM):   label personal_statusA91 = 'Dummy: personal_status=A91' ;
25674     +
25675     +      label personal_statusA92 = 'Dummy: personal_status=A92' ;
MPRINT(EM_DIAGRAM):   label personal_statusA92 = 'Dummy: personal_status=A92' ;
25676     +
25677     +      label personal_statusA93 = 'Dummy: personal_status=A93' ;
MPRINT(EM_DIAGRAM):   label personal_statusA93 = 'Dummy: personal_status=A93' ;
25678     +
25679     +      label pourposeA40 = 'Dummy: pourpose=A40' ;
MPRINT(EM_DIAGRAM):   label pourposeA40 = 'Dummy: pourpose=A40' ;
25680     +
25681     +      label pourposeA41 = 'Dummy: pourpose=A41' ;
MPRINT(EM_DIAGRAM):   label pourposeA41 = 'Dummy: pourpose=A41' ;
25682     +
25683     +      label pourposeA410 = 'Dummy: pourpose=A410' ;
MPRINT(EM_DIAGRAM):   label pourposeA410 = 'Dummy: pourpose=A410' ;
25684     +
25685     +      label pourposeA42 = 'Dummy: pourpose=A42' ;
MPRINT(EM_DIAGRAM):   label pourposeA42 = 'Dummy: pourpose=A42' ;
25686     +
25687     +      label pourposeA43 = 'Dummy: pourpose=A43' ;
MPRINT(EM_DIAGRAM):   label pourposeA43 = 'Dummy: pourpose=A43' ;
25688     +
25689     +      label pourposeA44 = 'Dummy: pourpose=A44' ;
MPRINT(EM_DIAGRAM):   label pourposeA44 = 'Dummy: pourpose=A44' ;
25690     +
25691     +      label pourposeA45 = 'Dummy: pourpose=A45' ;
MPRINT(EM_DIAGRAM):   label pourposeA45 = 'Dummy: pourpose=A45' ;
25692     +
25693     +      label pourposeA46 = 'Dummy: pourpose=A46' ;
MPRINT(EM_DIAGRAM):   label pourposeA46 = 'Dummy: pourpose=A46' ;
25694     +
25695     +      label pourposeA48 = 'Dummy: pourpose=A48' ;
MPRINT(EM_DIAGRAM):   label pourposeA48 = 'Dummy: pourpose=A48' ;
25696     +
25697     +      label residence1 = 'Dummy: residence=1' ;
MPRINT(EM_DIAGRAM):   label residence1 = 'Dummy: residence=1' ;
25698     +
25699     +      label residence2 = 'Dummy: residence=2' ;
MPRINT(EM_DIAGRAM):   label residence2 = 'Dummy: residence=2' ;
25700     +
25701     +      label residence3 = 'Dummy: residence=3' ;
MPRINT(EM_DIAGRAM):   label residence3 = 'Dummy: residence=3' ;
25702     +
25703     +      label savingsA61 = 'Dummy: savings=A61' ;
MPRINT(EM_DIAGRAM):   label savingsA61 = 'Dummy: savings=A61' ;
25704     +
25705     +      label savingsA62 = 'Dummy: savings=A62' ;
MPRINT(EM_DIAGRAM):   label savingsA62 = 'Dummy: savings=A62' ;
25706     +
25707     +      label savingsA63 = 'Dummy: savings=A63' ;
MPRINT(EM_DIAGRAM):   label savingsA63 = 'Dummy: savings=A63' ;
25708     +
25709     +      label savingsA64 = 'Dummy: savings=A64' ;
MPRINT(EM_DIAGRAM):   label savingsA64 = 'Dummy: savings=A64' ;
25710     +
25711     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
25712     +
25713     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
25714     +
25715     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
25716     +
25717     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
25718     +
25719     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
25720     +
25721     +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
25722     +
25723     +      label I_default = 'Into: default' ;
MPRINT(EM_DIAGRAM):   label I_default = 'Into: default' ;
25724     +
25725     +      label F_default = 'From: default' ;
MPRINT(EM_DIAGRAM):   label F_default = 'From: default' ;
25726     +
25727     +      label U_default = 'Unnormalized Into: default' ;
MPRINT(EM_DIAGRAM):   label U_default = 'Unnormalized Into: default' ;
25728     +
25729     +      label P_default1 = 'Predicted: default=1' ;
MPRINT(EM_DIAGRAM):   label P_default1 = 'Predicted: default=1' ;
25730     +
25731     +      label R_default1 = 'Residual: default=1' ;
MPRINT(EM_DIAGRAM):   label R_default1 = 'Residual: default=1' ;
25732     +
25733     +      label P_default0 = 'Predicted: default=0' ;
MPRINT(EM_DIAGRAM):   label P_default0 = 'Predicted: default=0' ;
25734     +
25735     +      label R_default0 = 'Residual: default=0' ;
MPRINT(EM_DIAGRAM):   label R_default0 = 'Residual: default=0' ;
25736     +
25737     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
25738     +
25739     +*** Generate dummy variables for acc_status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for acc_status ;
25740     +drop acc_statusA11 acc_statusA12 acc_statusA13 ;
MPRINT(EM_DIAGRAM):   drop acc_statusA11 acc_statusA12 acc_statusA13 ;
25741     +if missing( acc_status ) then do;
MPRINT(EM_DIAGRAM):   if missing( acc_status ) then do;
25742     +   acc_statusA11 = .;
MPRINT(EM_DIAGRAM):   acc_statusA11 = .;
25743     +   acc_statusA12 = .;
MPRINT(EM_DIAGRAM):   acc_statusA12 = .;
25744     +   acc_statusA13 = .;
MPRINT(EM_DIAGRAM):   acc_statusA13 = .;
25745     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
25746     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25747     +end;
MPRINT(EM_DIAGRAM):   end;
25748     +else do;
MPRINT(EM_DIAGRAM):   else do;
25749     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
25750     +   _dm3 = put( acc_status , $3. );
MPRINT(EM_DIAGRAM):   _dm3 = put( acc_status , $3. );
25751     +   %DMNORMIP( _dm3 )
MPRINT(DMNORMIP):   call dmnorm(_dm3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
25752     +   if _dm3 = 'A14'  then do;
MPRINT(EM_DIAGRAM):   if _dm3 = 'A14' then do;
25753     +      acc_statusA11 = -1;
MPRINT(EM_DIAGRAM):   acc_statusA11 = -1;
25754     +      acc_statusA12 = -1;
MPRINT(EM_DIAGRAM):   acc_statusA12 = -1;
25755     +      acc_statusA13 = -1;
MPRINT(EM_DIAGRAM):   acc_statusA13 = -1;
25756     +   end;
MPRINT(EM_DIAGRAM):   end;
25757     +   else if _dm3 = 'A12'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A12' then do;
25758     +      acc_statusA11 = 0;
MPRINT(EM_DIAGRAM):   acc_statusA11 = 0;
25759     +      acc_statusA12 = 1;
MPRINT(EM_DIAGRAM):   acc_statusA12 = 1;
25760     +      acc_statusA13 = 0;
MPRINT(EM_DIAGRAM):   acc_statusA13 = 0;
25761     +   end;
MPRINT(EM_DIAGRAM):   end;
25762     +   else if _dm3 = 'A11'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A11' then do;
25763     +      acc_statusA11 = 1;
MPRINT(EM_DIAGRAM):   acc_statusA11 = 1;
25764     +      acc_statusA12 = 0;
MPRINT(EM_DIAGRAM):   acc_statusA12 = 0;
25765     +      acc_statusA13 = 0;
MPRINT(EM_DIAGRAM):   acc_statusA13 = 0;
25766     +   end;
MPRINT(EM_DIAGRAM):   end;
25767     +   else if _dm3 = 'A13'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A13' then do;
25768     +      acc_statusA11 = 0;
MPRINT(EM_DIAGRAM):   acc_statusA11 = 0;
25769     +      acc_statusA12 = 0;
MPRINT(EM_DIAGRAM):   acc_statusA12 = 0;
25770     +      acc_statusA13 = 1;
MPRINT(EM_DIAGRAM):   acc_statusA13 = 1;
25771     +   end;
MPRINT(EM_DIAGRAM):   end;
25772     +   else do;
MPRINT(EM_DIAGRAM):   else do;
25773     +      acc_statusA11 = .;
MPRINT(EM_DIAGRAM):   acc_statusA11 = .;
25774     +      acc_statusA12 = .;
MPRINT(EM_DIAGRAM):   acc_statusA12 = .;
25775     +      acc_statusA13 = .;
MPRINT(EM_DIAGRAM):   acc_statusA13 = .;
25776     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
25777     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25778     +   end;
MPRINT(EM_DIAGRAM):   end;
25779     +end;
MPRINT(EM_DIAGRAM):   end;
25780     +
25781     +*** Generate dummy variables for credit_history ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for credit_history ;
25782     +drop credit_historyA30 credit_historyA31 credit_historyA32 credit_historyA33 ;
MPRINT(EM_DIAGRAM):   drop credit_historyA30 credit_historyA31 credit_historyA32 credit_historyA33 ;
25783     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
25784     +credit_historyA30 = 0;
MPRINT(EM_DIAGRAM):   credit_historyA30 = 0;
25785     +credit_historyA31 = 0;
MPRINT(EM_DIAGRAM):   credit_historyA31 = 0;
25786     +credit_historyA32 = 0;
MPRINT(EM_DIAGRAM):   credit_historyA32 = 0;
25787     +credit_historyA33 = 0;
MPRINT(EM_DIAGRAM):   credit_historyA33 = 0;
25788     +if missing( credit_history ) then do;
MPRINT(EM_DIAGRAM):   if missing( credit_history ) then do;
25789     +   credit_historyA30 = .;
MPRINT(EM_DIAGRAM):   credit_historyA30 = .;
25790     +   credit_historyA31 = .;
MPRINT(EM_DIAGRAM):   credit_historyA31 = .;
25791     +   credit_historyA32 = .;
MPRINT(EM_DIAGRAM):   credit_historyA32 = .;
25792     +   credit_historyA33 = .;
MPRINT(EM_DIAGRAM):   credit_historyA33 = .;
25793     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
25794     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25795     +end;
MPRINT(EM_DIAGRAM):   end;
25796     +else do;
MPRINT(EM_DIAGRAM):   else do;
25797     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
25798     +   _dm3 = put( credit_history , $3. );
MPRINT(EM_DIAGRAM):   _dm3 = put( credit_history , $3. );
25799     +   %DMNORMIP( _dm3 )
MPRINT(DMNORMIP):   call dmnorm(_dm3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
25800     +   if _dm3 = 'A32'  then do;
MPRINT(EM_DIAGRAM):   if _dm3 = 'A32' then do;
25801     +      credit_historyA32 = 1;
MPRINT(EM_DIAGRAM):   credit_historyA32 = 1;
25802     +   end;
MPRINT(EM_DIAGRAM):   end;
25803     +   else if _dm3 = 'A34'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A34' then do;
25804     +      credit_historyA30 = -1;
MPRINT(EM_DIAGRAM):   credit_historyA30 = -1;
25805     +      credit_historyA31 = -1;
MPRINT(EM_DIAGRAM):   credit_historyA31 = -1;
25806     +      credit_historyA32 = -1;
MPRINT(EM_DIAGRAM):   credit_historyA32 = -1;
25807     +      credit_historyA33 = -1;
MPRINT(EM_DIAGRAM):   credit_historyA33 = -1;
25808     +   end;
MPRINT(EM_DIAGRAM):   end;
25809     +   else if _dm3 = 'A33'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A33' then do;
25810     +      credit_historyA33 = 1;
MPRINT(EM_DIAGRAM):   credit_historyA33 = 1;
25811     +   end;
MPRINT(EM_DIAGRAM):   end;
25812     +   else if _dm3 = 'A31'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A31' then do;
25813     +      credit_historyA31 = 1;
MPRINT(EM_DIAGRAM):   credit_historyA31 = 1;
25814     +   end;
MPRINT(EM_DIAGRAM):   end;
25815     +   else if _dm3 = 'A30'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A30' then do;
25816     +      credit_historyA30 = 1;
MPRINT(EM_DIAGRAM):   credit_historyA30 = 1;
25817     +   end;
MPRINT(EM_DIAGRAM):   end;
25818     +   else do;
MPRINT(EM_DIAGRAM):   else do;
25819     +      credit_historyA30 = .;
MPRINT(EM_DIAGRAM):   credit_historyA30 = .;
25820     +      credit_historyA31 = .;
MPRINT(EM_DIAGRAM):   credit_historyA31 = .;
25821     +      credit_historyA32 = .;
MPRINT(EM_DIAGRAM):   credit_historyA32 = .;
25822     +      credit_historyA33 = .;
MPRINT(EM_DIAGRAM):   credit_historyA33 = .;
25823     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
25824     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25825     +   end;
MPRINT(EM_DIAGRAM):   end;
25826     +end;
MPRINT(EM_DIAGRAM):   end;
25827     +
25828     +*** Generate dummy variables for employment ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for employment ;
25829     +drop employmentA71 employmentA72 employmentA73 employmentA74 ;
MPRINT(EM_DIAGRAM):   drop employmentA71 employmentA72 employmentA73 employmentA74 ;
25830     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
25831     +employmentA71 = 0;
MPRINT(EM_DIAGRAM):   employmentA71 = 0;
25832     +employmentA72 = 0;
MPRINT(EM_DIAGRAM):   employmentA72 = 0;
25833     +employmentA73 = 0;
MPRINT(EM_DIAGRAM):   employmentA73 = 0;
25834     +employmentA74 = 0;
MPRINT(EM_DIAGRAM):   employmentA74 = 0;
25835     +if missing( employment ) then do;
MPRINT(EM_DIAGRAM):   if missing( employment ) then do;
25836     +   employmentA71 = .;
MPRINT(EM_DIAGRAM):   employmentA71 = .;
25837     +   employmentA72 = .;
MPRINT(EM_DIAGRAM):   employmentA72 = .;
25838     +   employmentA73 = .;
MPRINT(EM_DIAGRAM):   employmentA73 = .;
25839     +   employmentA74 = .;
MPRINT(EM_DIAGRAM):   employmentA74 = .;
25840     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
25841     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25842     +end;
MPRINT(EM_DIAGRAM):   end;
25843     +else do;
MPRINT(EM_DIAGRAM):   else do;
25844     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
25845     +   _dm3 = put( employment , $3. );
MPRINT(EM_DIAGRAM):   _dm3 = put( employment , $3. );
25846     +   %DMNORMIP( _dm3 )
MPRINT(DMNORMIP):   call dmnorm(_dm3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
25847     +   if _dm3 = 'A73'  then do;
MPRINT(EM_DIAGRAM):   if _dm3 = 'A73' then do;
25848     +      employmentA73 = 1;
MPRINT(EM_DIAGRAM):   employmentA73 = 1;
25849     +   end;
MPRINT(EM_DIAGRAM):   end;
25850     +   else if _dm3 = 'A75'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A75' then do;
25851     +      employmentA71 = -1;
MPRINT(EM_DIAGRAM):   employmentA71 = -1;
25852     +      employmentA72 = -1;
MPRINT(EM_DIAGRAM):   employmentA72 = -1;
25853     +      employmentA73 = -1;
MPRINT(EM_DIAGRAM):   employmentA73 = -1;
25854     +      employmentA74 = -1;
MPRINT(EM_DIAGRAM):   employmentA74 = -1;
25855     +   end;
MPRINT(EM_DIAGRAM):   end;
25856     +   else if _dm3 = 'A74'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A74' then do;
25857     +      employmentA74 = 1;
MPRINT(EM_DIAGRAM):   employmentA74 = 1;
25858     +   end;
MPRINT(EM_DIAGRAM):   end;
25859     +   else if _dm3 = 'A72'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A72' then do;
25860     +      employmentA72 = 1;
MPRINT(EM_DIAGRAM):   employmentA72 = 1;
25861     +   end;
MPRINT(EM_DIAGRAM):   end;
25862     +   else if _dm3 = 'A71'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A71' then do;
25863     +      employmentA71 = 1;
MPRINT(EM_DIAGRAM):   employmentA71 = 1;
25864     +   end;
MPRINT(EM_DIAGRAM):   end;
25865     +   else do;
MPRINT(EM_DIAGRAM):   else do;
25866     +      employmentA71 = .;
MPRINT(EM_DIAGRAM):   employmentA71 = .;
25867     +      employmentA72 = .;
MPRINT(EM_DIAGRAM):   employmentA72 = .;
25868     +      employmentA73 = .;
MPRINT(EM_DIAGRAM):   employmentA73 = .;
25869     +      employmentA74 = .;
MPRINT(EM_DIAGRAM):   employmentA74 = .;
25870     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
25871     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25872     +   end;
MPRINT(EM_DIAGRAM):   end;
25873     +end;
MPRINT(EM_DIAGRAM):   end;
25874     +
25875     +*** Generate dummy variables for instalment ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for instalment ;
25876     +drop instalment1 instalment2 instalment3 ;
MPRINT(EM_DIAGRAM):   drop instalment1 instalment2 instalment3 ;
25877     +if missing( instalment ) then do;
MPRINT(EM_DIAGRAM):   if missing( instalment ) then do;
25878     +   instalment1 = .;
MPRINT(EM_DIAGRAM):   instalment1 = .;
25879     +   instalment2 = .;
MPRINT(EM_DIAGRAM):   instalment2 = .;
25880     +   instalment3 = .;
MPRINT(EM_DIAGRAM):   instalment3 = .;
25881     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
25882     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25883     +end;
MPRINT(EM_DIAGRAM):   end;
25884     +else do;
MPRINT(EM_DIAGRAM):   else do;
25885     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
25886     +   _dm12 = put( instalment , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( instalment , BEST12. );
25887     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
25888     +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
25889     +      instalment1 = -1;
MPRINT(EM_DIAGRAM):   instalment1 = -1;
25890     +      instalment2 = -1;
MPRINT(EM_DIAGRAM):   instalment2 = -1;
25891     +      instalment3 = -1;
MPRINT(EM_DIAGRAM):   instalment3 = -1;
25892     +   end;
MPRINT(EM_DIAGRAM):   end;
25893     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
25894     +      instalment1 = 0;
MPRINT(EM_DIAGRAM):   instalment1 = 0;
25895     +      instalment2 = 1;
MPRINT(EM_DIAGRAM):   instalment2 = 1;
25896     +      instalment3 = 0;
MPRINT(EM_DIAGRAM):   instalment3 = 0;
25897     +   end;
MPRINT(EM_DIAGRAM):   end;
25898     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
25899     +      instalment1 = 0;
MPRINT(EM_DIAGRAM):   instalment1 = 0;
25900     +      instalment2 = 0;
MPRINT(EM_DIAGRAM):   instalment2 = 0;
25901     +      instalment3 = 1;
MPRINT(EM_DIAGRAM):   instalment3 = 1;
25902     +   end;
MPRINT(EM_DIAGRAM):   end;
25903     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
25904     +      instalment1 = 1;
MPRINT(EM_DIAGRAM):   instalment1 = 1;
25905     +      instalment2 = 0;
MPRINT(EM_DIAGRAM):   instalment2 = 0;
25906     +      instalment3 = 0;
MPRINT(EM_DIAGRAM):   instalment3 = 0;
25907     +   end;
MPRINT(EM_DIAGRAM):   end;
25908     +   else do;
MPRINT(EM_DIAGRAM):   else do;
25909     +      instalment1 = .;
MPRINT(EM_DIAGRAM):   instalment1 = .;
25910     +      instalment2 = .;
MPRINT(EM_DIAGRAM):   instalment2 = .;
25911     +      instalment3 = .;
MPRINT(EM_DIAGRAM):   instalment3 = .;
25912     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
25913     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25914     +   end;
MPRINT(EM_DIAGRAM):   end;
25915     +end;
MPRINT(EM_DIAGRAM):   end;
25916     +
25917     +*** Generate dummy variables for job ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for job ;
25918     +drop jobA171 jobA172 jobA173 ;
MPRINT(EM_DIAGRAM):   drop jobA171 jobA172 jobA173 ;
25919     +if missing( job ) then do;
MPRINT(EM_DIAGRAM):   if missing( job ) then do;
25920     +   jobA171 = .;
MPRINT(EM_DIAGRAM):   jobA171 = .;
25921     +   jobA172 = .;
MPRINT(EM_DIAGRAM):   jobA172 = .;
25922     +   jobA173 = .;
MPRINT(EM_DIAGRAM):   jobA173 = .;
25923     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
25924     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25925     +end;
MPRINT(EM_DIAGRAM):   end;
25926     +else do;
MPRINT(EM_DIAGRAM):   else do;
25927     +   length _dm4 $ 4; drop _dm4 ;
MPRINT(EM_DIAGRAM):   length _dm4 $ 4;
MPRINT(EM_DIAGRAM):   drop _dm4 ;
25928     +   _dm4 = put( job , $4. );
MPRINT(EM_DIAGRAM):   _dm4 = put( job , $4. );
25929     +   %DMNORMIP( _dm4 )
MPRINT(DMNORMIP):   call dmnorm(_dm4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
25930     +   if _dm4 = 'A173'  then do;
MPRINT(EM_DIAGRAM):   if _dm4 = 'A173' then do;
25931     +      jobA171 = 0;
MPRINT(EM_DIAGRAM):   jobA171 = 0;
25932     +      jobA172 = 0;
MPRINT(EM_DIAGRAM):   jobA172 = 0;
25933     +      jobA173 = 1;
MPRINT(EM_DIAGRAM):   jobA173 = 1;
25934     +   end;
MPRINT(EM_DIAGRAM):   end;
25935     +   else if _dm4 = 'A172'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A172' then do;
25936     +      jobA171 = 0;
MPRINT(EM_DIAGRAM):   jobA171 = 0;
25937     +      jobA172 = 1;
MPRINT(EM_DIAGRAM):   jobA172 = 1;
25938     +      jobA173 = 0;
MPRINT(EM_DIAGRAM):   jobA173 = 0;
25939     +   end;
MPRINT(EM_DIAGRAM):   end;
25940     +   else if _dm4 = 'A174'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A174' then do;
25941     +      jobA171 = -1;
MPRINT(EM_DIAGRAM):   jobA171 = -1;
25942     +      jobA172 = -1;
MPRINT(EM_DIAGRAM):   jobA172 = -1;
25943     +      jobA173 = -1;
MPRINT(EM_DIAGRAM):   jobA173 = -1;
25944     +   end;
MPRINT(EM_DIAGRAM):   end;
25945     +   else if _dm4 = 'A171'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A171' then do;
25946     +      jobA171 = 1;
MPRINT(EM_DIAGRAM):   jobA171 = 1;
25947     +      jobA172 = 0;
MPRINT(EM_DIAGRAM):   jobA172 = 0;
25948     +      jobA173 = 0;
MPRINT(EM_DIAGRAM):   jobA173 = 0;
25949     +   end;
MPRINT(EM_DIAGRAM):   end;
25950     +   else do;
MPRINT(EM_DIAGRAM):   else do;
25951     +      jobA171 = .;
MPRINT(EM_DIAGRAM):   jobA171 = .;
25952     +      jobA172 = .;
MPRINT(EM_DIAGRAM):   jobA172 = .;
25953     +      jobA173 = .;
MPRINT(EM_DIAGRAM):   jobA173 = .;
25954     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
25955     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25956     +   end;
MPRINT(EM_DIAGRAM):   end;
25957     +end;
MPRINT(EM_DIAGRAM):   end;
25958     +
25959     +*** Generate dummy variables for other_instalments ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for other_instalments ;
25960     +drop other_instalmentsA141 other_instalmentsA142 ;
MPRINT(EM_DIAGRAM):   drop other_instalmentsA141 other_instalmentsA142 ;
25961     +if missing( other_instalments ) then do;
MPRINT(EM_DIAGRAM):   if missing( other_instalments ) then do;
25962     +   other_instalmentsA141 = .;
MPRINT(EM_DIAGRAM):   other_instalmentsA141 = .;
25963     +   other_instalmentsA142 = .;
MPRINT(EM_DIAGRAM):   other_instalmentsA142 = .;
25964     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
25965     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25966     +end;
MPRINT(EM_DIAGRAM):   end;
25967     +else do;
MPRINT(EM_DIAGRAM):   else do;
25968     +   length _dm4 $ 4; drop _dm4 ;
MPRINT(EM_DIAGRAM):   length _dm4 $ 4;
MPRINT(EM_DIAGRAM):   drop _dm4 ;
25969     +   _dm4 = put( other_instalments , $4. );
MPRINT(EM_DIAGRAM):   _dm4 = put( other_instalments , $4. );
25970     +   %DMNORMIP( _dm4 )
MPRINT(DMNORMIP):   call dmnorm(_dm4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
25971     +   if _dm4 = 'A143'  then do;
MPRINT(EM_DIAGRAM):   if _dm4 = 'A143' then do;
25972     +      other_instalmentsA141 = -1;
MPRINT(EM_DIAGRAM):   other_instalmentsA141 = -1;
25973     +      other_instalmentsA142 = -1;
MPRINT(EM_DIAGRAM):   other_instalmentsA142 = -1;
25974     +   end;
MPRINT(EM_DIAGRAM):   end;
25975     +   else if _dm4 = 'A141'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A141' then do;
25976     +      other_instalmentsA141 = 1;
MPRINT(EM_DIAGRAM):   other_instalmentsA141 = 1;
25977     +      other_instalmentsA142 = 0;
MPRINT(EM_DIAGRAM):   other_instalmentsA142 = 0;
25978     +   end;
MPRINT(EM_DIAGRAM):   end;
25979     +   else if _dm4 = 'A142'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A142' then do;
25980     +      other_instalmentsA141 = 0;
MPRINT(EM_DIAGRAM):   other_instalmentsA141 = 0;
25981     +      other_instalmentsA142 = 1;
MPRINT(EM_DIAGRAM):   other_instalmentsA142 = 1;
25982     +   end;
MPRINT(EM_DIAGRAM):   end;
25983     +   else do;
MPRINT(EM_DIAGRAM):   else do;
25984     +      other_instalmentsA141 = .;
MPRINT(EM_DIAGRAM):   other_instalmentsA141 = .;
25985     +      other_instalmentsA142 = .;
MPRINT(EM_DIAGRAM):   other_instalmentsA142 = .;
25986     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
25987     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25988     +   end;
MPRINT(EM_DIAGRAM):   end;
25989     +end;
MPRINT(EM_DIAGRAM):   end;
25990     +
25991     +*** Generate dummy variables for personal_status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for personal_status ;
25992     +drop personal_statusA91 personal_statusA92 personal_statusA93 ;
MPRINT(EM_DIAGRAM):   drop personal_statusA91 personal_statusA92 personal_statusA93 ;
25993     +if missing( personal_status ) then do;
MPRINT(EM_DIAGRAM):   if missing( personal_status ) then do;
25994     +   personal_statusA91 = .;
MPRINT(EM_DIAGRAM):   personal_statusA91 = .;
25995     +   personal_statusA92 = .;
MPRINT(EM_DIAGRAM):   personal_statusA92 = .;
25996     +   personal_statusA93 = .;
MPRINT(EM_DIAGRAM):   personal_statusA93 = .;
25997     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
25998     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
25999     +end;
MPRINT(EM_DIAGRAM):   end;
26000     +else do;
MPRINT(EM_DIAGRAM):   else do;
26001     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
26002     +   _dm3 = put( personal_status , $3. );
MPRINT(EM_DIAGRAM):   _dm3 = put( personal_status , $3. );
26003     +   %DMNORMIP( _dm3 )
MPRINT(DMNORMIP):   call dmnorm(_dm3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
26004     +   if _dm3 = 'A93'  then do;
MPRINT(EM_DIAGRAM):   if _dm3 = 'A93' then do;
26005     +      personal_statusA91 = 0;
MPRINT(EM_DIAGRAM):   personal_statusA91 = 0;
26006     +      personal_statusA92 = 0;
MPRINT(EM_DIAGRAM):   personal_statusA92 = 0;
26007     +      personal_statusA93 = 1;
MPRINT(EM_DIAGRAM):   personal_statusA93 = 1;
26008     +   end;
MPRINT(EM_DIAGRAM):   end;
26009     +   else if _dm3 = 'A92'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A92' then do;
26010     +      personal_statusA91 = 0;
MPRINT(EM_DIAGRAM):   personal_statusA91 = 0;
26011     +      personal_statusA92 = 1;
MPRINT(EM_DIAGRAM):   personal_statusA92 = 1;
26012     +      personal_statusA93 = 0;
MPRINT(EM_DIAGRAM):   personal_statusA93 = 0;
26013     +   end;
MPRINT(EM_DIAGRAM):   end;
26014     +   else if _dm3 = 'A94'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A94' then do;
26015     +      personal_statusA91 = -1;
MPRINT(EM_DIAGRAM):   personal_statusA91 = -1;
26016     +      personal_statusA92 = -1;
MPRINT(EM_DIAGRAM):   personal_statusA92 = -1;
26017     +      personal_statusA93 = -1;
MPRINT(EM_DIAGRAM):   personal_statusA93 = -1;
26018     +   end;
MPRINT(EM_DIAGRAM):   end;
26019     +   else if _dm3 = 'A91'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A91' then do;
26020     +      personal_statusA91 = 1;
MPRINT(EM_DIAGRAM):   personal_statusA91 = 1;
26021     +      personal_statusA92 = 0;
MPRINT(EM_DIAGRAM):   personal_statusA92 = 0;
26022     +      personal_statusA93 = 0;
MPRINT(EM_DIAGRAM):   personal_statusA93 = 0;
26023     +   end;
MPRINT(EM_DIAGRAM):   end;
26024     +   else do;
MPRINT(EM_DIAGRAM):   else do;
26025     +      personal_statusA91 = .;
MPRINT(EM_DIAGRAM):   personal_statusA91 = .;
26026     +      personal_statusA92 = .;
MPRINT(EM_DIAGRAM):   personal_statusA92 = .;
26027     +      personal_statusA93 = .;
MPRINT(EM_DIAGRAM):   personal_statusA93 = .;
26028     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
26029     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
26030     +   end;
MPRINT(EM_DIAGRAM):   end;
26031     +end;
MPRINT(EM_DIAGRAM):   end;
26032     +
26033     +*** Generate dummy variables for pourpose ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for pourpose ;
26034     +drop pourposeA40 pourposeA41 pourposeA410 pourposeA42 pourposeA43 pourposeA44
26035     +        pourposeA45 pourposeA46 pourposeA48 ;
MPRINT(EM_DIAGRAM):   drop pourposeA40 pourposeA41 pourposeA410 pourposeA42 pourposeA43 pourposeA44 pourposeA45 pourposeA46 pourposeA48 ;
26036     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
26037     +pourposeA40 = 0;
MPRINT(EM_DIAGRAM):   pourposeA40 = 0;
26038     +pourposeA41 = 0;
MPRINT(EM_DIAGRAM):   pourposeA41 = 0;
26039     +pourposeA410 = 0;
MPRINT(EM_DIAGRAM):   pourposeA410 = 0;
26040     +pourposeA42 = 0;
MPRINT(EM_DIAGRAM):   pourposeA42 = 0;
26041     +pourposeA43 = 0;
MPRINT(EM_DIAGRAM):   pourposeA43 = 0;
26042     +pourposeA44 = 0;
MPRINT(EM_DIAGRAM):   pourposeA44 = 0;
26043     +pourposeA45 = 0;
MPRINT(EM_DIAGRAM):   pourposeA45 = 0;
26044     +pourposeA46 = 0;
MPRINT(EM_DIAGRAM):   pourposeA46 = 0;
26045     +pourposeA48 = 0;
MPRINT(EM_DIAGRAM):   pourposeA48 = 0;
26046     +if missing( pourpose ) then do;
MPRINT(EM_DIAGRAM):   if missing( pourpose ) then do;
26047     +   pourposeA40 = .;
MPRINT(EM_DIAGRAM):   pourposeA40 = .;
26048     +   pourposeA41 = .;
MPRINT(EM_DIAGRAM):   pourposeA41 = .;
26049     +   pourposeA410 = .;
MPRINT(EM_DIAGRAM):   pourposeA410 = .;
26050     +   pourposeA42 = .;
MPRINT(EM_DIAGRAM):   pourposeA42 = .;
26051     +   pourposeA43 = .;
MPRINT(EM_DIAGRAM):   pourposeA43 = .;
26052     +   pourposeA44 = .;
MPRINT(EM_DIAGRAM):   pourposeA44 = .;
26053     +   pourposeA45 = .;
MPRINT(EM_DIAGRAM):   pourposeA45 = .;
26054     +   pourposeA46 = .;
MPRINT(EM_DIAGRAM):   pourposeA46 = .;
26055     +   pourposeA48 = .;
MPRINT(EM_DIAGRAM):   pourposeA48 = .;
26056     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
26057     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
26058     +end;
MPRINT(EM_DIAGRAM):   end;
26059     +else do;
MPRINT(EM_DIAGRAM):   else do;
26060     +   length _dm4 $ 4; drop _dm4 ;
MPRINT(EM_DIAGRAM):   length _dm4 $ 4;
MPRINT(EM_DIAGRAM):   drop _dm4 ;
26061     +   _dm4 = put( pourpose , $4. );
MPRINT(EM_DIAGRAM):   _dm4 = put( pourpose , $4. );
26062     +   %DMNORMIP( _dm4 )
MPRINT(DMNORMIP):   call dmnorm(_dm4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
26063     +   if _dm4 = 'A43'  then do;
MPRINT(EM_DIAGRAM):   if _dm4 = 'A43' then do;
26064     +      pourposeA43 = 1;
MPRINT(EM_DIAGRAM):   pourposeA43 = 1;
26065     +   end;
MPRINT(EM_DIAGRAM):   end;
26066     +   else if _dm4 = 'A40'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A40' then do;
26067     +      pourposeA40 = 1;
MPRINT(EM_DIAGRAM):   pourposeA40 = 1;
26068     +   end;
MPRINT(EM_DIAGRAM):   end;
26069     +   else if _dm4 = 'A42'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A42' then do;
26070     +      pourposeA42 = 1;
MPRINT(EM_DIAGRAM):   pourposeA42 = 1;
26071     +   end;
MPRINT(EM_DIAGRAM):   end;
26072     +   else if _dm4 = 'A49'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A49' then do;
26073     +      pourposeA40 = -1;
MPRINT(EM_DIAGRAM):   pourposeA40 = -1;
26074     +      pourposeA41 = -1;
MPRINT(EM_DIAGRAM):   pourposeA41 = -1;
26075     +      pourposeA410 = -1;
MPRINT(EM_DIAGRAM):   pourposeA410 = -1;
26076     +      pourposeA42 = -1;
MPRINT(EM_DIAGRAM):   pourposeA42 = -1;
26077     +      pourposeA43 = -1;
MPRINT(EM_DIAGRAM):   pourposeA43 = -1;
26078     +      pourposeA44 = -1;
MPRINT(EM_DIAGRAM):   pourposeA44 = -1;
26079     +      pourposeA45 = -1;
MPRINT(EM_DIAGRAM):   pourposeA45 = -1;
26080     +      pourposeA46 = -1;
MPRINT(EM_DIAGRAM):   pourposeA46 = -1;
26081     +      pourposeA48 = -1;
MPRINT(EM_DIAGRAM):   pourposeA48 = -1;
26082     +   end;
MPRINT(EM_DIAGRAM):   end;
26083     +   else if _dm4 = 'A41'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A41' then do;
26084     +      pourposeA41 = 1;
MPRINT(EM_DIAGRAM):   pourposeA41 = 1;
26085     +   end;
MPRINT(EM_DIAGRAM):   end;
26086     +   else if _dm4 = 'A46'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A46' then do;
26087     +      pourposeA46 = 1;
MPRINT(EM_DIAGRAM):   pourposeA46 = 1;
26088     +   end;
MPRINT(EM_DIAGRAM):   end;
26089     +   else if _dm4 = 'A45'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A45' then do;
26090     +      pourposeA45 = 1;
MPRINT(EM_DIAGRAM):   pourposeA45 = 1;
26091     +   end;
MPRINT(EM_DIAGRAM):   end;
26092     +   else if _dm4 = 'A44'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A44' then do;
26093     +      pourposeA44 = 1;
MPRINT(EM_DIAGRAM):   pourposeA44 = 1;
26094     +   end;
MPRINT(EM_DIAGRAM):   end;
26095     +   else if _dm4 = 'A410'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A410' then do;
26096     +      pourposeA410 = 1;
MPRINT(EM_DIAGRAM):   pourposeA410 = 1;
26097     +   end;
MPRINT(EM_DIAGRAM):   end;
26098     +   else if _dm4 = 'A48'  then do;
MPRINT(EM_DIAGRAM):   else if _dm4 = 'A48' then do;
26099     +      pourposeA48 = 1;
MPRINT(EM_DIAGRAM):   pourposeA48 = 1;
26100     +   end;
MPRINT(EM_DIAGRAM):   end;
26101     +   else do;
MPRINT(EM_DIAGRAM):   else do;
26102     +      pourposeA40 = .;
MPRINT(EM_DIAGRAM):   pourposeA40 = .;
26103     +      pourposeA41 = .;
MPRINT(EM_DIAGRAM):   pourposeA41 = .;
26104     +      pourposeA410 = .;
MPRINT(EM_DIAGRAM):   pourposeA410 = .;
26105     +      pourposeA42 = .;
MPRINT(EM_DIAGRAM):   pourposeA42 = .;
26106     +      pourposeA43 = .;
MPRINT(EM_DIAGRAM):   pourposeA43 = .;
26107     +      pourposeA44 = .;
MPRINT(EM_DIAGRAM):   pourposeA44 = .;
26108     +      pourposeA45 = .;
MPRINT(EM_DIAGRAM):   pourposeA45 = .;
26109     +      pourposeA46 = .;
MPRINT(EM_DIAGRAM):   pourposeA46 = .;
26110     +      pourposeA48 = .;
MPRINT(EM_DIAGRAM):   pourposeA48 = .;
26111     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
26112     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
26113     +   end;
MPRINT(EM_DIAGRAM):   end;
26114     +end;
MPRINT(EM_DIAGRAM):   end;
26115     +
26116     +*** Generate dummy variables for residence ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for residence ;
26117     +drop residence1 residence2 residence3 ;
MPRINT(EM_DIAGRAM):   drop residence1 residence2 residence3 ;
26118     +if missing( residence ) then do;
MPRINT(EM_DIAGRAM):   if missing( residence ) then do;
26119     +   residence1 = .;
MPRINT(EM_DIAGRAM):   residence1 = .;
26120     +   residence2 = .;
MPRINT(EM_DIAGRAM):   residence2 = .;
26121     +   residence3 = .;
MPRINT(EM_DIAGRAM):   residence3 = .;
26122     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
26123     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
26124     +end;
MPRINT(EM_DIAGRAM):   end;
26125     +else do;
MPRINT(EM_DIAGRAM):   else do;
26126     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
26127     +   _dm12 = put( residence , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( residence , BEST12. );
26128     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
26129     +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
26130     +      residence1 = -1;
MPRINT(EM_DIAGRAM):   residence1 = -1;
26131     +      residence2 = -1;
MPRINT(EM_DIAGRAM):   residence2 = -1;
26132     +      residence3 = -1;
MPRINT(EM_DIAGRAM):   residence3 = -1;
26133     +   end;
MPRINT(EM_DIAGRAM):   end;
26134     +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
26135     +      residence1 = 0;
MPRINT(EM_DIAGRAM):   residence1 = 0;
26136     +      residence2 = 1;
MPRINT(EM_DIAGRAM):   residence2 = 1;
26137     +      residence3 = 0;
MPRINT(EM_DIAGRAM):   residence3 = 0;
26138     +   end;
MPRINT(EM_DIAGRAM):   end;
26139     +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
26140     +      residence1 = 0;
MPRINT(EM_DIAGRAM):   residence1 = 0;
26141     +      residence2 = 0;
MPRINT(EM_DIAGRAM):   residence2 = 0;
26142     +      residence3 = 1;
MPRINT(EM_DIAGRAM):   residence3 = 1;
26143     +   end;
MPRINT(EM_DIAGRAM):   end;
26144     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
26145     +      residence1 = 1;
MPRINT(EM_DIAGRAM):   residence1 = 1;
26146     +      residence2 = 0;
MPRINT(EM_DIAGRAM):   residence2 = 0;
26147     +      residence3 = 0;
MPRINT(EM_DIAGRAM):   residence3 = 0;
26148     +   end;
MPRINT(EM_DIAGRAM):   end;
26149     +   else do;
MPRINT(EM_DIAGRAM):   else do;
26150     +      residence1 = .;
MPRINT(EM_DIAGRAM):   residence1 = .;
26151     +      residence2 = .;
MPRINT(EM_DIAGRAM):   residence2 = .;
26152     +      residence3 = .;
MPRINT(EM_DIAGRAM):   residence3 = .;
26153     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
26154     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
26155     +   end;
MPRINT(EM_DIAGRAM):   end;
26156     +end;
MPRINT(EM_DIAGRAM):   end;
26157     +
26158     +*** Generate dummy variables for savings ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for savings ;
26159     +drop savingsA61 savingsA62 savingsA63 savingsA64 ;
MPRINT(EM_DIAGRAM):   drop savingsA61 savingsA62 savingsA63 savingsA64 ;
26160     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
26161     +savingsA61 = 0;
MPRINT(EM_DIAGRAM):   savingsA61 = 0;
26162     +savingsA62 = 0;
MPRINT(EM_DIAGRAM):   savingsA62 = 0;
26163     +savingsA63 = 0;
MPRINT(EM_DIAGRAM):   savingsA63 = 0;
26164     +savingsA64 = 0;
MPRINT(EM_DIAGRAM):   savingsA64 = 0;
26165     +if missing( savings ) then do;
MPRINT(EM_DIAGRAM):   if missing( savings ) then do;
26166     +   savingsA61 = .;
MPRINT(EM_DIAGRAM):   savingsA61 = .;
26167     +   savingsA62 = .;
MPRINT(EM_DIAGRAM):   savingsA62 = .;
26168     +   savingsA63 = .;
MPRINT(EM_DIAGRAM):   savingsA63 = .;
26169     +   savingsA64 = .;
MPRINT(EM_DIAGRAM):   savingsA64 = .;
26170     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
26171     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
26172     +end;
MPRINT(EM_DIAGRAM):   end;
26173     +else do;
MPRINT(EM_DIAGRAM):   else do;
26174     +   length _dm3 $ 3; drop _dm3 ;
MPRINT(EM_DIAGRAM):   length _dm3 $ 3;
MPRINT(EM_DIAGRAM):   drop _dm3 ;
26175     +   _dm3 = put( savings , $3. );
MPRINT(EM_DIAGRAM):   _dm3 = put( savings , $3. );
26176     +   %DMNORMIP( _dm3 )
MPRINT(DMNORMIP):   call dmnorm(_dm3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
26177     +   if _dm3 = 'A61'  then do;
MPRINT(EM_DIAGRAM):   if _dm3 = 'A61' then do;
26178     +      savingsA61 = 1;
MPRINT(EM_DIAGRAM):   savingsA61 = 1;
26179     +   end;
MPRINT(EM_DIAGRAM):   end;
26180     +   else if _dm3 = 'A65'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A65' then do;
26181     +      savingsA61 = -1;
MPRINT(EM_DIAGRAM):   savingsA61 = -1;
26182     +      savingsA62 = -1;
MPRINT(EM_DIAGRAM):   savingsA62 = -1;
26183     +      savingsA63 = -1;
MPRINT(EM_DIAGRAM):   savingsA63 = -1;
26184     +      savingsA64 = -1;
MPRINT(EM_DIAGRAM):   savingsA64 = -1;
26185     +   end;
MPRINT(EM_DIAGRAM):   end;
26186     +   else if _dm3 = 'A62'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A62' then do;
26187     +      savingsA62 = 1;
MPRINT(EM_DIAGRAM):   savingsA62 = 1;
26188     +   end;
MPRINT(EM_DIAGRAM):   end;
26189     +   else if _dm3 = 'A63'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A63' then do;
26190     +      savingsA63 = 1;
MPRINT(EM_DIAGRAM):   savingsA63 = 1;
26191     +   end;
MPRINT(EM_DIAGRAM):   end;
26192     +   else if _dm3 = 'A64'  then do;
MPRINT(EM_DIAGRAM):   else if _dm3 = 'A64' then do;
26193     +      savingsA64 = 1;
MPRINT(EM_DIAGRAM):   savingsA64 = 1;
26194     +   end;
MPRINT(EM_DIAGRAM):   end;
26195     +   else do;
MPRINT(EM_DIAGRAM):   else do;
26196     +      savingsA61 = .;
MPRINT(EM_DIAGRAM):   savingsA61 = .;
26197     +      savingsA62 = .;
MPRINT(EM_DIAGRAM):   savingsA62 = .;
26198     +      savingsA63 = .;
MPRINT(EM_DIAGRAM):   savingsA63 = .;
26199     +      savingsA64 = .;
MPRINT(EM_DIAGRAM):   savingsA64 = .;
26200     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
26201     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
26202     +   end;
MPRINT(EM_DIAGRAM):   end;
26203     +end;
MPRINT(EM_DIAGRAM):   end;
26204     +
26205     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
26206     +*** Checking missing input Interval
26207     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
26208     +
26209     +IF NMISS(
26210     +   age ,
26211     +   duration   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( age , duration ) THEN DO;
26212     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
26213     +
26214     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
26215     +END;
MPRINT(EM_DIAGRAM):   END;
26216     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
26217     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
26218     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
26219     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
26220     +   S_age  =     -3.1260583987077 +     0.08769801535329 * age ;
MPRINT(EM_DIAGRAM):   S_age = -3.1260583987077 + 0.08769801535329 * age ;
26221     +   S_duration  =    -1.72080747443144 +     0.08139504237462 * duration ;
MPRINT(EM_DIAGRAM):   S_duration = -1.72080747443144 + 0.08139504237462 * duration ;
26222     +END;
MPRINT(EM_DIAGRAM):   END;
26223     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
26224     +   IF MISSING( age ) THEN S_age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( age ) THEN S_age = . ;
26225     +   ELSE S_age  =     -3.1260583987077 +     0.08769801535329 * age ;
MPRINT(EM_DIAGRAM):   ELSE S_age = -3.1260583987077 + 0.08769801535329 * age ;
26226     +   IF MISSING( duration ) THEN S_duration  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( duration ) THEN S_duration = . ;
26227     +   ELSE S_duration  =    -1.72080747443144 +     0.08139504237462 * duration ;
MPRINT(EM_DIAGRAM):   ELSE S_duration = -1.72080747443144 + 0.08139504237462 * duration ;
26228     +END;
MPRINT(EM_DIAGRAM):   END;
26229     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
26230     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
26231     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
26232     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
26233     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
26234     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
26235     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
26236     +   H11  =     3.88470315034752 * S_age  +     3.02606491130675 * S_duration ;
MPRINT(EM_DIAGRAM):   H11 = 3.88470315034752 * S_age + 3.02606491130675 * S_duration ;
26237     +   H12  =     1.92474614192261 * S_age  +     1.84703719017681 * S_duration ;
MPRINT(EM_DIAGRAM):   H12 = 1.92474614192261 * S_age + 1.84703719017681 * S_duration ;
26238     +   H13  =    -3.83220328218462 * S_age  +    -0.69731880291194 * S_duration ;
MPRINT(EM_DIAGRAM):   H13 = -3.83220328218462 * S_age + -0.69731880291194 * S_duration ;
26239     +   H14  =      1.2128725473386 * S_age  +    -4.83920139652938 * S_duration ;
MPRINT(EM_DIAGRAM):   H14 = 1.2128725473386 * S_age + -4.83920139652938 * S_duration ;
26240     +   H15  =     3.15823655910557 * S_age  +     1.97067002064809 * S_duration ;
MPRINT(EM_DIAGRAM):   H15 = 3.15823655910557 * S_age + 1.97067002064809 * S_duration ;
26241     +   H16  =     1.86063342364953 * S_age  +      2.2821047710014 * S_duration ;
MPRINT(EM_DIAGRAM):   H16 = 1.86063342364953 * S_age + 2.2821047710014 * S_duration ;
26242     +   H11  = H11  +     5.85336113518091 * acc_statusA11
26243     +          +    -1.51910872522856 * acc_statusA12  +     2.85267673133872 *
26244     +        acc_statusA13  +    -0.04558862107847 * credit_historyA30
26245     +          +    -9.15832724294458 * credit_historyA31
26246     +          +     1.80130829761548 * credit_historyA32
26247     +          +     1.01253783638328 * credit_historyA33
26248     +          +     1.52665521811108 * employmentA71  +     5.80408288482473 *
26249     +        employmentA72  +     1.59365347153506 * employmentA73
26250     +          +    -1.82413662435134 * employmentA74  +    -2.58965920027424 *
26251     +        instalment1  +     1.28904745176096 * instalment2
26252     +          +     1.25649457703727 * instalment3  +     0.23861980471539 *
26253     +        jobA171  +     1.42735134863783 * jobA172  +    -2.47517777695746 *
26254     +        jobA173  +       5.240287793369 * other_instalmentsA141
26255     +          +     0.14730633181981 * other_instalmentsA142
26256     +          +    -1.18802225261226 * personal_statusA91
26257     +          +     6.92742477634271 * personal_statusA92
26258     +          +    -3.15424088763945 * personal_statusA93
26259     +          +    -1.90490833567753 * pourposeA40  +     2.10830562889933 *
26260     +        pourposeA41  +    -1.56025448177615 * pourposeA410
26261     +          +     3.10704481686831 * pourposeA42  +    -6.64908873200413 *
26262     +        pourposeA43  +    -0.11415751993223 * pourposeA44
26263     +          +    -1.82088346011256 * pourposeA45  +     1.92391080202812 *
26264     +        pourposeA46  +     0.19738482075784 * pourposeA48
26265     +          +     2.20267787404329 * residence1  +    -0.53226123369492 *
26266     +        residence2  +     1.21273686985158 * residence3
26267     +          +     1.33881561206283 * savingsA61  +    -5.52577706951782 *
26268     +        savingsA62  +     3.41905048053849 * savingsA63
26269     +          +     1.44923641640566 * savingsA64 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 5.85336113518091 * acc_statusA11 + -1.51910872522856 * acc_statusA12 + 2.85267673133872 * acc_statusA13 + -0.04558862107847 * credit_historyA30 + -9.15832724294458 * credit_historyA31 + 1.80130829761548 * 
credit_historyA32 + 1.01253783638328 * credit_historyA33 + 1.52665521811108 * employmentA71 + 5.80408288482473 * employmentA72 + 1.59365347153506 * employmentA73 + -1.82413662435134 * employmentA74 + -2.58965920027424 * instalment1 + 1.28904745176096 * 
instalment2 + 1.25649457703727 * instalment3 + 0.23861980471539 * jobA171 + 1.42735134863783 * jobA172 + -2.47517777695746 * jobA173 + 5.240287793369 * other_instalmentsA141 + 0.14730633181981 * other_instalmentsA142 + -1.18802225261226 * 
personal_statusA91 + 6.92742477634271 * personal_statusA92 + -3.15424088763945 * personal_statusA93 + -1.90490833567753 * pourposeA40 + 2.10830562889933 * pourposeA41 + -1.56025448177615 * pourposeA410 + 3.10704481686831 * pourposeA42 + -6.64908873200413 
* pourposeA43 + -0.11415751993223 * pourposeA44 + -1.82088346011256 * pourposeA45 + 1.92391080202812 * pourposeA46 + 0.19738482075784 * pourposeA48 + 2.20267787404329 * residence1 + -0.53226123369492 * residence2 + 1.21273686985158 * residence3 + 
1.33881561206283 * savingsA61 + -5.52577706951782 * savingsA62 + 3.41905048053849 * savingsA63 + 1.44923641640566 * savingsA64 ;
26270     +   H12  = H12  +     0.40874973128462 * acc_statusA11
26271     +          +     3.53972813950845 * acc_statusA12  +     -2.5365612755193 *
26272     +        acc_statusA13  +      0.2960446296625 * credit_historyA30
26273     +          +     -0.8191392350611 * credit_historyA31
26274     +          +    -1.28605090922108 * credit_historyA32
26275     +          +    -0.18605400840381 * credit_historyA33
26276     +          +    -0.72818255924901 * employmentA71  +     2.64248388614912 *
26277     +        employmentA72  +     -2.5083438470866 * employmentA73
26278     +          +    -3.99823325721787 * employmentA74  +     3.74132781268226 *
26279     +        instalment1  +     2.43617356630769 * instalment2
26280     +          +     2.06753271682016 * instalment3  +     0.43347341806171 *
26281     +        jobA171  +     0.79659540117967 * jobA172  +    -4.00712774486279 *
26282     +        jobA173  +     0.32180456225706 * other_instalmentsA141
26283     +          +     5.30008192937965 * other_instalmentsA142
26284     +          +     2.50939576335502 * personal_statusA91
26285     +          +    -3.17832247827687 * personal_statusA92
26286     +          +     3.90285486423423 * personal_statusA93
26287     +          +     -3.4859867600795 * pourposeA40  +     2.93757854639238 *
26288     +        pourposeA41  +     0.57234622702094 * pourposeA410
26289     +          +    -3.17908352121335 * pourposeA42  +    -2.44399719483471 *
26290     +        pourposeA43  +    -0.14552835222264 * pourposeA44
26291     +          +     1.30633361508351 * pourposeA45  +      0.6817908908468 *
26292     +        pourposeA46  +    -0.35508968853294 * pourposeA48
26293     +          +    -3.81506777797343 * residence1  +     0.03235463658955 *
26294     +        residence2  +    -2.79820659583566 * residence3
26295     +          +    -0.79421069338311 * savingsA61  +     3.59460140605684 *
26296     +        savingsA62  +     1.85925499950209 * savingsA63
26297     +          +     1.72977239750017 * savingsA64 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.40874973128462 * acc_statusA11 + 3.53972813950845 * acc_statusA12 + -2.5365612755193 * acc_statusA13 + 0.2960446296625 * credit_historyA30 + -0.8191392350611 * credit_historyA31 + -1.28605090922108 * credit_historyA32 + 
-0.18605400840381 * credit_historyA33 + -0.72818255924901 * employmentA71 + 2.64248388614912 * employmentA72 + -2.5083438470866 * employmentA73 + -3.99823325721787 * employmentA74 + 3.74132781268226 * instalment1 + 2.43617356630769 * instalment2 + 
2.06753271682016 * instalment3 + 0.43347341806171 * jobA171 + 0.79659540117967 * jobA172 + -4.00712774486279 * jobA173 + 0.32180456225706 * other_instalmentsA141 + 5.30008192937965 * other_instalmentsA142 + 2.50939576335502 * personal_statusA91 + 
-3.17832247827687 * personal_statusA92 + 3.90285486423423 * personal_statusA93 + -3.4859867600795 * pourposeA40 + 2.93757854639238 * pourposeA41 + 0.57234622702094 * pourposeA410 + -3.17908352121335 * pourposeA42 + -2.44399719483471 * pourposeA43 + 
-0.14552835222264 * pourposeA44 + 1.30633361508351 * pourposeA45 + 0.6817908908468 * pourposeA46 + -0.35508968853294 * pourposeA48 + -3.81506777797343 * residence1 + 0.03235463658955 * residence2 + -2.79820659583566 * residence3 + -0.79421069338311 * 
savingsA61 + 3.59460140605684 * savingsA62 + 1.85925499950209 * savingsA63 + 1.72977239750017 * savingsA64 ;
26298     +   H13  = H13  +     0.02627109434597 * acc_statusA11
26299     +          +    -0.40414025011613 * acc_statusA12  +    -0.40893626735337 *
26300     +        acc_statusA13  +    -10.1461835058999 * credit_historyA30
26301     +          +    -5.40983906216908 * credit_historyA31
26302     +          +     5.58968201800791 * credit_historyA32
26303     +          +    -1.89148284635023 * credit_historyA33
26304     +          +    -0.69034165498916 * employmentA71  +    -6.28231426802577 *
26305     +        employmentA72  +    -1.62163276229487 * employmentA73
26306     +          +     3.51711748332864 * employmentA74  +     4.01953098339699 *
26307     +        instalment1  +    -3.42909784690118 * instalment2
26308     +          +     -0.3246805130258 * instalment3  +     3.61646209516151 *
26309     +        jobA171  +    -4.92852111368414 * jobA172  +     2.36899306252136 *
26310     +        jobA173  +     1.84176151329654 * other_instalmentsA141
26311     +          +     3.61336321564192 * other_instalmentsA142
26312     +          +    -6.28988256069041 * personal_statusA91
26313     +          +    -4.95898924200421 * personal_statusA92
26314     +          +     4.19358037873929 * personal_statusA93
26315     +          +     2.60179668150474 * pourposeA40  +     3.04783278132385 *
26316     +        pourposeA41  +    -1.85825181368882 * pourposeA410
26317     +          +    -3.36798496969519 * pourposeA42  +     7.19094497337727 *
26318     +        pourposeA43  +    -2.00430699319357 * pourposeA44
26319     +          +    -3.46396946833663 * pourposeA45  +    -3.85881725299088 *
26320     +        pourposeA46  +     2.45196424033222 * pourposeA48
26321     +          +     3.15575710649774 * residence1  +    -3.44369900456848 *
26322     +        residence2  +    -3.53309183322318 * residence3
26323     +          +      3.7239893069196 * savingsA61  +     2.46380277484355 *
26324     +        savingsA62  +     4.20919805297718 * savingsA63
26325     +          +     10.2300859432272 * savingsA64 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02627109434597 * acc_statusA11 + -0.40414025011613 * acc_statusA12 + -0.40893626735337 * acc_statusA13 + -10.1461835058999 * credit_historyA30 + -5.40983906216908 * credit_historyA31 + 5.58968201800791 * 
credit_historyA32 + -1.89148284635023 * credit_historyA33 + -0.69034165498916 * employmentA71 + -6.28231426802577 * employmentA72 + -1.62163276229487 * employmentA73 + 3.51711748332864 * employmentA74 + 4.01953098339699 * instalment1 + -3.42909784690118 * 
instalment2 + -0.3246805130258 * instalment3 + 3.61646209516151 * jobA171 + -4.92852111368414 * jobA172 + 2.36899306252136 * jobA173 + 1.84176151329654 * other_instalmentsA141 + 3.61336321564192 * other_instalmentsA142 + -6.28988256069041 * 
personal_statusA91 + -4.95898924200421 * personal_statusA92 + 4.19358037873929 * personal_statusA93 + 2.60179668150474 * pourposeA40 + 3.04783278132385 * pourposeA41 + -1.85825181368882 * pourposeA410 + -3.36798496969519 * pourposeA42 + 7.19094497337727 * 
pourposeA43 + -2.00430699319357 * pourposeA44 + -3.46396946833663 * pourposeA45 + -3.85881725299088 * pourposeA46 + 2.45196424033222 * pourposeA48 + 3.15575710649774 * residence1 + -3.44369900456848 * residence2 + -3.53309183322318 * residence3 + 
3.7239893069196 * savingsA61 + 2.46380277484355 * savingsA62 + 4.20919805297718 * savingsA63 + 10.2300859432272 * savingsA64 ;
26326     +   H14  = H14  +    -3.47116496850798 * acc_statusA11
26327     +          +    -0.04028267429063 * acc_statusA12  +     -1.8070213103054 *
26328     +        acc_statusA13  +     4.69985662749945 * credit_historyA30
26329     +          +     2.45453531178196 * credit_historyA31
26330     +          +    -0.57311454501342 * credit_historyA32
26331     +          +    -2.28308085818639 * credit_historyA33
26332     +          +    -1.23952941936394 * employmentA71  +    -3.46380378159007 *
26333     +        employmentA72  +     2.85524520194781 * employmentA73
26334     +          +    -2.09557419452106 * employmentA74  +     2.01765631144493 *
26335     +        instalment1  +     0.43903469840887 * instalment2
26336     +          +    -3.36075870796471 * instalment3  +    -1.61103118193839 *
26337     +        jobA171  +     0.40353409733314 * jobA172  +    -2.24160289202626 *
26338     +        jobA173  +    -5.57372126640324 * other_instalmentsA141
26339     +          +     2.51516233044409 * other_instalmentsA142
26340     +          +    -1.95203510492347 * personal_statusA91
26341     +          +    -0.09443056582913 * personal_statusA92
26342     +          +     0.78232823216767 * personal_statusA93
26343     +          +    -0.58109234371231 * pourposeA40  +     2.56034231156012 *
26344     +        pourposeA41  +     1.95353925115582 * pourposeA410
26345     +          +     0.17783814692462 * pourposeA42  +     2.40613701820139 *
26346     +        pourposeA43  +    -0.22370051076584 * pourposeA44
26347     +          +    -2.90155206781463 * pourposeA45  +      0.4247474192809 *
26348     +        pourposeA46  +    -4.03278496259953 * pourposeA48
26349     +          +     5.13604873683846 * residence1  +    -3.53899220254688 *
26350     +        residence2  +    -0.90760752155468 * residence3
26351     +          +    -5.25220877128637 * savingsA61  +     2.09667916798316 *
26352     +        savingsA62  +    -6.55233802541035 * savingsA63
26353     +          +     6.03035566557181 * savingsA64 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -3.47116496850798 * acc_statusA11 + -0.04028267429063 * acc_statusA12 + -1.8070213103054 * acc_statusA13 + 4.69985662749945 * credit_historyA30 + 2.45453531178196 * credit_historyA31 + -0.57311454501342 * 
credit_historyA32 + -2.28308085818639 * credit_historyA33 + -1.23952941936394 * employmentA71 + -3.46380378159007 * employmentA72 + 2.85524520194781 * employmentA73 + -2.09557419452106 * employmentA74 + 2.01765631144493 * instalment1 + 0.43903469840887 * 
instalment2 + -3.36075870796471 * instalment3 + -1.61103118193839 * jobA171 + 0.40353409733314 * jobA172 + -2.24160289202626 * jobA173 + -5.57372126640324 * other_instalmentsA141 + 2.51516233044409 * other_instalmentsA142 + -1.95203510492347 * 
personal_statusA91 + -0.09443056582913 * personal_statusA92 + 0.78232823216767 * personal_statusA93 + -0.58109234371231 * pourposeA40 + 2.56034231156012 * pourposeA41 + 1.95353925115582 * pourposeA410 + 0.17783814692462 * pourposeA42 + 2.40613701820139 * 
pourposeA43 + -0.22370051076584 * pourposeA44 + -2.90155206781463 * pourposeA45 + 0.4247474192809 * pourposeA46 + -4.03278496259953 * pourposeA48 + 5.13604873683846 * residence1 + -3.53899220254688 * residence2 + -0.90760752155468 * residence3 + 
-5.25220877128637 * savingsA61 + 2.09667916798316 * savingsA62 + -6.55233802541035 * savingsA63 + 6.03035566557181 * savingsA64 ;
26354     +   H15  = H15  +    -5.13870995571291 * acc_statusA11
26355     +          +    -0.93090791599081 * acc_statusA12  +     0.08290689621647 *
26356     +        acc_statusA13  +    -1.75241854349394 * credit_historyA30
26357     +          +      3.4984143918753 * credit_historyA31
26358     +          +    -3.77258138768396 * credit_historyA32
26359     +          +     2.14918665651411 * credit_historyA33
26360     +          +    -0.38166522429418 * employmentA71  +    -4.33876270326727 *
26361     +        employmentA72  +    -0.97591723468346 * employmentA73
26362     +          +      4.3767824413533 * employmentA74  +     2.13229556510306 *
26363     +        instalment1  +     2.18557433541965 * instalment2
26364     +          +      0.8267829825008 * instalment3  +    -0.04920883269904 *
26365     +        jobA171  +      2.9349839310711 * jobA172  +     0.69663453174024 *
26366     +        jobA173  +    -4.83724654443814 * other_instalmentsA141
26367     +          +    -3.42653964690379 * other_instalmentsA142
26368     +          +     2.85887656939615 * personal_statusA91
26369     +          +    -1.13430314595419 * personal_statusA92
26370     +          +    -1.42271967230904 * personal_statusA93
26371     +          +    -5.44371811788823 * pourposeA40  +     2.45416228621317 *
26372     +        pourposeA41  +    -2.15824493043412 * pourposeA410
26373     +          +    -0.32024811687555 * pourposeA42  +    -1.15756130350396 *
26374     +        pourposeA43  +     2.61591592290617 * pourposeA44
26375     +          +     3.98394702967944 * pourposeA45  +     3.54626256299379 *
26376     +        pourposeA46  +     4.07598904926656 * pourposeA48
26377     +          +    -9.79269111967874 * residence1  +     4.68948344453852 *
26378     +        residence2  +     3.51633800177621 * residence3
26379     +          +     1.02670714955746 * savingsA61  +    -1.02645031864036 *
26380     +        savingsA62  +    -1.58793544391311 * savingsA63
26381     +          +     -5.4116583397411 * savingsA64 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -5.13870995571291 * acc_statusA11 + -0.93090791599081 * acc_statusA12 + 0.08290689621647 * acc_statusA13 + -1.75241854349394 * credit_historyA30 + 3.4984143918753 * credit_historyA31 + -3.77258138768396 * 
credit_historyA32 + 2.14918665651411 * credit_historyA33 + -0.38166522429418 * employmentA71 + -4.33876270326727 * employmentA72 + -0.97591723468346 * employmentA73 + 4.3767824413533 * employmentA74 + 2.13229556510306 * instalment1 + 2.18557433541965 * 
instalment2 + 0.8267829825008 * instalment3 + -0.04920883269904 * jobA171 + 2.9349839310711 * jobA172 + 0.69663453174024 * jobA173 + -4.83724654443814 * other_instalmentsA141 + -3.42653964690379 * other_instalmentsA142 + 2.85887656939615 * 
personal_statusA91 + -1.13430314595419 * personal_statusA92 + -1.42271967230904 * personal_statusA93 + -5.44371811788823 * pourposeA40 + 2.45416228621317 * pourposeA41 + -2.15824493043412 * pourposeA410 + -0.32024811687555 * pourposeA42 + 
-1.15756130350396 * pourposeA43 + 2.61591592290617 * pourposeA44 + 3.98394702967944 * pourposeA45 + 3.54626256299379 * pourposeA46 + 4.07598904926656 * pourposeA48 + -9.79269111967874 * residence1 + 4.68948344453852 * residence2 + 3.51633800177621 * 
residence3 + 1.02670714955746 * savingsA61 + -1.02645031864036 * savingsA62 + -1.58793544391311 * savingsA63 + -5.4116583397411 * savingsA64 ;
26382     +   H16  = H16  +     6.24424985639943 * acc_statusA11
26383     +          +    -1.60139591409873 * acc_statusA12  +    -5.44002756333355 *
26384     +        acc_statusA13  +     3.17444613601367 * credit_historyA30
26385     +          +    -3.90366636673192 * credit_historyA31
26386     +          +     1.33445959622971 * credit_historyA32
26387     +          +    -1.93041493262026 * credit_historyA33
26388     +          +    -0.20653100687855 * employmentA71  +    -2.20086833605874 *
26389     +        employmentA72  +     3.60696613615584 * employmentA73
26390     +          +     -5.5715968820629 * employmentA74  +    -0.24735051952392 *
26391     +        instalment1  +    -0.82515283722191 * instalment2
26392     +          +    -0.19410387770336 * instalment3  +    -2.06125962946396 *
26393     +        jobA171  +    -0.27442942387422 * jobA172  +    -0.17324277271499 *
26394     +        jobA173  +    -2.51711411986199 * other_instalmentsA141
26395     +          +      0.3699041882887 * other_instalmentsA142
26396     +          +     0.89559379566286 * personal_statusA91
26397     +          +     0.21915851134358 * personal_statusA92
26398     +          +    -2.80086914950026 * personal_statusA93
26399     +          +     5.50083722026902 * pourposeA40  +    -3.47123237651318 *
26400     +        pourposeA41  +    -3.32176499440496 * pourposeA410
26401     +          +     2.97363831580786 * pourposeA42  +     2.70804786258688 *
26402     +        pourposeA43  +     0.04133492338976 * pourposeA44
26403     +          +    -0.11950133351543 * pourposeA45  +    -0.34449869871402 *
26404     +        pourposeA46  +     0.24955479539046 * pourposeA48
26405     +          +     0.23623412266027 * residence1  +    -0.01589590342722 *
26406     +        residence2  +     3.16274821650315 * residence3
26407     +          +     4.76881953811668 * savingsA61  +     1.12466433888124 *
26408     +        savingsA62  +    -2.81910088287391 * savingsA63
26409     +          +    -0.06966627063783 * savingsA64 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 6.24424985639943 * acc_statusA11 + -1.60139591409873 * acc_statusA12 + -5.44002756333355 * acc_statusA13 + 3.17444613601367 * credit_historyA30 + -3.90366636673192 * credit_historyA31 + 1.33445959622971 * 
credit_historyA32 + -1.93041493262026 * credit_historyA33 + -0.20653100687855 * employmentA71 + -2.20086833605874 * employmentA72 + 3.60696613615584 * employmentA73 + -5.5715968820629 * employmentA74 + -0.24735051952392 * instalment1 + -0.82515283722191 * 
instalment2 + -0.19410387770336 * instalment3 + -2.06125962946396 * jobA171 + -0.27442942387422 * jobA172 + -0.17324277271499 * jobA173 + -2.51711411986199 * other_instalmentsA141 + 0.3699041882887 * other_instalmentsA142 + 0.89559379566286 * 
personal_statusA91 + 0.21915851134358 * personal_statusA92 + -2.80086914950026 * personal_statusA93 + 5.50083722026902 * pourposeA40 + -3.47123237651318 * pourposeA41 + -3.32176499440496 * pourposeA410 + 2.97363831580786 * pourposeA42 + 2.70804786258688 * 
pourposeA43 + 0.04133492338976 * pourposeA44 + -0.11950133351543 * pourposeA45 + -0.34449869871402 * pourposeA46 + 0.24955479539046 * pourposeA48 + 0.23623412266027 * residence1 + -0.01589590342722 * residence2 + 3.16274821650315 * residence3 + 
4.76881953811668 * savingsA61 + 1.12466433888124 * savingsA62 + -2.81910088287391 * savingsA63 + -0.06966627063783 * savingsA64 ;
26410     +   H11  =    -6.09377765773818 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -6.09377765773818 + H11 ;
26411     +   H12  =    -2.76875271195626 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.76875271195626 + H12 ;
26412     +   H13  =    -4.21500268270065 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -4.21500268270065 + H13 ;
26413     +   H14  =     10.6484786799228 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 10.6484786799228 + H14 ;
26414     +   H15  =     -7.0834543217775 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -7.0834543217775 + H15 ;
26415     +   H16  =    -1.38516541840178 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.38516541840178 + H16 ;
26416     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
26417     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
26418     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
26419     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
26420     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
26421     +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
26422     +END;
MPRINT(EM_DIAGRAM):   END;
26423     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
26424     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
26425     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
26426     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
26427     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
26428     +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
26429     +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
26430     +END;
MPRINT(EM_DIAGRAM):   END;
26431     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
26432     +*** Writing the Node default ;
MPRINT(EM_DIAGRAM):   *** Writing the Node default ;
26433     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
26434     +
26435     +*** Generate dummy variables for default ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for default ;
26436     +drop default1 default0 ;
MPRINT(EM_DIAGRAM):   drop default1 default0 ;
26437     +label F_default = 'From: default' ;
MPRINT(EM_DIAGRAM):   label F_default = 'From: default' ;
26438     +length F_default $ 12;
MPRINT(EM_DIAGRAM):   length F_default $ 12;
26439     +F_default = put( default , BEST12. );
MPRINT(EM_DIAGRAM):   F_default = put( default , BEST12. );
26440     +%DMNORMIP( F_default )
MPRINT(DMNORMIP):   call dmnorm(F_default,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
26441     +if missing( default ) then do;
MPRINT(EM_DIAGRAM):   if missing( default ) then do;
26442     +   default1 = .;
MPRINT(EM_DIAGRAM):   default1 = .;
26443     +   default0 = .;
MPRINT(EM_DIAGRAM):   default0 = .;
26444     +end;
MPRINT(EM_DIAGRAM):   end;
26445     +else do;
MPRINT(EM_DIAGRAM):   else do;
26446     +   if F_default = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_default = '0' then do;
26447     +      default1 = 0;
MPRINT(EM_DIAGRAM):   default1 = 0;
26448     +      default0 = 1;
MPRINT(EM_DIAGRAM):   default0 = 1;
26449     +   end;
MPRINT(EM_DIAGRAM):   end;
26450     +   else if F_default = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_default = '1' then do;
26451     +      default1 = 1;
MPRINT(EM_DIAGRAM):   default1 = 1;
26452     +      default0 = 0;
MPRINT(EM_DIAGRAM):   default0 = 0;
26453     +   end;
MPRINT(EM_DIAGRAM):   end;
26454     +   else do;
MPRINT(EM_DIAGRAM):   else do;
26455     +      default1 = .;
MPRINT(EM_DIAGRAM):   default1 = .;
26456     +      default0 = .;
MPRINT(EM_DIAGRAM):   default0 = .;
26457     +   end;
MPRINT(EM_DIAGRAM):   end;
26458     +end;
MPRINT(EM_DIAGRAM):   end;
26459     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
26460     +   P_default1  =    -5.62522999260239 * H11  +     2.92428141717916 * H12
26461     +          +    -4.87546792267536 * H13  +    -7.51771208699719 * H14
26462     +          +    -5.85424199814977 * H15  +     4.85181206552492 * H16 ;
MPRINT(EM_DIAGRAM):   P_default1 = -5.62522999260239 * H11 + 2.92428141717916 * H12 + -4.87546792267536 * H13 + -7.51771208699719 * H14 + -5.85424199814977 * H15 + 4.85181206552492 * H16 ;
26463     +   P_default1  =    -3.25147222609689 + P_default1 ;
MPRINT(EM_DIAGRAM):   P_default1 = -3.25147222609689 + P_default1 ;
26464     +   P_default0  = 0;
MPRINT(EM_DIAGRAM):   P_default0 = 0;
26465     +   _MAX_ = MAX (P_default1 , P_default0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_default1 , P_default0 );
26466     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
26467     +   P_default1  = EXP(P_default1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_default1 = EXP(P_default1 - _MAX_);
26468     +   _SUM_ = _SUM_ + P_default1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_default1 ;
26469     +   P_default0  = EXP(P_default0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_default0 = EXP(P_default0 - _MAX_);
26470     +   _SUM_ = _SUM_ + P_default0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_default0 ;
26471     +   P_default1  = P_default1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_default1 = P_default1 / _SUM_;
26472     +   P_default0  = P_default0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_default0 = P_default0 / _SUM_;
26473     +END;
MPRINT(EM_DIAGRAM):   END;
26474     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
26475     +   P_default1  = .;
MPRINT(EM_DIAGRAM):   P_default1 = .;
26476     +   P_default0  = .;
MPRINT(EM_DIAGRAM):   P_default0 = .;
26477     +END;
MPRINT(EM_DIAGRAM):   END;
26478     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
26479     +   P_default1  =                  0.3;
MPRINT(EM_DIAGRAM):   P_default1 = 0.3;
26480     +   P_default0  =                  0.7;
MPRINT(EM_DIAGRAM):   P_default0 = 0.7;
26481     +END;
MPRINT(EM_DIAGRAM):   END;
26482     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
26483     +*** Writing the Residuals  of the Node default ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node default ;
26484     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
26485     +IF MISSING( default1 ) THEN R_default1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( default1 ) THEN R_default1 = . ;
26486     +ELSE R_default1  = default1  - P_default1 ;
MPRINT(EM_DIAGRAM):   ELSE R_default1 = default1 - P_default1 ;
26487     +IF MISSING( default0 ) THEN R_default0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( default0 ) THEN R_default0 = . ;
26488     +ELSE R_default0  = default0  - P_default0 ;
MPRINT(EM_DIAGRAM):   ELSE R_default0 = default0 - P_default0 ;
26489     +
26490     +
26491     +*** Decision Processing;
MPRINT(EM_DIAGRAM):   *** Decision Processing;
26492     +label D_DEFAULT = 'Decision: default' ;
MPRINT(EM_DIAGRAM):   label D_DEFAULT = 'Decision: default' ;
26493     +label EL_DEFAULT = 'Expected Loss: default' ;
MPRINT(EM_DIAGRAM):   label EL_DEFAULT = 'Expected Loss: default' ;
26494     +label BL_DEFAULT = 'Best Loss: default' ;
MPRINT(EM_DIAGRAM):   label BL_DEFAULT = 'Best Loss: default' ;
26495     +label CL_DEFAULT = 'Computed Loss: default' ;
MPRINT(EM_DIAGRAM):   label CL_DEFAULT = 'Computed Loss: default' ;
26496     +
26497     +length D_DEFAULT $ 9;
MPRINT(EM_DIAGRAM):   length D_DEFAULT $ 9;
26498     +
26499     +D_DEFAULT = ' ';
MPRINT(EM_DIAGRAM):   D_DEFAULT = ' ';
26500     +EL_DEFAULT = .;
MPRINT(EM_DIAGRAM):   EL_DEFAULT = .;
26501     +BL_DEFAULT = .;
MPRINT(EM_DIAGRAM):   BL_DEFAULT = .;
26502     +CL_DEFAULT = .;
MPRINT(EM_DIAGRAM):   CL_DEFAULT = .;
26503     +
26504     +*** Compute Expected Consequences and Choose Decision;
MPRINT(EM_DIAGRAM):   *** Compute Expected Consequences and Choose Decision;
26505     +_decnum = 1; drop _decnum;
MPRINT(EM_DIAGRAM):   _decnum = 1;
MPRINT(EM_DIAGRAM):   drop _decnum;
26506     +
26507     +D_DEFAULT = '1' ;
MPRINT(EM_DIAGRAM):   D_DEFAULT = '1' ;
26508     +EL_DEFAULT = P_default1 * 0 + P_default0 * 1;
MPRINT(EM_DIAGRAM):   EL_DEFAULT = P_default1 * 0 + P_default0 * 1;
26509     +drop _sum;
MPRINT(EM_DIAGRAM):   drop _sum;
26510     +_sum = P_default1 * 5 + P_default0 * 0;
MPRINT(EM_DIAGRAM):   _sum = P_default1 * 5 + P_default0 * 0;
26511     +if _sum < EL_DEFAULT + -2.27374E-12 then do;
MPRINT(EM_DIAGRAM):   if _sum < EL_DEFAULT + -2.27374E-12 then do;
26512     +   EL_DEFAULT = _sum; _decnum = 2;
MPRINT(EM_DIAGRAM):   EL_DEFAULT = _sum;
MPRINT(EM_DIAGRAM):   _decnum = 2;
26513     +   D_DEFAULT = '0' ;
MPRINT(EM_DIAGRAM):   D_DEFAULT = '0' ;
26514     +end;
MPRINT(EM_DIAGRAM):   end;
26515     +
26516     +*** Decision Matrix;
MPRINT(EM_DIAGRAM):   *** Decision Matrix;
26517     +array NEURAL2dema [2,2] _temporary_ (
26518     +/* row 1 */  0 5
26519     +/* row 2 */  1 0
26520     +);
MPRINT(EM_DIAGRAM):   array NEURAL2dema [2,2] _temporary_ ( 0 5 1 0 );
26521     +
26522     +*** Find Index of Target Category;
MPRINT(EM_DIAGRAM):   *** Find Index of Target Category;
26523     +drop _tarnum; select( F_default );
MPRINT(EM_DIAGRAM):   drop _tarnum;
MPRINT(EM_DIAGRAM):   select( F_default );
26524     +   when('1' ) _tarnum = 1;
MPRINT(EM_DIAGRAM):   when('1' ) _tarnum = 1;
26525     +   when('0' ) _tarnum = 2;
MPRINT(EM_DIAGRAM):   when('0' ) _tarnum = 2;
26526     +   otherwise _tarnum = 0;
MPRINT(EM_DIAGRAM):   otherwise _tarnum = 0;
26527     +end;
MPRINT(EM_DIAGRAM):   end;
26528     +if _tarnum <= 0 then goto NEURAL2deex;
MPRINT(EM_DIAGRAM):   if _tarnum <= 0 then goto NEURAL2deex;
26529     +
26530     +*** Computed Consequence of Chosen Decision;
MPRINT(EM_DIAGRAM):   *** Computed Consequence of Chosen Decision;
26531     +CL_DEFAULT = NEURAL2dema [_tarnum,_decnum];
MPRINT(EM_DIAGRAM):   CL_DEFAULT = NEURAL2dema [_tarnum,_decnum];
26532     +
26533     +*** Best Possible Consequence of Any Decision without Cost;
MPRINT(EM_DIAGRAM):   *** Best Possible Consequence of Any Decision without Cost;
26534     +array NEURAL2debe [2] _temporary_ ( 0 0);
MPRINT(EM_DIAGRAM):   array NEURAL2debe [2] _temporary_ ( 0 0);
26535     +BL_DEFAULT = NEURAL2debe [_tarnum];
MPRINT(EM_DIAGRAM):   BL_DEFAULT = NEURAL2debe [_tarnum];
26536     +
26537     +
26538     +NEURAL2deex:;
MPRINT(EM_DIAGRAM):   NEURAL2deex:;
26539     +
26540     +*** End Decision Processing ;
MPRINT(EM_DIAGRAM):   *** End Decision Processing ;
26541     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
26542     +*** Writing the I_default  AND U_default ;
MPRINT(EM_DIAGRAM):   *** Writing the I_default AND U_default ;
26543     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
26544     +_MAXP_ = P_default1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_default1 ;
26545     +I_default  = "1           " ;
MPRINT(EM_DIAGRAM):   I_default = "1           " ;
26546     +U_default  =                    1;
MPRINT(EM_DIAGRAM):   U_default = 1;
26547     +IF( _MAXP_ LT P_default0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_default0 ) THEN DO;
26548     +   _MAXP_ = P_default0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_default0 ;
26549     +   I_default  = "0           " ;
MPRINT(EM_DIAGRAM):   I_default = "0           " ;
26550     +   U_default  =                    0;
MPRINT(EM_DIAGRAM):   U_default = 0;
26551     +END;
MPRINT(EM_DIAGRAM):   END;
26552     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
26553     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
26554     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
26555     +drop
26556     +S_age
26557     +S_duration
26558     +H11
26559     +H12
26560     +H13
26561     +H14
26562     +H15
26563     +H16
26564     +;
MPRINT(EM_DIAGRAM):   drop S_age S_duration H11 H12 H13 H14 H15 H16 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
26565      run;

NOTE: DATA STEP view saved on file EMWS5.NEURAL2_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS5.VARCLUS_TEST.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_DIAGRAM):   quit;
26566      quit;
26567      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
26568      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
26569      * Neural2: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural2: Computing metadata for TRAIN data;
26570      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS5.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\Jose\DM_ang\Workspaces\EMWS5\Neural2\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS5.Neural2_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS5.Neural2_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS5.Neural2_TRAIN out=WORK.M09V6BIL noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M09V6BIL;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M09V6BIL(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M09V6BIL;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M09V6BIL;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0B_8RBT NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0B_8RBT;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0B_8RBT;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0MSEAP0(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0B_8RBT;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0B_8RBT;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0B_8RBT;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0B_8RBT;
MPRINT(EMADVISECOLUMNS):   set WORK.M0B_8RBT;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS5.VarClus_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS5.VarClus_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS5.Neural2_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural2";
MPRINT(EM_DIAGRAM):   length model $200;
MPRINT(EM_DIAGRAM):   label MODEL = "Model Node";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEFAULT1") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("R_DEFAULT1") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("P_DEFAULT0") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("R_DEFAULT0") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("F_DEFAULT") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("I_DEFAULT") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("U_DEFAULT") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("D_DEFAULT") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("EL_DEFAULT") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("CL_DEFAULT") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("BL_DEFAULT") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural2";
MPRINT(EM_DIAGRAM):   when("DEFAULT") model = "Neural2";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural2: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
26927      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
26928      set EMWS5.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS5.Neural2_EMINFO;
26929      where DATA='Neural2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural2' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
26930      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS5.NEURAL2_EMINFO.
      WHERE (DATA='Neural2') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

26931      data EMWS5.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS5.Neural2_EMINFO;
26932      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
26933      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
26934      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS5.NEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
26938      run;
26939      data EMWS5.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS5.Neural2_EMINFO;
26940      set EMWS5.Neural2_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS5.Neural2_EMINFO WORK.MODELTEMP_INFO;
26941      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS5.NEURAL2_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS5.NEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

26942      proc sort data = EMWS5.Neural2_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS5.Neural2_EMINFO NOTHREADS;
26943      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
26944      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS5.NEURAL2_EMINFO.
NOTE: The data set EMWS5.NEURAL2_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

26945      proc sort data = EMWS5.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS5.Ids_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
26946      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
26947      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS5.IDS_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

26948      proc sort data = EMWS5.Neural2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS5.Neural2_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
26949      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
26950      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS5.NEURAL2_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

26951      data EMWS5.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS5.Neural2_EMINFO;
26952      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
26953      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
26954      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS5.NEURAL2_EMINFO has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

26955      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
26956      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
26957      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
26958      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

NOTE: View EMWS5.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS5.NEURAL2_TEST.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
